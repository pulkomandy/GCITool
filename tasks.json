{"count":478,"next":null,"previous":null,"results":[{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Add a command-line option (perhaps -m) for Paladin to open a .pld or .proj file and then export it to a Makefile.  Paladin already supports the export, this task it to make that feature available from the command-line.\n\nTo complete this task you will need to:\n\n    Download and compile the app's sources,\n    Run the app and reproduce the bug,\n    Change the code to fix the problem,\n    Test the app again to make sure the problem is gone\n    Make a pull request or submit a patch to the associated repository on github so your changes are integrated.\n\n\nhttps://github.com/HaikuArchives/Paladin/issues/21","tags":["proj","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","bga@bug-br.org.br","anevilyak@gmail.com","pulkomandy@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Add Command-Line Option for Paladin to Export a Makefile","last_modified":"2018-01-13T02:12:43Z","is_beginner":false,"id":5948975137947648,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Paladin/issues/21"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Pick any application hosted on HaikuArchives that has no or few open issues, perhaps a simple or no readme and give it some attention.\n\n    https://github.com/HaikuArchives\n\nThere are 350 or so apps hosted on HaikuArchives. Some of these haven't seen any attention since being moved to HaikuArchives.  For this task, locate one of these hidden gems, build/compile it.  Test it out.  Perhaps update the readme.md file for it, add a screenshot.  Give it a work out.  Identify problem areas and suggest improvements, etc.  These suggestions should be turned into new issues or updates to existing issues.  See if you can uncover a hidden gem that hasn't been seen in awhile and help bring it to life.  Does it have a Haikuporter recipe yet?  Are there .proj files and rsrc files?  Import the .proj files using Paladin and export a makefile.  Use the rc command to turn that rsrc file into an rdef file.  (https://www.haiku-os.org/documents/dev/compile_them_resources/)\n\nResults from this task may vary depending on the application you pick.  We'd like to see the readme fixed up, perhaps with a more up to date in-action screenshot, fixed up build system, such as converting proj  files to makefiles, etc.  New and/or updated open issues.  File changes should be submitted as a pull request. Make a pull request or submit a patch to the associated repository on github so your changes are integrated.\n\nSubmit url to your pull request(s) and one to the issues list for the app you picked.","tags":["haikuarchives","testing","compiling"],"private_metadata":"","mentors":["anevilyak@gmail.com","HumdingerB@googlemail.com","pulkomandy@gmail.com","revolf@gmail.com","diver@gelios.net","waddlesplash@gmail.com","scottmc2@gmail.com"],"max_instances":15,"name":"Find, Build, Test and Fix Up a Hidden Gem Application on HaikuArchives [BONUS]","last_modified":"2018-01-12T19:08:10Z","is_beginner":false,"id":6696946913771520,"categories":[1,2,3,4,5],"external_url":"http://github.com/haikuarchives"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeNetTris**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/BeNetTris\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeNetTris, a client and server for multiplayer Tetris","last_modified":"2018-01-12T03:53:33Z","is_beginner":false,"id":6408583749042176,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **PerfMonitor**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/PerfMonitor\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["waddlesplash@gmail.com","miqlas@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for PerfMonitor, a X-style CPU monitor (Performance Monitor).","last_modified":"2018-01-12T03:51:42Z","is_beginner":false,"id":6404814646804480,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **LightsOff!**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/LightsOff\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for LightsOff!,  a rendition of the original handheld game \"Lights Out!\"","last_modified":"2018-01-12T03:50:52Z","is_beginner":false,"id":6455208840265728,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **MemoChip**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/MemoChip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MemoChip, a simple desktop memo tool, similar to post-it notes.","last_modified":"2018-01-10T17:51:30Z","is_beginner":false,"id":6648214402891776,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeDC**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/BeDC\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeDC, a peer to peer file sharing client for the Direct Connect protocol","last_modified":"2018-01-10T19:30:54Z","is_beginner":false,"id":6087430388056064,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **SilverWing**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/SilverWing\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for SilverWing, a Hotline client","last_modified":"2018-01-10T19:32:12Z","is_beginner":false,"id":6729149504815104,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Bowser**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Bowser\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["diver@gelios.net","anevilyak@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for Bowser, an IRC client that aims to be very easy to use, very elegant, and very stable","last_modified":"2018-01-10T19:35:07Z","is_beginner":false,"id":5791718198738944,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Animator**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Animator\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","anevilyak@gmail.com","richienyhus@gmail.com","begasus@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for Animator, a stop-motion animation tool","last_modified":"2018-01-10T19:34:44Z","is_beginner":false,"id":5455592246214656,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BShisen**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/BShisen\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["diver@gelios.net","jessica.l.hamilton@gmail.com","richienyhus@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for BShisen, a Mahjong style game for Haiku","last_modified":"2018-01-10T07:13:48Z","is_beginner":false,"id":6583180544966656,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Manabu**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Manabu\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["diver@gelios.net","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Manabu, a language training flashcard system for Haiku","last_modified":"2018-01-10T19:34:16Z","is_beginner":false,"id":5400540294938624,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **becaml**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/jessicah/becaml\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["kacperkasper@gmail.com","richienyhus@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for the OCaml language bindings for Haiku (Bonus)","last_modified":"2018-01-10T19:32:50Z","is_beginner":false,"id":6441296031907840,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Java LanguageBindings**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/yourpalal/Haiku-On\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["kacperkasper@gmail.com","richienyhus@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for the Java language bindings for Haiku (Bonus)","last_modified":"2018-01-10T19:33:10Z","is_beginner":false,"id":4603458051112960,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Perl LanguageBindings**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/HaikuLanguageBindings\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for the Perl language bindings for Haiku (Bonus)","last_modified":"2018-01-10T19:33:49Z","is_beginner":false,"id":6205892296966144,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **SageBrush**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/SageBrush\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","richienyhus@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Create a recipe for SageBrush, an Image editor library for Haiku","last_modified":"2018-01-10T21:13:21Z","is_beginner":false,"id":6437101123928064,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeInterfaceCreator**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/BeInterfaceCreator\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeInterfaceCreator, a WYSIWYG GUI designer.","last_modified":"2018-01-09T17:44:20Z","is_beginner":false,"id":5227437073891328,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will be writing a guide on how to use VMware ESXi to virtualise Haiku on a physical server. The article should include screenshots and full step by step instructions. See the article about running [Haiku in VMware Workstation](https://www.haiku-os.org/guides/virtualizing/vmware-workstation) for an example of previously completed guide. \n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a physical server and a version of [VMware ESXi](https://www.vmware.com/products/esxi-and-esx.html).\n\nThe article is written in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.\n \nYou should submit a few screenshots early to get mentor feedback to make sure you are on the right track.","tags":["article","writing","markdown","vmware esxi","server"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to run Haiku with VMware ESXi","last_modified":"2018-01-10T20:34:49Z","is_beginner":false,"id":4710636007194624,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **StyledEditPlus**. As Paradoxianer is a long term member of the Haiku community, it would be nice to honour him by creating a recipe for his StyledEditPlus application that he has been working on for a few years now.\n\nYou can find the sources on the project homepage: \nhttps://github.com/Paradoxianer/StyledEditPlus\n\nThe recipe should be added to haikuports at haikuports/haiku-apps/stylededitplus/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","makefile-engine","compilation"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for StyledEditPlus,  an improved Version of StyledEdit","last_modified":"2018-01-10T17:50:41Z","is_beginner":false,"id":5444262525140992,"categories":[1],"external_url":"https://github.com/Paradoxianer/StyledEditPlus"},{"status":1,"time_to_complete_in_days":4,"program_year":2017,"description":"For this task you have to write a script or storyboard with screenshots for a video on how to run Haiku in VirtualBox.\nThe script should document the process for creating the video, how and what will be shown in the video.\n\n* Don't show the download and installation of VirtualBox.\n* Don't include the download of a nightly build, as this tutorial video will also be used after Beta1 is released. [N/A for next year? Beta1 download?]\n* Start recording with VirtualBox in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be larger than 16 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine: set the correct network adapter, extend the amount of video memory (32 MB), set mouse to USB tablet.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"Haiku\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\n[More steps for the recording one, for next year. These should result from the \"how to make a tutorial\" task. It would probably be best to find a guide, not a task?]\n* Don't move your mouse too much while recording.\n* If you use voice for the video, take your time to narrate what you're doing.\n* Don't rush the video.\n\nUpload your script as a txt or pdf file or create a storyboard with screenshots.","tags":["script","storyboard","video","writing"],"private_metadata":"","mentors":["florentina.musat.28@gmail.com"],"max_instances":3,"name":"[HOLD] Write a script or storyboard for a video on how to run Haiku in VirtualBox","last_modified":"2018-01-09T00:45:43Z","is_beginner":false,"id":5778781220372480,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"For this task you have to write a guide on how to create a video tutorial. Research this subject in detail, then write the article in Markdown.\n\nBefore working on this task, you should already have knowledge and experience on how to create tutorial videos. You should have created at least one video tutorial in the past.\n\nThe guide should contain:\n* a list of several freely available tools used to create the video (recording, editing, etc)\n* sections for things to do / things to avoid while creating the tutorial video\n* a step-by-step process of creating the video\n* other useful tips & tricks\n\nThe article should have screenshots explaining certain steps, when writing in detail isn't enough. The list of tools should be available on all major operating systems, otherwise organize them by OS.\n\nIf you don't know Markdown, follow this [tutorial](http://www.markdowntutorial.com).\n\nAll the images, etc. used in the guide have to be under a suitable creative commons license.","tags":["article","markdown","video","tutorial","writing"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com"],"max_instances":3,"name":"Write a guide on how to make a tuturial video","last_modified":"2018-01-14T16:55:25Z","is_beginner":false,"id":6661717377417216,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BRIE**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Brie\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Brie, a IDE for rapid development of Haiku applications.","last_modified":"2018-01-08T03:28:03Z","is_beginner":false,"id":4796685609861120,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Heidi**.\n\nYou can find the sources on the project homepage: https://github.com/waddlesplash/Heidi\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","miqlas@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Heidi, a native IDE for Haiku","last_modified":"2018-01-08T03:28:35Z","is_beginner":false,"id":4508083134922752,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **DebugMonitor**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/DebugMonitor\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for DebugMonitor, a program that improves the reliability and maintainability of your code.","last_modified":"2018-01-08T03:29:05Z","is_beginner":false,"id":5188099669753856,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Clue**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Clue\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Clue, a comprehensive GUI tracing tool, allowing inspection on almost all of the Haiku native objects.","last_modified":"2018-01-08T03:29:36Z","is_beginner":false,"id":5925453212680192,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **MoleSVN**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/MoleSVN\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for MoleSVN, is a SVN client frontend implemented as a Tracker extension.","last_modified":"2018-01-08T03:30:05Z","is_beginner":false,"id":5004322918105088,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Pad**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Pad\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Pad, a simple notepad program","last_modified":"2018-01-08T03:30:30Z","is_beginner":false,"id":5070099805372416,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BePhoneBook**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/BePhoneBook\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BePhoneBook, a phone book manager","last_modified":"2018-01-09T18:19:51Z","is_beginner":false,"id":5398885054808064,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in VMware ESXi, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of VMware ESXi.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with VMware ESXi in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["video","tutorial","vmware esxi","virtualization"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Create a video how to run Haiku in VMware ESXi","last_modified":"2018-01-13T17:01:20Z","is_beginner":false,"id":5815758607089664,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"BeScreenCapture is an application for Haiku to capture video of the screen.\n\nPick one of the open issues for BeScreenCapture and solve it.\n- https://github.com/jackburton79/bescreencapture\n- https://github.com/jackburton79/bescreencapture/issues\n\nTo complete this task you will need to:\n- Download and compile the BeScreenCapture sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the BeScreenCapture repository on github so your changes are integrated.","tags":["c++"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","miqlas@gmail.com","anevilyak@gmail.com"],"max_instances":5,"name":"Fix an Open Issue in BeScreenCapture","last_modified":"2018-01-04T19:00:20Z","is_beginner":false,"id":4617251875454976,"categories":[1,2,4],"external_url":"https://github.com/jackburton79/bescreencapture/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"MPD (Music Player Daemon) is a daemon for playing music of various formats.\nIt has a native Haiku port.\n\nFor this task you must fix the issue #182:\nhttps://github.com/MusicPlayerDaemon/MPD/issues/182\n\"Haiku output should return earlier, as soon as it has played at least one frame\"\n\nIt shouldn't be very hard, but involves making sure semaphores are still used correctly, else it will hang up or play garbage.","tags":["fixing","bug","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","b.vitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Fix issue #182 in MPD: Haiku output should return earlier, as soon as it has played at least one frame","last_modified":"2018-01-03T17:57:53Z","is_beginner":false,"id":5474337161216000,"categories":[1],"external_url":"https://github.com/MusicPlayerDaemon/MPD/issues/182"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Pick an open issue from any application hosted on HaikuArchives and fix it\n\n- https://github.com/HaikuArchives\n\nHere's some popular ones:\n- https://github.com/HaikuArchives/Paladin/issues\n- https://github.com/HaikuArchives/Tipster/issues\n- https://github.com/HaikuArchives/CapitalBe/issues\n- https://github.com/HaikuArchives/BeAE/issues\n- https://github.com/HaikuArchives/Sawteeth/issues\n- https://github.com/HaikuArchives/Bepodder/issues\nPick from one of those, or any of the 350+ apps hosted on HaikuArchives with open issues.  When you put in your claim, let us know which one you plan to work on.\n\nTo complete this task you will need to:\n- Download and compile the app's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the associated repository on github so your changes are integrated.","tags":["haikuarchives","c++"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","miqlas@gmail.com","kacperkasper@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Fix an Open Issue for any Application Hosted on HaikuArchives [2]","last_modified":"2018-01-03T16:36:06Z","is_beginner":false,"id":5893380343070720,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Tk**, a graphical toolkit for Tcl; using the undroidwish port which uses SDL, AGG and FreeType to avoid having to write a native Haiku graphical backend for Tk (the homepage mentions Haiku as working without OpenGL support).\n\nYou can find the sources on the project homepage: http://www.androwish.org/index.html/wiki?name=undroidwish\n\nYou can also browse the sources on their Fossil repo: http://www.androwish.org/index.html/tree?ci=tip\n\nThe recipe should be added to haikuports at haikuports/dev-lang/tk/.\n\nDependencies: SDL2, AGG, FreeType\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","tk","patching"],"private_metadata":"","mentors":["diver@gelios.net","jessica.l.hamilton@gmail.com","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for Tk (undroidwish), a graphical toolkit for Tcl.","last_modified":"2018-01-03T17:49:52Z","is_beginner":false,"id":5772118652354560,"categories":[1,5],"external_url":"http://www.androwish.org/index.html/wiki?name=undroidwish"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **direnv**, an environment switcher for the shell.\n\nYou can find the sources on the project homepage: https://direnv.net/\n\nYou can also browse the sources on GitHub: https://github.com/direnv/direnv\n\nThe recipe should be added to haikuports at haikuports/app-shells/direnv/.\n\nDependencies: unknown\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","shell","recipe","patching"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","philippe.houdoin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for direnv, an environment switcher for the shell. [BONUS]","last_modified":"2018-01-07T18:16:54Z","is_beginner":false,"id":5733384154251264,"categories":[1,5],"external_url":"https://direnv.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **poezio**, a free console XMPP client (the protocol on which the Jabber IM network is built).\n\nYou can find the sources on the project homepage: https://poez.io/en/\n\nYou can also browse the sources on GitHub: https://github.com/poezio/poezio\n\nThe recipe should be added to haikuports at haikuports/net-im/poezio/.\n\nDependencies: python\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","python"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","b.vitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for poezio, a console XMPP client in python.","last_modified":"2018-01-03T17:39:20Z","is_beginner":false,"id":4957544483127296,"categories":[1,2],"external_url":"https://poez.io/en/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **inadyn**, a dynamic DNS client with SSL/TLS support.\n\nYou can find the sources on the project homepage: https://github.com/brndnmtthws/conky\n\nYou can find the current Haiku port (CLI-only) here (you'll have to extract the patchset):\nhttps://github.com/mmuman/conky/tree/haiku-port\n\nThe build currently requires explicitly disabling X11:\ncmake -DBUILD_X11=false ../\n\nThe recipe should be added to haikuports at haikuports/app-admin/conky/.\n\nDependencies: lua\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","app-admin","recipe","patching"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","kacperkasper@gmail.com","revolf@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for Conky, a light-weight system monitor for X.","last_modified":"2018-01-03T17:38:30Z","is_beginner":false,"id":6676529243226112,"categories":[1,5],"external_url":"https://github.com/brndnmtthws/conky"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **khal**, a a standards based CLI and terminal calendar program, able to synchronize with CalDAV servers through vdirsyncer.\n\nYou can find the sources on the project homepage: http://lostpackets.de/khal/\n\nYou can also browse the sources on GitHub: https://github.com/pimutils/khal\n\nThe recipe should be added to haikuports at haikuports/app-misc/khal/.\n\nDependencies: python\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","python"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for khal, a CLI calendar application","last_modified":"2018-01-03T17:55:30Z","is_beginner":false,"id":5256578158559232,"categories":[1,5],"external_url":"http://lostpackets.de/khal/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **SineGenerator**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/SineGenerator\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for SineGenerator, a sine tone generator for Haiku with adjustable frequency","last_modified":"2018-01-03T10:25:38Z","is_beginner":false,"id":5536427087495168,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeNormal**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/BeNormal\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["waddlesplash@gmail.com","richienyhus@gmail.com","revolf@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for BeNormal, a small program designed to normalise wav files.","last_modified":"2018-01-03T17:53:11Z","is_beginner":false,"id":5709990876676096,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **VoxoPhone**.\n\nYou can find the sources on the project homepage: https://github.com/aarroyoc/Voxophone\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","b.vitruvio@gmail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for VoxoPhone, an online radio player for Haiku","last_modified":"2018-01-03T17:53:49Z","is_beginner":false,"id":6308476315762688,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **NanoDot**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/NanoDot\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for NanoDot, a minimal pattern-based MIDI sequencer for Haiku","last_modified":"2018-01-03T10:22:45Z","is_beginner":false,"id":6615875647963136,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This task is to code a gui window to edit the application's settings as found in the config file. \n\nIt should provide the user with a few choices of the most popular search engines (Google, Bing, Duckduckgo, Baidu, Yandex, Gigablast, Sogou, Qwant, Naver) and allow the user to set one as their preferred search engine. It should also allow the user to revert back to the application's default search engine (Good Search).\n\nThere could possibly be another setting that allows the user to set what browser they want the search results opened up in (the system default, WebPositive or something else). This should also be able to be reverted back to the default.\n\nThe preference screen could possibly accessed by a right click menu.","tags":["c++","code","haiku api","application development"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","waddlesplash@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add a graphical preferences window to HaikuWebSearch [Bonus]","last_modified":"2018-01-03T17:55:03Z","is_beginner":false,"id":5874840311431168,"categories":[1],"external_url":"https://github.com/Oyami-Srk/HaikuWebSearch/issues/2"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **WebSearch**, an application that provides a replicant to search the internet.\n\nYou can find the sources on the project homepage:  https://github.com/Oyami-Srk/HaikuWebSearch\n\nThe recipe should be added to haikuports at haikuports/haiku-apps/websearch.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).","tags":["haikuports","recipes"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for HaikuWebSearch, an application that provides a tool to search the internet from the Haiku desktop","last_modified":"2018-01-03T10:24:34Z","is_beginner":false,"id":5479892030324736,"categories":[1],"external_url":"https://github.com/Oyami-Srk/HaikuWebSearch/issues/1"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"There is a pending pull request on Haikuports for this.  Review the current status and see if you can resolve the open issue(s).  Submit your recipe as a new pull request on Haikuports.\n\nhttps://github.com/haikuports/haikuports/pull/586","tags":["recipe"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","miqlas@gmail.com","fbrosson2014-gci@yahoo.fr","begasus@gmail.com"],"max_instances":1,"name":"Fix Cylindrix recipe so it builds and installs the data (BONUS)","last_modified":"2018-01-02T20:51:44Z","is_beginner":false,"id":4937423702196224,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The current recipe for Notepadqq doesn't allow it to write to files.  For this task you will need to solve this issue.\nhttps://github.com/haikuports/haikuports/issues/1881\n\nSubmit your work as a pull request at Haikuports.","tags":[],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Fix Notepadqq recipe so that it can update css files","last_modified":"2018-01-02T18:58:09Z","is_beginner":false,"id":5669545438085120,"categories":[1,4],"external_url":"https://github.com/haikuports/haikuports/issues/1881"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Coverity Prevent is a static code analysis tool for C, C++, C# and Java source code. It is a commercial product which originated as the Stanford Checker, which used abstract interpretation to identify defects in source code.\n\nIt analyzes Haiku sourcecode and detects bugs and programming errors.\n\nThe goal of this task is to pick one of the issues reported by Coverity, investogate the problem, and fix the bug. You will have to submit your work as a patch on Haiku's bug tracker.\n\nThe issue list is not publicly available, so the first step is requesting access at the Coverity website to view the detected problems. Follow the instructions in our wiki to do so:\nhttps://dev.haiku-os.org/wiki/Coverity\n\nThen you need to pick an issue and analyze the problem. Coverity will show you the parts of the code where it thinks there is a problem. Your goal is to change the code to fix the problem, or report the task as a false positive if it turns out Coverity is wrong.","tags":["c++","security","bugs","analysis","coverity"],"private_metadata":"","mentors":["kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":10,"name":"Haiku - Fix an issue detected by Coverity (3)","last_modified":"2018-01-02T18:29:20Z","is_beginner":false,"id":5760939657789440,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"There's a guide that shows how to put a Haiku image onto a USB stick, which can then be used to boot into Haiku at https://www.haiku-os.org/guides/installing/making_haiku_usb_stick\n\nProbably there are other ways, using GUI tools which users may be more comfortable with.\nFind and try out those tools and write a quick guide with a few screenshots on how to use it.","tags":["guide"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","jessica.l.hamilton@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Find and document the nicest tool to put a Haiku image onto a USB stick (MacOS)","last_modified":"2018-01-02T01:44:13Z","is_beginner":false,"id":5296824015388672,"categories":[3,5],"external_url":"https://www.haiku-os.org/guides/installing/making_haiku_usb_stick"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"There's a guide that shows how to put a Haiku image onto a USB stick, which can then be used to boot into Haiku at https://www.haiku-os.org/guides/installing/making_haiku_usb_stick\n\nProbably there are other ways, using GUI tools which users may be more comfortable with.\nFind and try out those tools and write a quick guide with a few screenshots on how to use it.","tags":["guide"],"private_metadata":"","mentors":["waddlesplash@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","HumdingerB@googlemail.com"],"max_instances":3,"name":"Find and document the nicest tool to put a Haiku image onto a USB stick (Linux)","last_modified":"2018-01-02T01:47:55Z","is_beginner":false,"id":4756425190408192,"categories":[3,5],"external_url":"https://www.haiku-os.org/guides/installing/making_haiku_usb_stick"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"There's a guide that shows how to put a Haiku image onto a USB stick, which can then be used to boot into Haiku at https://www.haiku-os.org/guides/installing/making_haiku_usb_stick\n\nProbably there are other ways, using GUI tools which users may be more comfortable with.\nFind and try out those tools and write a quick guide with a few screenshots on how to use it.","tags":["guide"],"private_metadata":"","mentors":["waddlesplash@gmail.com","richienyhus@gmail.com","HumdingerB@googlemail.com"],"max_instances":3,"name":"Find and document the nicest tool to put a Haiku image onto a USB stick (Windows)","last_modified":"2018-01-02T07:57:53Z","is_beginner":false,"id":6075488298598400,"categories":[3,5],"external_url":"https://www.haiku-os.org/guides/installing/making_haiku_usb_stick"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in Hyper-V, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of Hyper-V.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with Hyper-V in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["video","hyper-v","virtualization","tutorial"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Create a video how to run Haiku in Hyper-V","last_modified":"2018-01-10T23:07:21Z","is_beginner":false,"id":5811137020952576,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in SimNow, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of SimNow.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with SimNow in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["video","simnow","tutorial","virtualization"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a video how to run Haiku in SimNow","last_modified":"2018-01-13T17:01:27Z","is_beginner":false,"id":5158383260794880,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in KVM, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of KVM.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with KVM in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["kvm","video","virtualization","tutorial"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":2,"name":"Create a video how to run Haiku in KVM","last_modified":"2018-01-13T17:01:05Z","is_beginner":false,"id":5935253724069888,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in Parallels Desktop, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of Parallels Desktop.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with Parallels Desktop in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["video","parallels desktop","tutorial","virtualization"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Create a video how to run Haiku in Parallels Desktop","last_modified":"2018-01-10T23:07:59Z","is_beginner":false,"id":5406854232408064,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in VMware Fusion, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of VMware Fusion.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with VMware Fusion in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["vmware fusion","video","virtualization","tutorial"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com"],"max_instances":2,"name":"Create a video how to run Haiku in VMware Fusion","last_modified":"2018-01-13T17:01:11Z","is_beginner":false,"id":6687207337230336,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in VMware Workstation, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of VMware Workstation.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with VMware Workstation in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine. Video memory should be 32 MB.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["vmware workstation","video","virtualization","tutorial"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com"],"max_instances":4,"name":"Create a video how to run Haiku in VMware Workstation","last_modified":"2018-01-12T19:48:04Z","is_beginner":false,"id":6287666930778112,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Create a video showing how to install and run a Haiku nightly anyboot image in VirtualBox, see the guides at https://www.haiku-os.org/guides/virtualizing\n\n* Set your host's resolution to 1280x720 and record in full-screen.\n* Pick a suitable resolution for Haiku, no resizing allowed as that would blur the image.\n* All material seen or heard have to be under a suitable creative commons license.\n* Keep it short, best under 3 minutes.\n* Don't show the download and installation of VirtualBox.\n* Don't show the download of a nightly build, as this tutorial video will also be used after Beta1 is released.\n* Start recording with VirtualBox in full-screen mode.\n* If you have enough memory, assign 2 GB to the VM. HDD size should be 4 GB.\n* Complete the additional steps and troubleshooting before you start the virtual machine: set the correct network adapter, extend the amount of video memory (32 MB), set mouse to USB tablet.\n* When booting the VM for the first time, click on \"Run Installer\" and follow the installation guide.\n* Rename the virtual hard disk to \"HaikuHD\".\n* Wait for Haiku to restart and boot to Desktop, then end the video. Don't open any applications.\n\nBefore recording the video, send in your script as a txt or pdf file.\nThe script should document the process for creating the video, how and what will be shown in the video.\nAfter the script has been verified, record the video and upload it here, on Google Drive or Youtube.","tags":["video","tutorial","virtualbox","virtualization"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","jessica.l.hamilton@gmail.com","waddlesplash@gmail.com"],"max_instances":5,"name":"Create a video how to run Haiku in VirtualBox","last_modified":"2018-01-10T18:21:17Z","is_beginner":false,"id":5779747051143168,"categories":[3,5],"external_url":"https://www.haiku-os.org/guides/virtualizing"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The next release of TuxPaint will use SDL2.  For this task you will need to try to compile it on Haiku and get it to fully build.  To do this you may create a recipe or build it manually.  Keep track of what you need to do in order to build it fully.  Patching may be needed.  Results after this task is completed may be sent upstream and merged into the TuxPaint source code, so be sure for any patching you do, that you don't break it on other platforms.  This SDL2 branch will soon be merged into TuxPaint's main git branch, we'd like to have Haiku support current for it.\n\nhttps://sourceforge.net/u/perepujal/tuxpaint/ci/sdl2.0/tree/","tags":[],"private_metadata":"","mentors":["scottmc2@gmail.com","begasus@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Get TuxPaint SDL2 Git Branch to Build on Haiku","last_modified":"2018-01-01T06:02:22Z","is_beginner":false,"id":6505071464415232,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Pick an open issue from any application hosted on HaikuArchives and fix it\n\n- https://github.com/HaikuArchives\n\nHere's some popular ones:\n- https://github.com/HaikuArchives/Paladin/issues\n- https://github.com/HaikuArchives/Tipster/issues\n- https://github.com/HaikuArchives/CapitalBe/issues\n- https://github.com/HaikuArchives/BeAE/issues\n- https://github.com/HaikuArchives/Sawteeth/issues\n- https://github.com/HaikuArchives/Bepodder/issues\nPick from one of those, or any of the 350+ apps hosted on HaikuArchives with open issues.  When you put in your claim, let us know which one you plan to work on.\n\nTo complete this task you will need to:\n- Download and compile the app's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the associated repository on github so your changes are integrated.","tags":["qa","ui","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","scottmc2@gmail.com","pulkomandy@gmail.com","diver@gelios.net","waddlesplash@gmail.com","begasus@gmail.com"],"max_instances":20,"name":"Fix an Open Issue for any Application Hosted on HaikuArchives [1]","last_modified":"2018-01-01T05:29:38Z","is_beginner":false,"id":5650623959662592,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port libqxp, a library that parses the file format of QuarkXPress documents. It is used by LibreOffice.\n\nSee build instructions here: https://wiki.documentfoundation.org/DLP/Libraries/libqxp\n\nYou can browse the sources here: https://gerrit.libreoffice.org/gitweb?p=libqxp.git;a=summary\n\nFor this task we don't need the user interface to be ported, just the command line mode.\n\nThe recipe should be added to haikuports at haikuports/app-text/libqxp.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","libreoffice","recipe","haikuporter"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libqxp, a library that parses the file format of QuarkXPress documents.","last_modified":"2017-12-31T19:39:37Z","is_beginner":false,"id":6745424360636416,"categories":[1],"external_url":"https://wiki.documentfoundation.org/DLP/Libraries/libqxp"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **mandoc**.\n\nYou will need to look by yourself what mandoc is, where the sources are, how to fix them to meet Haiku's policy regarding the systems settings.\n\nIn other words, this task is for experienced C/C++ developers familiar with the find_directory() function and having already written several recipes.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["find_directory","app-text","openbsd","c/c++","patching"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for mandoc. (probably a hard task)","last_modified":"2018-01-08T12:48:42Z","is_beginner":false,"id":6253869296254976,"categories":[1,2,3,4,5],"external_url":"https://github.com/haikuports/haikuports/pull/1990"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Pick one of these and update the recipe for it and any of its dependencies, so that it can be built on 64bit Haiku.\n\nAplayer\nheartofthealien\nheroes\nbephotomagic\nbarrage\n\nThe updated recipes should be submitted as a pull request on haikuports.  You will need to be running a recent 64 bit build of Haiku for this task.","tags":["recipe","c++"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Fix application that fails to build on Haiku x64","last_modified":"2017-12-27T04:21:36Z","is_beginner":false,"id":5710840156127232,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Pick one of the open issues for Masterpiece and fix it.\n- https://github.com/HaikuArchives/Masterpiece/\n- https://github.com/HaikuArchives/Masterpiece/issues\n\nTo complete this task you will need to:\n- Download and compile Masterpiece's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Masterpiece repository on github so your changes are integrated.","tags":["c++"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","pulkomandy@gmail.com","jessica.l.hamilton@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Fix an Open Issue in Masterpiece","last_modified":"2017-12-27T01:28:21Z","is_beginner":false,"id":6115108650483712,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Pick one of the open issues for SimplyVorbis and solve it.\n- https://github.com/HaikuArchives/SimplyVorbis/\n- https://github.com/HaikuArchives/SimplyVorbis/issues\n\nTo complete this task you will need to:\n- Download and compile Hare's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Hare repository on github so your changes are integrated.","tags":["c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","diver@gelios.net","jessica.l.hamilton@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Fix an Open Issue in SimplyVorbis","last_modified":"2017-12-27T01:19:39Z","is_beginner":false,"id":6365290227040256,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Pick one of the open issues for ArtPaint and solve it.\n- https://github.com/HaikuArchives/ArtPaint/\n- https://github.com/HaikuArchives/ArtPaint/issues\n\nTo complete this task you will need to:\n- Download and compile ArtPaint's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Hare repository on github so your changes are integrated.","tags":["artpaint","c++"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","pulkomandy@gmail.com","adrian.arroyocalle@gmail.com"],"max_instances":10,"name":"Fix an Open Issue in ArtPaint","last_modified":"2017-12-27T01:17:06Z","is_beginner":false,"id":5642119521763328,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"HexVexed is puzzle game for Haiku.\n\nPick one of the open issues for HexVexed and solve it.\nhttps://bitbucket.org/scottmc/hexvexed\nhttps://bitbucket.org/scottmc/hexvexed/issues?status=new&status=open\n\nTo complete this task you will need to:\n- Download and compile HexVexed's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the HexVexed repository on bitbucket so your changes are integrated.\n\nLet us know which issues you decide to fix.\n\n[BONUS] If you can fix one or both of the pending pull requests to work nicely.","tags":["c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","pulkomandy@gmail.com","waddlesplash@gmail.com"],"max_instances":2,"name":"Fix an open issue in Hexvexed (2) [BONUS]","last_modified":"2018-01-12T17:39:39Z","is_beginner":false,"id":5679476023230464,"categories":[1,2],"external_url":"https://bitbucket.org/scottmc/hexvexed/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Read through the discussion on this issue and then finished up the work of converting Hare over to use Haiku's layout management.  Pay special attention to the markup screenshot which shows how we'd like to see the GUI appear when this task is completed.\nhttps://github.com/HaikuArchives/Hare/issues/1\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1 https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf https://api.haiku-os.org/layout_intro.html http://cgit.haiku-os.org/haiku/tree/src http://xref.plausible.coop/source/","tags":["hare","layout management","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","RaefaldhiAmartya@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Update Hare to use Layout Management (part 2) [BONUS]","last_modified":"2018-01-12T17:40:25Z","is_beginner":false,"id":4594601241346048,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Many people keep up to date with Haiku news and events via social media, therefore it is important for Haiku to have a presence on social media and for Haiku to support some of the community groups found on social media platforms. \n\nThis means there is a need for content to keep the audience interested and engaged.\n\nFor this task you will need to write a social media post on either a Haiku feature, a Haiku application or an application on HaikuDepot. Your post should be around 1500 characters long and preferably include a screenshot of the feature/application.\n\nYou should explain what the feature/application is, how it is used, why the audience should be interested in it, where it can be accessed/downloaded, what are its pros and cons etc.\n\n**You should create a draft on Google Docs and post a link to it here for feedback.**\n\nOnce the work is OKed by your mentors, you can post it yourself on our [Facebook community group](https://www.facebook.com/groups/haikuosgroup/) and our [Google+ community group](https://plus.google.com/communities/116050756631351429142). Then submit the URLs of the posts here to finish the task.","tags":["social media","writing"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","richienyhus@gmail.com","HumdingerB@googlemail.com"],"max_instances":10,"name":"Write an article on social media about a Haiku feature","last_modified":"2017-12-31T22:50:13Z","is_beginner":false,"id":5896774726189056,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to **modify** a recipe for **WordGrinder**, a terminal based word processor.\n\nThis program's homepage is: http://cowlark.com/wordgrinder/\n\nIt's sources can be browsed on GitHub: https://github.com/davidgiven/wordgrinder\n\nThe recipe is already in haikuports at [haikuports/app-text/wordgrinder/](https://github.com/haikuports/haikuports/tree/master/app-text/wordgrinder).\n\nThe program comes with a couple of dictionaries but they are not being used in the recipe.\n\nThe author, David Given, has kindly provided a few hints in [this message](https://github.com/haikuports/haikuports/pull/1925#issuecomment-353566709).\nYou will need to investigate this topic and improve the recipe to allow WordGrinder to either use the system dictionaries or the ones provided by the program.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","lua","patch","makefile","ninja"],"private_metadata":"","mentors":["revolf@gmail.com","diver@gelios.net","waddlesplash@gmail.com","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Modify WordGrinder's recipe to allow it to find dictionaries.","last_modified":"2017-12-22T18:02:15Z","is_beginner":false,"id":5241916499165184,"categories":[1,2,5],"external_url":"https://github.com/davidgiven/wordgrinder"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"For this task pick one of the following applications that have their settings being saved to the wrong location.  \n\n* defendguin\n* supertux\n* mplayer - https://github.com/haikuports/haikuports/issues/472 (**DONE** by Damillora)\n* advancemame - https://github.com/haikuports/haikuports/issues/1884 (**DONE** by Tuấn Kiệt Hồ)\n* kdiff3 - https://github.com/haikuports/haikuports/issues/1820 (**DONE** by Bach Nguyen)\n* git - https://github.com/haikuports/haikuports/issues/1506 (**DONE** by Xiang Fan)\n* roadfighter - https://github.com/haikuports/haikuports/issues/1294 (**DONE** by Owen)\n* rocksanddiamonds - https://github.com/haikuports/haikuports/issues/1200 (**is it OK?**)\n\nPatch it such that it puts it's settings into B_USER_SETTINGS_DIRECTORY\n\nfind_directory(B_USER_SETTINGS_DIRECTORY, ...\n\nThe following have similar patches, so your patch may look similar to some of these:\n\n* app-editors/vim\n* app-emulation/basiliskii\n* dev-util/global\n* games-action/btanks\n* games-arcade/f1spirit\n* games-arcade/lbreakout2\n* games-arcade/plee_the_bear\n* games-arcade/rocksndiamonds\n* games-arcade/slimevolley\n* games-arcade/super_transball\n* games-kids/dragonmemory\n* games-puzzle/flobopuyo\n* games-puzzle/lmarbles\n* games-puzzle/lpairs\n* games-puzzle/ltris\n* games-puzzle/mirrormagic\n* games-puzzle/pingus\n* games-puzzle/pipepanic\n* games-strategy/lgeneral\n* games-strategy/openxcom\n* games-strategy/vcmi\n* media-libs/flickcurl\n* media-sound/ocp\n* net-misc/wget\n* sys-apps/less\n\nSubmit your patch & update recipe as a PR at Haikuports.","tags":["find_directory","recipe","git","c/c++ programming language","patch"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix an Application for Haiku that Puts It's Settings into Wrong Location","last_modified":"2018-01-01T20:00:05Z","is_beginner":false,"id":4753887015731200,"categories":[1,4],"external_url":"https://github.com/haikuports/haikuports/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"First update the recipe for BePodder to 1.4.0, submit updated recipe as a pull request on Haikuports.\n\nYou will be ad hoc testing **BePodder 1.4.0** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nTest the application to see if you can find any bugs in the software. Act like a normal user and do the things that they would do with the software. Search the software's [bug tracker](https://github.com/HaikuArchives/BePodder/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nKeep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen post the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nIdentify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bepodder","testing","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","miqlas@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Update Recipe for BePodder to Current Released Version (1.4.0) and Test for Bugs and Issues.","last_modified":"2017-12-19T20:05:34Z","is_beginner":false,"id":6413122136965120,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BePhotoMagic** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nTest the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](com/HaikuArchives/BePhotoMagic/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nKeep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["test","qa","testing","quality assurance"],"private_metadata":"","mentors":["scottmc2@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Test BePhotoMagic for Bugs and Issues","last_modified":"2018-01-03T18:37:28Z","is_beginner":false,"id":5620794891698176,"categories":[2,4],"external_url":"https://github.com/HaikuArchives/BePhotoMagic"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"fRiSS is an RSS reader for Haiku\n\nPick two of the open issues for fRiSS solve them.\n- https://github.com/pulkomandy/fRiSS/\n- https://github.com/pulkomandy/fRiSS//issues\n\nTo complete this task you will need to:\n- Download and compile the fRiSS sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem(s),\n- Test the app again to make sure the problem(s) are gone\n- Make a pull request or submit a patch to the fRiSS repository on github so your changes are integrated.","tags":["c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","revolf@gmail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Fix two open issues in fRiSS (2)","last_modified":"2018-01-03T21:17:24Z","is_beginner":false,"id":5558014952079360,"categories":[1],"external_url":"https://github.com/pulkomandy/fRiSS//issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Hare is an Audio Ripper and Encoder for Haiku\n\nFor this task you will be fixing support for a basic feature that is currently broken in the app.  That is actually encoding the music.  You can use any of the encoders listed on the open issue.\nhttps://github.com/HaikuArchives/Hare/issues/2\n\nTo complete this task you will need to:\n- Download and compile Hare's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Hare repository on github so your changes are integrated. Bonus if you can add support for handling more than one of the list encoders.","tags":[],"private_metadata":"","mentors":["anevilyak@gmail.com","waddlesplash@gmail.com","b.vitruvio@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add support in Hare for encoding music [BONUS]","last_modified":"2017-12-18T20:33:15Z","is_beginner":false,"id":5502095954280448,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This task is to implement the POSIX functions mlock() and munlock() for Haiku.  Attach your work as a patch on the open trac ticket:\nhttps://dev.haiku-os.org/ticket/13880","tags":[],"private_metadata":"","mentors":["anevilyak@gmail.com","jessica.l.hamilton@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Implement POSIX Functions: \"mlock()\" and \"munlock()\" in Haiku","last_modified":"2017-12-19T19:29:27Z","is_beginner":false,"id":4899795376275456,"categories":[1],"external_url":"https://dev.haiku-os.org/ticket/13880"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **brotli**. a generic-purpose lossless compression algorithm.\n\nYou can find the sources on the project homepage: https://github.com/google/brotli\n\nThe recipe should be added to haikuports at haikuports/app-arch/brotli/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-arch"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","RaefaldhiAmartya@gmail.com","fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for brotli","last_modified":"2017-12-18T03:35:41Z","is_beginner":false,"id":5145331140395008,"categories":[1],"external_url":"https://github.com/google/brotli"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeOSTiLink** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.  You will also need a supported TI calculator.\n\nTest the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeOSTiLink/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nKeep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","ti calculator","testing","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Test BeOSTiLink for Bugs and Issues.","last_modified":"2018-01-03T18:37:44Z","is_beginner":false,"id":5530936525455360,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeOSTiLink"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"[sanity](https://github.com/HaikuArchives/sanity/) needs vector icons (hvif). You'll have to create them using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/). \n\nBuild the application and run it, then see if you can come up with icons similar to the current bitmap format icons it currently has.\nIcons should be submitted as HVIF, rdef file, png and as .IOM files.\n\nhttps://github.com/HaikuArchives/sanity/issues/1","tags":["graphic design","icons","icon-o-matic","hvif","artwork"],"private_metadata":"","mentors":["anevilyak@gmail.com","HumdingerB@googlemail.com","philippe.houdoin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create vector icons for sanity","last_modified":"2017-12-17T14:32:32Z","is_beginner":false,"id":6318816600522752,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **minisign**. a dead simple tool to sign files and verify signatures.\n\nYou can find the sources on the project homepage: https://jedisct1.github.io/minisign/.\n\nYou can also browse the sources on GitHub: https://github.com/jedisct1/minisign\n\nThe recipe should be added to haikuports at haikuports/app-crypt/minisign/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","kacperkasper@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Create a recipe for minisign, a tool to sign files and verify signatures.","last_modified":"2017-12-14T23:45:05Z","is_beginner":false,"id":4555360910180352,"categories":[1],"external_url":"https://github.com/jedisct1/minisign"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **xar**. an e**X**tensible **AR**chiver.\n\nYou can find the sources on the project homepage: http://mackyle.github.io/xar/.\n\nYou can also browse the sources on GitHub: https://github.com/mackyle/xar\n\nThe recipe should be added to haikuports at haikuports/app-arch/xar/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-arch"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for xar, an eXtensible ARchiver","last_modified":"2017-12-30T13:14:48Z","is_beginner":false,"id":5765848855740416,"categories":[1],"external_url":"https://github.com/mackyle/xar"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Bong**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Bong\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["waddlesplash@gmail.com","kacperkasper@gmail.com","jessica.l.hamilton@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Bong, clone of the game Pong for Haiku","last_modified":"2017-12-14T23:42:19Z","is_beginner":false,"id":6116988201992192,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/535"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **PecoBeat**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/PecoBeat\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for PecoBeat, a beat sequencer for Haiku","last_modified":"2017-12-14T23:45:43Z","is_beginner":false,"id":6045909177597952,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/539"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Melt**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/matthiasr/melt\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["HumdingerB@googlemail.com","richienyhus@gmail.com","diver@gelios.net","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for Melt, a CD burning app for Haiku [Bonus]","last_modified":"2018-01-03T08:06:42Z","is_beginner":false,"id":4617682227822592,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/541"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Toner**.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Toner\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","richienyhus@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for Toner, a tone generator for aligning levels in your playback system.","last_modified":"2017-12-14T23:43:26Z","is_beginner":false,"id":6706262278406144,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/542"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Sinus**.\n\nYou can find the sources here: https://ftp.gwdg.de/pub/linux/misc/blinux/sinus-0.1.3.tar.gz\n\nYou can also find an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/200831/sinus-0.1.3.tar.gz\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","jessica.l.hamilton@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Sinus, a sine wave generator","last_modified":"2017-12-14T23:43:43Z","is_beginner":false,"id":6383758552858624,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/544"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **SheepShaver**, a PowerPC emulator.\n\nYou can find the project homepage here: http://sheepshaver.cebix.net\n\nYou can also find the source code here: https://github.com/cebix/macemu\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["revolf@gmail.com","diver@gelios.net","waddlesplash@gmail.com","richienyhus@gmail.com","begasus@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for SheepShaver, a PowerPC emulator","last_modified":"2017-12-14T23:45:41Z","is_beginner":false,"id":5832753541021696,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeMobile**, an application to sync info with phones via a wired connection.\n\nYou can find the sources on the project homepage: https://github.com/ytmytm/beos-bemobile\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeMobile, an application to sync info with phones via a wired connection","last_modified":"2017-12-14T23:46:14Z","is_beginner":false,"id":6705829828886528,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/560"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Heart of the Alien**, an old school adventure game.\n\nYou can find the sources on the project homepage: http://hota.sourceforge.net\n\nYou can also find an old BeOS port at github: https://github.com/ytmytm/beos-heartofthealien\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["diver@gelios.net","waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Create a recipe for Heart of the Alien, an old school adventure game.","last_modified":"2017-12-14T23:48:47Z","is_beginner":false,"id":5421672557445120,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/562"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **fakBEtur**, a geographic information system application\n\nYou can find the sources on the project homepage: https://github.com/ytmytm/beos-fakBEtur\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","code","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for fakBEtur, an accounting application for Haiku","last_modified":"2017-12-14T23:47:36Z","is_beginner":false,"id":4971166089347072,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/563"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **BeKesa**, a geographic information system application\n\nYou can find the sources on the project homepage: https://github.com/ytmytm/beos-bekesa\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","code","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","jessica.l.hamilton@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeKesa, geographic information system application","last_modified":"2017-12-14T23:47:58Z","is_beginner":false,"id":4921497745358848,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/564"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Bsap**, a desktop application to use various dictionaries in Haiku\n\nYou can find the sources on the project homepage: https://github.com/ytmytm/beos-bsap\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","code","recipe"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","richienyhus@gmail.com","jessica.l.hamilton@gmail.com","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for Bsap, a desktop application to use various dictionaries in Haiku","last_modified":"2017-12-14T23:48:29Z","is_beginner":false,"id":5949532527394816,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/566"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **LGI**, a lightweight cross platform GUI library with Haiku support.\n\nYou can find the sources on the project homepage: http://www.memecode.com/lgi.php\n\nYou can also browse the sources on GitHub: https://github.com/memecode/Lgi\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nhttps://github.com/haikuports/haikuports/issues/736","tags":["haikuports","code","recipe","c++"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for LGI, a Lightweight cross platform GUI library that supports Haiku","last_modified":"2017-12-14T23:28:45Z","is_beginner":false,"id":5204120820514816,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **eventual**, a personal time management system for Haiku.\n\nYou can find the sources on the project homepage: https://github.com/HaikuArchives/Eventual\n\nThe recipe should be added to haikuports at haikuports/haiku-apps/eventual\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nhttps://github.com/HaikuArchives/Eventual","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["anevilyak@gmail.com","waddlesplash@gmail.com","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for Eventual (Bonus)","last_modified":"2018-01-07T21:40:01Z","is_beginner":false,"id":5827291416363008,"categories":[1],"external_url":"https://github.com/HaikuArchives/Eventual"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to have Haiku installed and running and network functioning.  If you haven't gotten that far yet, please consider doing our [New to Haiku] task first.\n\nHaiku is approaching it's first Beta release.  HaikuDepot is the place where users will turn to for installing applications.  This task is to test out some of those applications and report your findings.  Was the application easy to use?  Was it easy to understand what the application was for?  Was the HaikuDepot description of it adequate? \nHaikuDepot can be found on the applications menu on the Haiku deskbar.  From there pick 5 different applications and test them out.  Take notes of your impressions of each and then write up a one page report with at least one paragraph about each one that you tested.  You should pick applications from various points in the list, and not just 5 programs that start with the letter \"A\" for instance.  Take screenshots of each application you test, this can be done by pressing the \"print screen\" button.  You should set the screenshot application to \"Capture active window\", see https://www.haiku-os.org/docs/userguide/en/applications/screenshot.html  Attach at least one screenshot for each app you tested and one report.txt file with your write ups of the 5 applications you tested.","tags":["qa","testing","quality assurance","haiku depot"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":50,"name":"[HOLD until HaikuDepot reviewing works] Install and Test 5 Different Applications From HaikuDepot","last_modified":"2018-01-03T18:37:56Z","is_beginner":true,"id":4810268561375232,"categories":[2,3,4,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This task is to add support for adding user supplied roms for advancemame.  Work for this task should be submitted as a pull request at haikuports.  \nYou might have to use GLOBAL_WRITABLE_FILES and/or USER_SETTINGS_FILES, and patching may be required in order to move the settings from ~/.advance to the proper location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["mame","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","kacperkasper@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Fix advancemame recipe to allow user added roms (possible a hard task)","last_modified":"2017-12-11T21:03:55Z","is_beginner":false,"id":6125412310581248,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/1884"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Space is a screensaver for Haiku hosted at HaikuArchives.  For this task, convert the .proj file to a makefile.  Update the readme.md to had a screenshot, submit these changes as a pull request.  Once that pull request is accepted, then write a Haikuporter recipe to build it.  Put it in /haiku-misc with the other Haiku screensavers.","tags":[],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for screensaver Space","last_modified":"2017-12-11T17:29:31Z","is_beginner":false,"id":5411076168482816,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **WordClock**.\n\nYou can find the sources on the project homepage: https://github.com/janus2/WordClock/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","kacperkasper@gmail.com","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for WordClock","last_modified":"2017-12-14T23:44:16Z","is_beginner":false,"id":6299671012048896,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you are to add support for more formats to Army Knife.  Army Knife uses taglib and musicbrainz, one or perhaps both of those could be used to add support for more formats to Army Knife \nhttps://github.com/HaikuArchives/ArmyKnife/issues/32","tags":[],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","waddlesplash@gmail.com","b.vitruvio@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Add support for more formats to Army Knife","last_modified":"2017-12-11T05:45:39Z","is_beginner":false,"id":6495755999117312,"categories":[1],"external_url":"https://github.com/HaikuArchives/ArmyKnife/issues/32"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Twitter has changed API and HaikuTwitter is lagging behind.  This task is to update it to use the current API and get it working again.\nhttps://github.com/HaikuArchives/HaikuTwitter/issues/1","tags":[],"private_metadata":"","mentors":["anevilyak@gmail.com","waddlesplash@gmail.com","agarwal.akshay.akshay8@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Fix HaikuTwitter","last_modified":"2017-12-10T19:01:43Z","is_beginner":false,"id":4933249178533888,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/metabrainz/picard\n\nThe goal of this task is to write a recipe for **Picard**, a cross-platform music tagger written in Python.\n\nYou can find the sources on the project homepage: https://picard.musicbrainz.org/\nhttps://github.com/metabrainz/picard\nFor building on Haiku you should probably try to use the Qt5 support.\n\nThe recipe should be added to haikuports at haikuports/media-sound/picard/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["python","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","b.vitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for Picard","last_modified":"2017-12-08T17:47:31Z","is_beginner":false,"id":5959308275613696,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libldm**. a library (and command line tool) for managing MS Windows dynamic disks.\n\nYou can find the sources on the project homepage: https://github.com/mdbooth/libldm\n\nThe recipe should be added to haikuports at haikuports/sys-fs/libldm/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com","miqlas@gmail.com","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":0,"name":"[HOLD] Create a recipe for libldm, a tool for managing MS Windows dynamic disks.","last_modified":"2018-01-10T19:59:35Z","is_beginner":false,"id":4994985508208640,"categories":[1,5],"external_url":"https://github.com/mdbooth/libldm"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"http://sam.zoy.org/projects/monsterz/\n\nThe recipe should be added to haikuports at haikuports/games-puzzle/monsterz/.\nThis game has a dependency on pygame, which may or may not be in working condition.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["sdl","recipe","games","pygame"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for game Monsterz (potentially hard task)","last_modified":"2017-12-07T22:08:18Z","is_beginner":false,"id":4537136424419328,"categories":[1],"external_url":"http://sam.zoy.org/projects/monsterz/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"http://pathological.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/games-puzzle/pathological/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for game Pathological","last_modified":"2017-12-07T22:01:19Z","is_beginner":false,"id":6583741021421568,"categories":[1],"external_url":"http://pathological.sourceforge.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"A recipe was recently written to build Fritzing on Haiku, but it can't find it's resources.  Your task is to fix the recipe so that Fritzing works better on Haiku and finds and can use it's resources.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nOpen issue for Fritzing:  https://github.com/haikuports/haikuports/pull/1806","tags":["recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Fix recipe for Fritzing (potentially hard task)","last_modified":"2017-12-07T20:58:39Z","is_beginner":false,"id":4831374231994368,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/pull/1806"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **wordgrinder**, a terminal based word processor.\n\nYou can find the sources on the project homepage: http://cowlark.com/wordgrinder/\n\nYou can also browse the sources on GitHub: https://github.com/davidgiven/wordgrinder\n\nThe recipe should be added to haikuports at haikuports/app-text/wordgrinder/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nhttps://github.com/haikuports/haikuports/issues/1844","tags":["terminal","haikuports","app-text","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","miqlas@gmail.com"],"max_instances":1,"name":"Create a recipe for Wordgrinder","last_modified":"2017-12-11T18:53:03Z","is_beginner":false,"id":5346163911819264,"categories":[1],"external_url":"https://github.com/davidgiven/wordgrinder"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You can find the sources on the github page: https://github.com/yeKcim/warmux\n\nThe recipe should be added to haikuports at haikuports/games-strategy/warmux/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["game","recipe"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","begasus@gmail.com"],"max_instances":1,"name":"Create a recipe for game warmux (potentially a hard task)","last_modified":"2017-12-31T08:28:22Z","is_beginner":false,"id":6156134614302720,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/1861"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The setlocale() API does not work currently. It should be fixed so POSIX applications can share their locale settings with native applications.","tags":[],"private_metadata":"","mentors":["anevilyak@gmail.com","philippe.houdoin@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Fix setlocale() API in Haiku","last_modified":"2017-12-07T18:24:33Z","is_beginner":false,"id":4857592859852800,"categories":[1],"external_url":"https://dev.haiku-os.org/ticket/13837"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to understand the git workflow that is used at Haikuports and HaikuArchives.  It is detailed on the wiki page linked below.  This task is to create a diagram like the one on the Haiku website which uses Haiku style icons to show the Haikuports/HaikuArchives workflow.  This diagram will be added to the wiki page once accepted.\nhttps://github.com/haikuports/haikuports/wiki/DevelopmentModel\nhttps://www.haiku-os.org/guides/building/get-source-git/","tags":["graphics design","git","documentation"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","pulkomandy@gmail.com","richienyhus@gmail.com","Niels.Reedijk@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Design a Workflow Diagram That Shows the Haikuports/HaikuArchives Git Development Model [BONUS]","last_modified":"2018-01-01T05:16:05Z","is_beginner":false,"id":6222755932405760,"categories":[1,2,3,5],"external_url":"https://github.com/haikuports/haikuports/wiki/DevelopmentModel"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Each time you build an Haiku image using jam, a lot of steps are repeated although they should not be needed. This includes, for example, generation of userguide packages.\n\nThe goal of this task is to investigate why this is happening, and modifying the build system (jamfiles) to avoid it and make it faster to generate the haiku image when there are no or few changes.","tags":["buildsystem","jam","optimization","dependencies"],"private_metadata":"","mentors":["philippe.houdoin@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Optimize Haiku build system [BONUS]","last_modified":"2017-12-07T17:27:56Z","is_beginner":false,"id":5243661027639296,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/haikuports/haikuports/issues/1850\n\nSubmit work as a pull request on Haikuports, with the new code in a patchset, and update the recipe for it as needed.","tags":["recipe","c++","patch"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","diver@gelios.net","revolf@gmail.com"],"max_instances":1,"name":"Aqemu - Add platform specific code to get memory size","last_modified":"2017-12-05T22:02:09Z","is_beginner":false,"id":6026804559085568,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/Weather/issues/4\n\nThis task is to extend the Weather app which was developed by past Google Code-In students.  For this task you will need to investigate alternative data sources and add support for switching between the default one and any number of alternates.  Your code should have at least one new alternate that is shown to be working.\n\nSubmit your changes as a pull request on the Weather app github page.","tags":["api","c++"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","pulkomandy@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Update Weather app to allow use of alternate data source","last_modified":"2017-12-16T16:35:46Z","is_beginner":false,"id":4942016012091392,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Weather/issues/4"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **unshield**, a tool and library to extract CAB files from InstallShield installers \n\nYou can find the sources on the project homepage: https://github.com/twogood/unshield\n\nThe recipe should be added to haikuports at haikuports/app-arch/unshield.\n\nhttps://github.com/haikuports/haikuports/issues/1848\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["recipe"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","begasus@gmail.com"],"max_instances":1,"name":"Create a recipe for unshield","last_modified":"2017-12-30T13:19:08Z","is_beginner":false,"id":5362735774695424,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/1848"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Note before doing this task you should already understand how to make recipes for Haikuporter.\n\nSeveral apps at HaikuArchives have .proj files and .rsrc files, and have no recipe to build them at HaikuPorts.  This task is find one of these apps, and convert the .proj file to a makefile and the .rsrc file(s) to .rdef file(s).  Submit that as a pull request at HaikuArchives.  Once that is approved, create a Haikuporter recipe to build it.\n\nHint: Paladin can open .proj file and export to makefile.  \nThe command line app \"rc\" can convert the .rsrc file(s) to .rdef\nSee [https://www.haiku-os.org/documents/dev/compile_them_resources/]","tags":[".rdef","makefile","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","begasus@gmail.com","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":15,"name":"Create a recipe for any app on HaikuArchives that doesn't have one","last_modified":"2017-12-05T07:12:46Z","is_beginner":false,"id":5459254695690240,"categories":[1],"external_url":"https://github.com/HaikuArchives/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Coverity Prevent is a static code analysis tool for C, C++, C# and Java source code. It is a commercial product which originated as the Stanford Checker, which used abstract interpretation to identify defects in source code.\n\nIt analyzes Haiku sourcecode and detects bugs and programming errors.\n\nThe goal of this task is to pick one of the issues reported by Coverity, investogate the problem, and fix the bug. You will have to submit your work as a patch on Haiku's bug tracker.\n\nThe issue list is not publicly available, so the first step is requesting access at the Coverity website to view the detected problems. Follow the instructions in our wiki to do so:\nhttps://dev.haiku-os.org/wiki/Coverity\n\nThen you need to pick an issue and analyze the problem. Coverity will show you the parts of the code where it thinks there is a problem. Your goal is to change the code to fix the problem, or report the task as a false positive if it turns out Coverity is wrong.","tags":["c++","security","bugs","analysis","coverity"],"private_metadata":"","mentors":["kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":10,"name":"Haiku - Fix an issue detected by Coverity (2)","last_modified":"2017-12-05T04:52:47Z","is_beginner":false,"id":4669431684792320,"categories":[1,4],"external_url":"https://dev.haiku-os.org/wiki/Coverity"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/haikuports/haikuports/issues/1805","tags":[],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","kacperkasper@gmail.com"],"max_instances":0,"name":"Update Noto font recipe to put 'condensed' fonts in separate package [BETA]","last_modified":"2017-12-17T16:35:41Z","is_beginner":false,"id":6100977167892480,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **caveexpress**.\n\nCaveExpress is a classic 2D platformer with physics-based gameplay and dozens of levels.\n\nYou can find the sources on the project homepage: http://www.caveproductions.org/\n\nYou can also browse the sources on GitHub: https://github.com/mgerhardy/caveexpress\n\nHaiku supporting patches: https://github.com/mgerhardy/caveexpress/commit/a96cccb9ae5442514471e4901351b679470fcae1\n\nThe recipe should be added to haikuports at haikuports/games-arcade/caveexpress.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","miqlas@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for caveexpress","last_modified":"2017-12-08T17:56:10Z","is_beginner":false,"id":4903278292762624,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/1840"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Ghostwriter**.\n\nghostwriter is a cross-platform, aesthetic, distraction-free Markdown editor. \n\nYou can also browse the sources on GitHub: https://github.com/wereturtle/ghostwriter\n\nThe recipe should be added to haikuports at haikuports/app-editors/ghostwriter/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["diver@gelios.net","fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","m.anirudh18@gmail.com"],"max_instances":0,"name":"Create a recipe for Ghostwriter","last_modified":"2017-12-30T13:42:45Z","is_beginner":false,"id":5442741192359936,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/1838"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **OpenShadingLanguage\n**, a language for programmable shading in advanced renderers (like Cycles in Blender).\n\nYou can find the sources on the project homepage: https://github.com/imageworks/OpenShadingLanguage\n\nThe recipe should be added to haikuports at haikuports/media-libs/osl/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["anevilyak@gmail.com","diver@gelios.net","miqlas@gmail.com"],"max_instances":1,"name":"Create recipe for OpenShadingLanguage","last_modified":"2017-12-04T19:39:14Z","is_beginner":false,"id":5376007332691968,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/1837"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to update the recipe for **mpd**, daemon for playing music of various formats.\n\nYou can find the sources on the project homepage: http://www.musicpd.org\n\nYou can also browse the sources on GitHub: https://github.com/MusicPlayerDaemon/MPD/releases\n\nThe current recipe lives in media-sound/mpd.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","mpd","recipe"],"private_metadata":"","mentors":["miqlas@gmail.com","revolf@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Update the MPD recipe","last_modified":"2017-12-07T17:31:32Z","is_beginner":true,"id":5059979369250816,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/1835"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The Locale preferences is the GUI app to change all settings related to the system-wide locale. Haiku needs a command line tool to do the same.\n\nIn this iteration, the CLI tool should learn how to set fall-back languages (secondary, tertiary,... etc.). Start by discussing how you plan to implement that. \n\nYou'll find the code of [FirstBootPrompt](http://cgit.haiku-os.org/haiku/tree/src/apps/firstbootprompt) and possibly the [Locale prefs](http://cgit.haiku-os.org/haiku/tree/src/preferences/locale) most helpful.\n\nRequired skills\n----------------\n\n* Basic knowledge of C++\n\nRequired setup\n----------------\n\nFor this task you need to have:\n\n* A  [Haiku nightly image](https://download.haiku-os.org/) installed, where you'll do all the coding.","tags":["cli","c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","HumdingerB@googlemail.com","miqlas@gmail.com","pulkomandy@gmail.com","Niels.Reedijk@gmail.com"],"max_instances":1,"name":"Improve CLI tool \"setlocale\"","last_modified":"2017-12-04T19:40:23Z","is_beginner":false,"id":6186449969872896,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"HaikuArchives (github.com/haikuarchives) is a github repository which hosts the sourcecode for many Haiku/BeOS apps.\n\nThe goal of this task is to add screenshots to the README file in 3 of these applications, so that people can quickly get an idea what the app looks like, without need to install it. When picking the applications, make sure there isn't already a pull-request pending for it by one of your fellow GCI students...\n\nWork should be submitted as a pull request for each of the 3 applications.\nSee the Weather application for example: https://github.com/HaikuArchives/weather","tags":["screenshot"],"private_metadata":"","mentors":["diver@gelios.net","miqlas@gmail.com","philippe.houdoin@gmail.com","code.deepanshu@gmail.com"],"max_instances":30,"name":"Add screenshots to 3 applications at HaikuArchives","last_modified":"2017-12-10T13:33:46Z","is_beginner":false,"id":4753135069298688,"categories":[3],"external_url":"http://github.com/haikuarchives"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"​Scripting is used in Haiku to interact programmatically with applications,like with the hey CLI tool. All apps already support basic scripting through the App Kit, but some would benefit from more specific scripting interfaces.\n\nExpose the MediaPlayer playlist as a scripting object. It should be able to return the number of tracks and the title of a specified track.","tags":["scripting","c++","media player"],"private_metadata":"","mentors":["bga@bug-br.org.br","HumdingerB@googlemail.com","miqlas@gmail.com"],"max_instances":1,"name":"Add more scripting to MediaPlayer (playlist)","last_modified":"2017-12-05T04:26:43Z","is_beginner":false,"id":6497689044779008,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **funcsigs**, which is needed by PyTest, and write a recipe for it.\n\nfuncsigs follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","haikuports","pytest","recipe","haikuporter"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","miqlas@gmail.com","philippe.houdoin@gmail.com"],"max_instances":1,"name":"Create a recipe for funcsigs, a Python development library","last_modified":"2017-12-03T17:42:42Z","is_beginner":false,"id":6210250371760128,"categories":[1,5],"external_url":"https://pypi.python.org/pypi/funcsigs"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **Pluggy**, which is needed by PyTest, and write a recipe for it.\n\nPluggy follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","haikuports","pytest","recipe","haikuporter"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","miqlas@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for Pluggy, a PyTest dependency","last_modified":"2017-12-03T17:43:23Z","is_beginner":false,"id":5699502524596224,"categories":[1,5],"external_url":"https://pypi.python.org/pypi/pluggy"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **py**, that is, a Python support library, needed for **PyTest**, and write a recipe for it.\n\npy follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","haikuports","recipe","haikuporter"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","miqlas@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for py, a support library for Python","last_modified":"2017-12-03T17:44:27Z","is_beginner":false,"id":6652217069142016,"categories":[1,5],"external_url":"https://pypi.python.org/pypi/py/1.5.2"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our guide to virtualising Haiku with [Parallels Desktop](https://raw.githubusercontent.com/haiku/website/master/content/guides/virtualizing/parallels-desktop.md) is very out of date and needs updating, due to various changes in Parallels Desktop, in the types of bootable medium Haiku is distributed on, as well as changes in Haiku itself.\n\nRewrite the article to be updated, easier to understand and with newer screenshots.\n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running MacOS 10.12/13 (Sierra or High Sierra) and a trial version of Parallels Desktop. \n\nThe article is wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.","tags":["osx","mac","documentation","parallels desktop","writing"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","revolf@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Rewrite the Parallels Desktop guide","last_modified":"2017-11-30T18:18:44Z","is_beginner":false,"id":6089447168802816,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our guide to virtualising Haiku with [VMWare Workstation](https://raw.githubusercontent.com/haiku/website/master/content/guides/virtualizing/vmware-workstation.md) is very out of date and needs updating, due to various changes in VMWare Workstation, in the types of bootable medium Haiku is distributed on, as well as changes in Haiku itself.\n\nRewrite the article to be updated, easier to understand and with newer screenshots.\n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running Windows 10 and a trial version of VMWare Workstation. \n\nThe article is wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.","tags":["website","windows","markdown","writing"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Rewrite the VMWare Workstation guide","last_modified":"2017-12-03T17:38:11Z","is_beginner":false,"id":5668436623491072,"categories":[3,4],"external_url":"https://github.com/haiku/website"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Read thru this open pull request and see if you can create a working recipe for Cylindrix which solves the issues noted in the open pull request.\nhttps://github.com/haikuports/haikuports/pull/586\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Fix Cylindrix recipe (potentially hard task)","last_modified":"2017-11-29T22:58:51Z","is_beginner":false,"id":6029327424552960,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"See more here:\nhttps://github.com/HaikuArchives/WakeUp/issues/1\nFor this task convert the files as requested and then submit a pull request on github with your changes.","tags":[],"private_metadata":"","mentors":["scottmc2@gmail.com","kacperkasper@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Fix WakeUp to have a Makefile and .rdef file","last_modified":"2017-11-29T20:58:53Z","is_beginner":false,"id":5890134111158272,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"For this task you are required to create a [kakemono](https://fr.wikipedia.org/wiki/Kakemono#/media/File:D%C3%A9rouleurs_Wikim%C3%A9dia_France.jpg) or roll-up banner for Haiku. Before beginning the design, you must present your ideas (in a txt or pdf file). You should describe in detail what the design will look like and list any screenshots, images, fonts, etc, you'll be using. After the idea has been accepted by mentors, you can start working on the design.\n\n* The kakemono should contain the Haiku [logo](https://cgit.haiku-os.org/haiku/tree/data/artwork) and links to various useful resources and information about Haiku, while keeping it concise.\n* The design should fit Haiku's overall style. First research Haiku and its features. Join our [forums](https://discuss.haiku-os.org) and IRC channel (#haiku on Freenode) and ask what should be included in the design. We take into consideration originality and creativity as well as quality of the design.\n* Keep in mind basic design rules when creating the design.\n* Use at most 2 font types, with a Creative Commons license. Avoid using low font sizes, since the text is supposed to be seen from afar.\n* Everything should be neatly integrated into the design.\n* Kakemono dimensions: standard size, 85 x 200 cm and 60 x 160 cm.\n\nYou can complete this task using software of your choice (e.g. Inkscape, Photoshop, Illustrator, Wonderbrush).  Design should use vector format where possible, to allow clean resizing. \n\nYou must submit all sources (PSD, AI, SVG) and preview files (PNG) of your design.\nAll the images, fonts, etc. you used in creating the design have to be under a suitable creative commons license.","tags":["wonderbrush","photoshop","design","art","banner"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","miqlas@gmail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Design a kakemono / roll-up banner for Haiku","last_modified":"2018-01-14T15:56:15Z","is_beginner":false,"id":4736546026553344,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"For this task you are required to create a flyer for Haiku. Before beginning the design, you must present your ideas (in a txt or pdf file). You should describe in detail what the design will look like and list any screenshots, images, fonts, etc, you'll be using. After the idea has been accepted by mentors, you can start working on the design.\n\n* The flyer should contain the Haiku [logo](https://cgit.haiku-os.org/haiku/tree/data/artwork) and links to various useful resources and information about Haiku, while keeping it concise.\n* The design should fit Haiku's overall style. First research Haiku and its features. Join our [forums](https://discuss.haiku-os.org) and IRC channel (#haiku on Freenode) and ask what should be included in the design. We take into consideration originality and creativity as well as quality of the design.\n* Keep in mind basic design rules when creating the design.\n* Flyer should have a white background.\n* Use only one or two fonts, with a Creative Commons license.\n* Everything should be neatly integrated into the design.\n* Flyer dimensions: A5 format.\n\nThis is an older [flyer](https://www.haiku-os.org/files/haiku-flier-2010_a4_print.pdf). An updated flyer with a white background is preferred. Other dated versions of the flyer:\n [1](https://get.google.com/albumarchive/101252961127843360685/album/AF1QipNLjT-fp4YK_ReUvEJGEVKFkuGEMyTxBKMbFB2Y/AF1QipMwh178ChiL0xbsUIZ0xTp95F2xs1pcfuXx-arN), [2](https://get.google.com/albumarchive/101252961127843360685/album/AF1QipNLjT-fp4YK_ReUvEJGEVKFkuGEMyTxBKMbFB2Y/AF1QipPQNwK6lKZfQ2hCDZcL9jnVVeYpW0IKMJT8Dacv).\n\nYou can complete this task using software of your choice (e.g. Inkscape, Photoshop, Illustrator, Wonderbrush).  Design should use vector format where possible, to allow clean resizing. \n\nYou must submit all sources (PSD, AI, SVG) and preview files (PNG) of your design.\nAll the images, fonts, etc. you used in creating the design have to be under a suitable creative commons license.","tags":["wonderbrush","photoshop","art","flyer","design"],"private_metadata":"","mentors":["florentina.musat.28@gmail.com","pulkomandy@gmail.com","revolf@gmail.com","richienyhus@gmail.com","miqlas@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":6,"name":"Design a flyer for Haiku","last_modified":"2018-01-15T14:40:44Z","is_beginner":false,"id":6649015775002624,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"For this task you are required to create a poster for Haiku. Before beginning the design, you must present your ideas (in a txt or pdf file). You should describe in detail what the design will look like and list any screenshots, images, fonts, etc, you'll be using. After the idea has been accepted by mentors, you can start working on the design.\n\n* The poster should contain the Haiku [logo](https://cgit.haiku-os.org/haiku/tree/data/artwork) and links to various useful resources and information about Haiku, while keeping it concise.\n* The design should fit Haiku's overall style. First research Haiku and its features. Join our [forums](https://discuss.haiku-os.org) and IRC channel (#haiku on Freenode) and ask what should be included in the design. We take into consideration originality and creativity as well as quality of the design.\n* Keep in mind basic design rules when creating the design.\n* Poster should have a white background.\n* Use at most 2 font types, with a Creative Commons license.\n* Everything should be neatly integrated into the design.\n* Poster dimensions: A2 format.\n\nThis is an older [poster](https://get.google.com/albumarchive/101252961127843360685/album/AF1QipNLjT-fp4YK_ReUvEJGEVKFkuGEMyTxBKMbFB2Y/AF1QipPVp9bWFUpWse9Ap8aKQaw5JZ2As4E1ZhAKdykm), as an example.\n\nYou can complete this task using software of your choice (e.g. Inkscape, Photoshop, Illustrator, Wonderbrush).  Design should use vector format where possible, to allow clean resizing. \n\nYou must submit all sources (PSD, AI, SVG) and preview files (PNG) of your design.\nAll the images, fonts, etc. you used in creating the design have to be under a suitable creative commons license.","tags":["wonderbrush","photoshop","art","design","poster"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":3,"name":"Design a poster for Haiku","last_modified":"2018-01-14T15:56:21Z","is_beginner":false,"id":6588564512964608,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"For this task you are required to create a sticker for Haiku. Before beginning the design, you must present your ideas (in a txt or pdf file). You should describe in detail what the design will look like and list any images, fonts, etc, you'll be using. After the idea has been accepted by mentors, you can start working on the design.\n\n* The sticker should contain the Haiku [logo](https://cgit.haiku-os.org/haiku/tree/data/artwork) and/or Haiku's [website](haiku-os.org).\n* The design should fit Haiku's overall style. First research Haiku and its features. Join our [forums](https://discuss.haiku-os.org) and IRC channel (#haiku on Freenode) and ask what should be included in the design. We take into consideration originality and creativity as well as quality of the design.\n* Keep in mind basic design rules when creating the design.\n* Use at most 2 font types, with a Creative Commons license.\n* Everything should be neatly integrated into the design.\n* Sticker dimensions are the standard ones.\n* Sticker shape doesn't matter (whether square, rectangle or circle). Die-cut designs are also welcome.\n\nThese are a few stickers we already have: http://cgit.haiku-os.org/haiku/tree/data/artwork/sticker. Complete design [here](https://get.google.com/albumarchive/101252961127843360685/album/AF1QipNLjT-fp4YK_ReUvEJGEVKFkuGEMyTxBKMbFB2Y/AF1QipN-kjeY-Vptp_t5Igoa8LSzo1u-_OXD81fxqZeR).\n\nYou can complete this task using software of your choice (e.g. Inkscape, Photoshop, Illustrator, Wonderbrush).  Design should use vector format where possible, to allow clean resizing. \n\nYou must submit all sources (PSD, AI, SVG) and preview files (PNG) of your design.\nAll the images, fonts, etc. you used in creating the design have to be under a suitable creative commons license.","tags":["wonderbrush","photoshop","sticker","art","design"],"private_metadata":"","mentors":["scottmc2@gmail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Design a sticker for Haiku","last_modified":"2018-01-12T23:56:31Z","is_beginner":false,"id":5627820459950080,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The current headers in the Haiku game kit need to be rewritten.\n\nRead the full discussion on this [https://dev.haiku-os.org/ticket/1576](trac ticket) and then pick two of the following headers to rewrite:\nheaders/os/game/DirectWindow.h \nheaders/os/game/FileGameSound.h \nheaders/os/game/GameSound.h \nheaders/os/game/GameSoundDefs.h \nheaders/os/game/PushGameSound.h \nheaders/os/game/SimpleGameSound.h \nheaders/os/game/StreamingGameSound.h \nheaders/os/game/WindowScreen.h","tags":[],"private_metadata":"","mentors":["anevilyak@gmail.com","bga@bug-br.org.br","pulkomandy@gmail.com"],"max_instances":4,"name":"Rewrite Haiku Game Kit headers","last_modified":"2017-12-07T18:39:25Z","is_beginner":false,"id":6146815315410944,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **Pandas**, that is, a powerful Python data analysis toolkit, and write a recipe for it.\n\nPandas follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes. Pandas has a lot of optional dependencies, for this task you're only required to package Pandas without that dependencies.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","haikuports","recipe","haikuporter","pandas"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","adrian.arroyocalle@gmail.com","RaefaldhiAmartya@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for pandas, a powerful Python data analysis toolkit","last_modified":"2017-12-04T19:39:58Z","is_beginner":false,"id":6120883913490432,"categories":[1,5],"external_url":"https://pandas.pydata.org"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **PyTz**, that is, a library for timezone manipualtion in Python, and write a recipe for it.\n\nPyTz follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","haikuports","recipe","haikuporter","timezone"],"private_metadata":"","mentors":["anevilyak@gmail.com","adrian.arroyocalle@gmail.com","diver@gelios.net","agarwal.akshay.akshay8@gmail.com"],"max_instances":1,"name":"Create a recipe for pytz, a library for timezone manipulation in Python","last_modified":"2017-12-05T05:27:31Z","is_beginner":false,"id":6504427177377792,"categories":[1,5],"external_url":"http://pytz.sourceforge.net/"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **networkx**, that is, a graph library, and write a recipe for it.\n\nnetworkx follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","haikuports","recipe","haikuporter","networkx"],"private_metadata":"","mentors":["diver@gelios.net","adrian.arroyocalle@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for networkx, a graph library for Python","last_modified":"2017-12-05T05:23:51Z","is_beginner":false,"id":5452254410702848,"categories":[1,5],"external_url":"https://github.com/networkx/networkx"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port **PyTest**, that is, a Python testing framework, and write a recipe for it.\n\nPyTest follows the setup.py build system. Look at other Python packages recipes (in dev-python) to know how to use it in Haiku recipes.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["python","test","haikuports","recipe","haikuporter"],"private_metadata":"","mentors":["bga@bug-br.org.br","adrian.arroyocalle@gmail.com","m.anirudh18@gmail.com"],"max_instances":1,"name":"Create a recipe for pytest, a testing framework for Python","last_modified":"2017-11-30T18:06:05Z","is_beginner":false,"id":5969328207822848,"categories":[1,5],"external_url":"https://github.com/pytest-dev/pytest/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will be coding a desktop widget (called a replicant in Haiku jargon) to search the Web for a user requested term. \n\nYou should preferably use GoodSearch, as Haiku receives a micro donation for every search performed using a [reference code](http://www.goodsearch.com/search-web?charityid=949749&keywords=testsearch) given to the project. However you could make the search provider configurable, allow the user to pick their preferred search engine.\n\nYou will need to have read the [Programming with Haiku](https://www.haiku-os.org/development/programming_with_haiku) book, particularly [chapter 21: replicants](https://www.haiku-os.org/files/programming_with_haiku/Programming_with_Haiku_Lesson_21.pdf), in order to successfully complete this task.","tags":["replicant","c++"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","miqlas@gmail.com","richienyhus@gmail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Code a Web Search widget (replicant) for Haiku","last_modified":"2017-12-06T20:36:52Z","is_beginner":false,"id":4780694062497792,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **r8brain**, a high-quality pro audio sample rate converter library.\n\nYou can find the sources on the project homepage: \nhttps://github.com/avaneev/r8brain-free-src\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","ports"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","b.vitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for r8brain","last_modified":"2017-11-28T00:47:54Z","is_beginner":false,"id":6032337223548928,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"The Locale preferences is the GUI app to change all settings related to the system-wide locale. Haiku needs a command line tool to do the same.\n\nFor starters, this CLI tool will only set the first preferred language. More tasks will be created to add more features until it's on par with the GUI app.\n\nYou'll find the code of [FirstBootPrompt](http://cgit.haiku-os.org/haiku/tree/src/apps/firstbootprompt) and possibly the [Locale prefs](http://cgit.haiku-os.org/haiku/tree/src/preferences/locale) most helpful.\n\nRequired skills\n----------------\n\n* Basic knowledge of C++\n\nRequired setup\n----------------\n\nFor this task you need to have:\n\n* A  [Haiku nightly image](https://download.haiku-os.org/) installed, where you'll do all the coding.","tags":["cli","c++"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Create a CLI tool to set the locale","last_modified":"2017-11-27T18:32:59Z","is_beginner":false,"id":5191798701948928,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"This task is to explore application scripting with 'hey' to automate re-taking of userguide screenshots. Develop a few examples that can be used as templates for subsequent tasks for all the user guide images.\n\nTake notes of your experience. That'll help the students for the subsequent tasks.\n\nRough outline of the script:\n\n- Usage: hey-shoot-{imagename}.sh {path-to-userguide-lang-abbrev}\n\n\te.g. hey-shoot-textsearch.sh /Source-Haiku/haiku/docs/userguide/en\n- Print error if original image doesn't exist and exit\n- Rename original image to \"*.orig\"\n- Launch app\n- Arrange window\n- Take and save screenshot (if the image needs manual editing, append \"_needs_editing\")\n- Echo paths to original and new image\n- Quit app\n\nRequired skills\n-------------\n* Basic knowledge of bash scripting\n\nRequired setup\n-------------\nFor this task you need to have:\n\n* A [Haiku nightly image](https://download.haiku-os.org/) installed.\n* The user guide installed (it's in HaikuDepot).\n\nRecommended reading and help\n-------------\n* The [Scripting Chapter](http://www.birdhouse.org/beos/bible/bos/ch_scripting1.html) [PDF, 900 KiB](http://www.birdhouse.org/beos/bible/bos/BeOS.scripting.PDF) of Scot Hacker's BeOS Bible.\n* The blog post [Application scripting with 'hey'](https://www.haiku-os.org/blog/humdinger/2017-11-05_scripting_the_gui_with_hey/).","tags":["bash","scripting"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Develop bash script templates to automate screenshots","last_modified":"2017-12-08T18:31:57Z","is_beginner":false,"id":5750862246838272,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Your task is to code an application to help with manually testing third party software for Haiku. Although haiku does have a web application to track manual testing of the operating system itself, third party developers are left out of the picture and currently have no options.\n\nThe application will need to read a test plan created by the application developer or a contributor, it will need to display the relevant information to the beta tester to help them test the application and potentially in a future task, record the results of the test.\n\nYou should learn about [creating test plans](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual) and the information that is required, as well as how testers follow these tests and report their results in a [test run](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestRun). It is highly recommended that you read these pages in order to get a good understanding of manual testing from both the perspectives of a developer/contributor and a beta tester.\n\nFor the first part of this series of tasks is to create an application that can read/import test plans that are formatted in CSV ( comma separated values) files, display the important values for each test case (component, user action, precondition, steps, expected result and priority) and allow the beta tester to move between each test case.\n\nYou might want to research how other software displays this information in a logical manner that helps beta testers better execute their test runs.","tags":["qa","coding","c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","bga@bug-br.org.br","richienyhus@gmail.com"],"max_instances":1,"name":"Code an application to help with manual testing (Part 1)","last_modified":"2017-12-05T04:59:26Z","is_beginner":false,"id":5763935590416384,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ProjectConceptor**. As Paradoxianer is a long term member of the Haiku community, it would be nice to honour him by creating a recipe for his ProjectConceptor application that he has been wor king on for a few years now.\n\nYou can find the sources on the project homepage: \nhttps://github.com/Paradoxianer/ProjectConceptor\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","ports"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","begasus@gmail.com","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for ProjectConceptor, a Haiku diagramming application like Microsoft Visio [Bonus]","last_modified":"2018-01-03T06:53:42Z","is_beginner":false,"id":4785733854298112,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Qscope**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/QScope\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","ports"],"private_metadata":"","mentors":["kacperkasper@gmail.com","m.anirudh18@gmail.com","code.deepanshu@gmail.com"],"max_instances":1,"name":"Create a recipe for Qscope, a digital oscilloscope for ADC and DAC sound streams [Bonus]","last_modified":"2018-01-03T07:22:56Z","is_beginner":false,"id":5650438730809344,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This task is to write a screensaver for Haiku.  It can be based on screensavers you've seen elsewhere, or one you've dreamed up on your own.  You may also port a screensaver from another platform.  Below are a few examples of screensaver written for Haiku:\n\n* https://github.com/pulkomandy/neonlights\n* https://github.com/atalax/haiku-substrate\n* https://github.com/haikuports/haikuports/tree/master/haiku-misc/rssavers\n\nPerhaps you'll be inspired by one of these:\n* http://www.complexification.net/gallery/\n\nWork for this task should be saved to your github account and a url to it provided as proof of work.  Discuss your ideas with a mentor prior to starting work on this one.","tags":[],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","pulkomandy@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":10,"name":"Code a Haiku screensaver of your choice","last_modified":"2018-01-06T11:56:30Z","is_beginner":false,"id":5366592261062656,"categories":[1],"external_url":"https://github.com/pulkomandy/neonlights"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"fRiSS is an RSS reader for Haiku\n\nPick one of the open issues for fRiSS solve it.\n- https://github.com/pulkomandy/fRiSS/\n- https://github.com/pulkomandy/fRiSS//issues\n\nTo complete this task you will need to:\n- Download and compile the fRiSS sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the fRiSS repository on github so your changes are integrated.","tags":["c++"],"private_metadata":"","mentors":["pulkomandy@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":10,"name":"Fix open issue in fRiSS","last_modified":"2018-01-03T21:18:27Z","is_beginner":false,"id":5709597610344448,"categories":[1,2],"external_url":"https://github.com/pulkomandy/fRiSS/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Super Prefs was written during Google Summer of Code 2017.  This task is to pick an open issue in Super Prefs and solve it.\n\nhttps://github.com/HaikuArchives/SuperPrefs\nhttps://github.com/HaikuArchives/SuperPrefs/issues\n\nTo complete this task you will need to:\n- Download and compile the SuperPrefs sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Hare repository on github so your changes are integrated.","tags":["c++"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":2,"name":"Fix open issue in Super Prefs","last_modified":"2017-11-09T18:27:57Z","is_beginner":false,"id":4924497050206208,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will be testing part of Haiku by following written instructions to test all the features and functions of a particular Haiku Application. **You will need to have Haiku up and running.**\n\nYou should first learn about running Manual Tests and what Test Plans are by reading [this page](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestRun). It is highly recommended that you view the information on that page.\n\nTo complete this task you will need to:\n* Sign up for a temporary email address  ([Try this one!](https://www.maildrop.cc))\n* Post your temporary email address here\n* Have your mentor invite you to our QA website\n* Follow the link in their email to the website\n* Create an account on [the website](https://leantesting.com)\n* Click the icon on the left side bar with a circle & check mark (tick ✔)\n* Click \"▶Start a new test run\"\n* Enter your username in the box labeled \"Name your test run\"\n* Enter Pre-Beta as your version number\n* Pick an application to test that hasn't been tested yet (see [this list](https://docs.google.com/spreadsheets/d/1edWRllo8L2GEOqhtjl4jMBbo3Eoeo_NVRWfu6DT3Exs/edit?usp=sharing)).\n* Select the application by clicking in the check box to the left of its name to add a check mark ✔, this should select all of the test cases for that app.\n* Save and start the test run\n* Click on the text \"Expand all\"\n* Follow the tests and add any comments or other necessary details\n* Click on the save changes button at the bottom of the page once finished\n* On the new page click on \"export test\" run and select CSV file\n* Download the CSV file to your computer\n* Upload the CSV file here and submit for review.","tags":["qa","test run","test plan","quality assurance","testing"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","richienyhus@gmail.com","florentina.musat.28@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":20,"name":"Follow one of our test plans","last_modified":"2018-01-05T22:10:55Z","is_beginner":false,"id":5757994191028224,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ndyndns**.\n\nndyndns is a dynamic DNS update daemon written in C with SSL/TLS support, which means it can be instructed to use https (instead of http) to make the DNS updates.\n\nYou can find the sources on the project homepage: https://github.com/niklata/ndyndns\n\nThe recipe should be added to haikuports at haikuports/net-dns/ndyndns/.\n\n**Hint:** In `BUILD()` you might need to use something like:\n`runConfigure ./configure CFLAGS=-DBSD_SOURCE LDFLAGS=-lbsd` \n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for ndyndns, a dynamic DNS update daemon written in C with SSL/TLS support","last_modified":"2017-12-30T13:48:09Z","is_beginner":false,"id":5151635540017152,"categories":[1,5],"external_url":"https://github.com/niklata/ndyndns"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **CuteMarkEd**.\n\nCuteMarkEd is a Qt5 markdown editor .\n\nYou can find the sources on the project homepage: https://github.com/cloose/CuteMarkEd\nhttps://github.com/haikuports/haikuports/issues/1761\n\nThe recipe should be added to haikuports at haikuports/app-text/cutemarked/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","app-text","recipe","qt5"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","diver@gelios.net","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","miqlas@gmail.com","code.deepanshu@gmail.com"],"max_instances":1,"name":"Create a recipe for CuteMarkEd","last_modified":"2017-12-27T11:08:04Z","is_beginner":false,"id":5442186722148352,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/1761"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **apngopt**, an optimizer for animations in the APNG format.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/apng/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/apngopt/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","agarwal.akshay.akshay8@gmail.com","diver@gelios.net","m.anirudh18@gmail.com"],"max_instances":1,"name":"Create a recipe for apngopt","last_modified":"2017-11-05T00:05:48Z","is_beginner":false,"id":6283351503667200,"categories":[1],"external_url":"https://sourceforge.net/projects/apng/"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"http://api.haiku-os.org","tags":["keystore","docs","haiku api","c++"],"private_metadata":"","mentors":["bga@bug-br.org.br","philippehoudoin@gmail.com","nielsreedijk@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD - Needs description] Write API documentation for Keystore","last_modified":"2017-10-29T14:26:23Z","is_beginner":false,"id":5992031925043200,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **UltraEncode**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/UltraEncode\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for UltraEncode","last_modified":"2017-11-08T14:17:55Z","is_beginner":false,"id":5119671789420544,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Slayer is a \"Process controller (with extra features!) in a window.\"\n\nPick one of the open issues for Slayer and solve it.\nhttps://github.com/HaikuArchives/Slayer/\nhttps://github.com/HaikuArchives/Slayer/issues\n\nTo complete this task you will need to:\n- Download and compile Slayer's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Slayer repository on github so your changes are integrated.","tags":["slayer","c++","process controller","bugs","issues"],"private_metadata":"","mentors":["anevilyak@gmail.com","HumdingerB@googlemail.com","RaefaldhiAmartya@gmail.com","pulkomandy@gmail.com"],"max_instances":10,"name":"Fix a open issue in Slayer","last_modified":"2017-10-29T14:29:42Z","is_beginner":false,"id":5075240084307968,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"BeCasso was has display layout issues.  This task is to convert BeCasso to use Haiku's Layout Managment.\nhttps://github.com/HaikuArchives/Becasso/issues/5","tags":["github","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","diver@gelios.net","philippehoudoin@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Convert BeCasso to use Layout Management","last_modified":"2017-10-31T19:21:29Z","is_beginner":false,"id":6751836134440960,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **pegtl**.\n\nThe Parsing Expression Grammar Template Library (PEGTL) is a zero-dependency C++11 header-only library for creating parsers according to a [Parsing Expression Grammar](https://en.wikipedia.org/wiki/Parsing_expression_grammar) (PEG).\n\nYou can find the sources on the project homepage: https://github.com/ColinH/PEGTL\n\nThe recipe should be added to haikuports at haikuports/dev-libs/pegtl/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","dev-libs"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","fbrosson2014-gci@yahoo.fr","m.anirudh18@gmail.com","RaefaldhiAmartya@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for pegtl, the Parsing Expression Grammar Template Library.","last_modified":"2017-11-05T00:01:48Z","is_beginner":false,"id":5625936227598336,"categories":[1],"external_url":"https://github.com/ColinH/PEGTL"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **MAR**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/MAR\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MAR","last_modified":"2017-11-05T00:00:53Z","is_beginner":false,"id":5011868848488448,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"There are several open issues with our hardware compatibility web app. This app was written during Google Code In 2015. Select from the list of open issues and discuss with your mentor before starting to work on this one. Agree which issue or issues you plan to work first and let us know. Then fix it.\n\nIssues List on github:\nhttps://github.com/DarkmatterVale/Haiku-Configuration-Repo/issues","tags":["python","hardware","haiku configuration","web app"],"private_metadata":"","mentors":["diver@gelios.net","kacperkasper@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","HumdingerB@googlemail.com"],"max_instances":9,"name":"Fix a bug in our web app that records hardware compatibility","last_modified":"2017-11-07T16:38:37Z","is_beginner":false,"id":5760824507367424,"categories":[1,2,3,4,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to create a recipe for **[0 A.D.](https://play0ad.com/)** a free, open-source game of ancient warfare.\n\nYou can find the sources on the project homepage: https://play0ad.com/download/\n\nThe recipe should be added to haikuports at haikuports/games-strategy/zero_ad\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe","games","games-strategy"],"private_metadata":"","mentors":["bga@bug-br.org.br","Niels.Reedijk@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for 0 A.D. game","last_modified":"2017-11-05T13:21:21Z","is_beginner":false,"id":6090652427223040,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **ZDoom**.\n\nZDoom is an engine for playing the game Doom, and other first person shooter games. You can find more information on the home page: http://zdoom.org/About\n\nA follow-up task will be about packaging the Freedoom level set to play with this engine.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","game","recipe","c","fps"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","philippehoudoin@gmail.com","agarwalakshayakshay8@gmail.com","manirudh18@gmail.com"],"max_instances":1,"name":"Port zdoom and create a recipe for it.","last_modified":"2017-10-29T14:40:52Z","is_beginner":false,"id":6114650355662848,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/Hare/issues/1\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","anevilyak@gmail.com","RaefaldhiAmartya@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Update Hare to use layout management [BONUS]","last_modified":"2017-10-29T14:43:07Z","is_beginner":false,"id":6710803291963392,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Scooby**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/Scooby\n\nThe recipe should be added to haikuports at haikuports/mail-client/scooby/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","diver@gelios.net","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Scooby","last_modified":"2017-11-30T17:45:33Z","is_beginner":false,"id":5697227517329408,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"Before claiming this task, you must first complete the research task to learn Icon-O-Matic.\n\nYour task is to create a tutorial video for Icon-O-Matic. Basis is the result of the research task [Research Icon-O-Matic to prepare a tutorial video](https://codein.withgoogle.com/tasks/6171884330680320/).\n\n* Set your host's and Haiku's resolution to 1280x720 and record in full-screen.\n* All material seen or heard have to be under a suitable creative commons license. Provide a link to the material in a comment to the task.\n\nIf the video gets over 10 minutes, we can do this in parts and create follow-up tasks. If so, the parts should be divided into roughly equal sizes and more or less self contained.","tags":["icon-o-matic","video","tutorial","icons"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","richienyhus@gmail.com","florentina.musat.28@gmail.com","Niels.Reedijk@gmail.com"],"max_instances":3,"name":"Create a tutorial video for Icon-O-Matic.","last_modified":"2018-01-09T18:50:14Z","is_beginner":false,"id":6371480810029056,"categories":[3],"external_url":"https://discuss.haiku-os.org/t/contents-of-icon-o-matic-tutorial-video/4462"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libpgf**.\n\nlibpgf is an implementation of the Progressive Graphics File (PGF) format and allows to load, handle and manipulate images in that format.\n\nYou can find the sources on the project homepage: http://www.libpgf.org/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libpgf/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","bga@bug-br.org.br","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for libpgf","last_modified":"2017-12-30T13:52:59Z","is_beginner":false,"id":4821838356021248,"categories":[1],"external_url":"http://www.libpgf.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **p11-kit**.\n\nThis software provides a way to load and enumerate PKCS#11 modules. \n\nYou can find the sources on the project homepage: https://p11-glue.freedesktop.org/p11-kit.html\n\nThe recipe should be added to haikuports at haikuports/app-crypt/p11-kit/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","m.anirudh18@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for p11-kit, a cryptography-related software to discover PKCS#11 modules. (probably a hard task)","last_modified":"2017-12-30T13:53:37Z","is_beginner":false,"id":6253018901118976,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nFor this task, you have to update two haikuporter recipes, which is a kind of script that automates this process. Depending on the targeted software you may need these skills:\n\nSome knowledge of C, C++, git and bash\nKnowledge of the GNU autotools and/or cmake\nThe package may require some patching to get it to work on Haiku\n\nInstall HaikuPorter and run haikuporter --lint\nThis will show a lot of recipes that are currently not working. For this task pick two of these \"broken\" recipes and convert them to have a properly formatted and working recipe that builds .hpkg files.\n\nBefore submitting your work, make sure to test your recipe by creating a hpkg package from it with haikuporter. Haiku's Expander app can open hpkg files to inspect their contents.\n\nTake care to include all required licenses and copyright entries.\n\nBe sure to update the SUMMARY to be 70 characters or less, and have a DESCRIPTION that is 2-4 sentences long that describes what the package is. This is what shows up in HaikuDepot when users are looking to program to install.\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","HumdingerB@googlemail.com","jessica.l.hamilton@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":2,"name":"Get the Lint out of 2 Haikuports recipes failing for [NO SUMMARY] (1)","last_modified":"2017-12-26T19:48:03Z","is_beginner":false,"id":5375053229195264,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"A Haiku developer 'DarkWyrm' wrote a book a while back that has easy to follow lessons introducing the reader to programming with Haiku's API.\nA working knowledge of C++ is required.\n\nYour task is to follow the lessons and complete some of its assignments.\n\n[All details at our wiki.](https://dev.haiku-os.org/wiki/GoogleCodeInTaskBook2)\n\n/ Since this task requires running in Haiku please be sure you have Haiku up and running. If you haven't yet, then consider doing our \"Install and run Haiku\" task first./","tags":["haiku api","programming","book","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","jessica.l.hamilton@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","HumdingerB@googlemail.com"],"max_instances":20,"name":"Programming with Haiku (book 2)","last_modified":"2017-10-29T14:56:59Z","is_beginner":false,"id":4909305566330880,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **BePhoneBook**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BePhoneBook\n\nThe recipe may probably be added to haikuports at haikuports/app-apps/bephonebook/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","kacperkasper@gmail.com","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BePhoneBook, a phone book manager.","last_modified":"2017-11-05T12:34:43Z","is_beginner":false,"id":6632989020651520,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **Pe** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["richienyhus@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Pe","last_modified":"2018-01-03T18:47:31Z","is_beginner":false,"id":5756805156175872,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **VcardPeople**.\n\nThe VCard format is an open standard used for storing and interchanging personal (\"Business Card\") data by applications on many platforms. The two small programs in this packaga will convert between this format and Haiku 'Person' files, making it possible to share contact data between Haiku and other platforms.\n\nYou can find the sources on the project homepage: http://www.goodeveca.net/beos/vcardpeople.zip\n\nThe recipe should be added to haikuports at haikuports/haiku-misc/vcardpeople/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["bga@bug-br.org.br","Niels.Reedijk@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for VcardPeople, two small contact converters","last_modified":"2017-11-04T23:55:40Z","is_beginner":false,"id":6233747382861824,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/735"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **neofetch**, a CLI system information tool written in BASH.\n\nYou can find the sources on GitHub: https://github.com/dylanaraps/neofetch\n\nThe recipe should be added to haikuports at haikuports/app-misc/neofetch/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","app-misc"],"private_metadata":"","mentors":["anevilyak@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for neofetch.","last_modified":"2017-11-04T23:54:32Z","is_beginner":false,"id":6316680449884160,"categories":[1,5],"external_url":"https://github.com/dylanaraps/neofetch"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **AliveJournal**.\n\nYou can find the sources on the project homepage: https://github.com/grahams/alivejournal\n\nThe recipe should be added to haikuports at haikuports/haiku-apps/alivejournal/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["bga@bug-br.org.br","fbrosson2014-gci@yahoo.fr","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for AliveJournal, a LiveJournal client for Haiku.","last_modified":"2017-11-04T23:51:01Z","is_beginner":false,"id":4630905249333248,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/720"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libgpod**.\n\nlibgpod is a shared library to access the contents of an iPod.\n\nYou can find the sources on the project homepage: http://gtkpod.org/libgpod/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libgpod/.\n\n**Important:** This task depends on an existing recipe, \n[haikuports/app-pda/libusbmuxd](https://github.com/haikuports/haikuports/tree/master/app-pda/libusbmuxd), and on another task, _[Create a recipe for libimobiledevice](tasks/5378046284529664/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for libgpod (needs libusbmuxd and libimobiledevice) (probably a hard task)","last_modified":"2017-12-28T05:04:26Z","is_beginner":false,"id":4873381922996224,"categories":[1],"external_url":"http://gtkpod.org/libgpod/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"BeServed is a cross-platform network file sharing, designed around BeOS. \n\nThe goal of this task is to compile BeServed and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\nAny changes you needed to get things going (or none if it built without any changes)\nAddind a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["kacperkasper@gmail.com","philippehoudoin@gmail.com","manirudh18@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeServed to run on Haiku","last_modified":"2017-10-29T15:24:04Z","is_beginner":false,"id":6280756806549504,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeServed"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Create and submit a patch that add a commandline option to play urls and files.\n\nTicket:\n\nhttps://dev.haiku-os.org/ticket/9793","tags":["mediaplayer","streaming","programming","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","kacperkasper@gmail.com","RaefaldhiAmartya@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Improve Haiku Media Player: Add commandline options","last_modified":"2017-10-29T15:29:21Z","is_beginner":false,"id":5150273095860224,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"BeVexed is puzzle game for Haiku.\n\nPick one of the open issues for BeVexed and solve it.\nhttps://github.com/HaikuArchives/BeVexed\nhttps://github.com/HaikuArchives/BeVexed/issues\n\nTo complete this task you will need to:\n- Download and compile BeVexed's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the BeVexed repository on github so your changes are integrated.","tags":["games","c++","games-puzzle","bugs"],"private_metadata":"","mentors":["scottmc2@gmail.com","diver@gelios.net","Niels.Reedijk@gmail.com","HumdingerB@googlemail.com"],"max_instances":9,"name":"Fix an open issue in BeVexed","last_modified":"2017-10-29T15:32:16Z","is_beginner":false,"id":5938003182616576,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for dvdstyler.\n\nDVDStyler is a cross-platform free DVD authoring application that makes possible for video enthusiasts to create professional-looking DVDs.\n\nYou can find the sources on the project homepage: http://www.dvdstyler.org/\n\n**WARNING: dvdstyler may depend on other packages that are not yet available on HaikuPorts, so it is not yet known whether or not this task may be completed without additional work on other recipes.**\n\nThe recipe should be added to haikuports at haikuports/media-video/dvdstyler/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-video"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","diver@gelios.net","agarwalakshayakshay8@gmail.com","bvitruvio@gmail.com","manirudh18@gmail.com"],"max_instances":1,"name":"Create a recipe for dvdstyler, a DVD authoring application.","last_modified":"2017-11-20T17:45:43Z","is_beginner":false,"id":5713223049281536,"categories":[1,2,5],"external_url":"http://www.dvdstyler.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **2dPhysicsDemo**.\nAlso do a pull request on the 2dPhysicsDemo repo to add a .pld and makefile. This can be done by loading the .prj file using Paladin and then saving it as a .pld and exporting a makefile. Verify that you are able to build and run 2dPhysicsDemo using Paladin, and from the command line using the makefile. Then commit those changes. Once those changes are accepted, finish up the recipe to build using the new makefile you just created.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/2dPhysicsDemo\n\n\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com","raefaldhiamartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for 2dPhysicsDemo","last_modified":"2017-11-04T23:46:50Z","is_beginner":false,"id":5448415028707328,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The CatKeys editor (https://github.com/puckipedia/BeLocalized) is an application used to translate other Haiku applications to different languages.\n\nThe goal of this task is to fix a bug in CatKey editor (from the list here: https://github.com/puckipedia/BeLocalized/issues).\n\nTo complete this task you will need to:\n- Download and compile the application sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the repository on github so your changes are integrated.\n- Comment on the issue you fixed with a link to your pull-request.","tags":["catkeys","bugs","c++","localization"],"private_metadata":"","mentors":["humdingerb@googlemail.com","revolf@gmail.com","nielsreedijk@gmail.com","jessicalhamilton@gmail.com"],"max_instances":6,"name":"CatKeysEditor - fix an issue","last_modified":"2017-10-29T15:44:57Z","is_beginner":false,"id":6366699303469056,"categories":[1,2],"external_url":"https://github.com/puckipedia/BeLocalized/issues"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **mbedtls**.\n\nmbed TLS (formerly known as PolarSSL) makes it trivially easy for developers to include cryptographic and SSL/TLS capabilities in their (embedded) products, facilitating this functionality with a minimal coding footprint.\n\nYou can find the sources on the project homepage: https://tls.mbed.org/\n\nThe recipe should be added to haikuports at haikuports/net-libs/mbedtls/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","bga@bug-br.org.br","philippe.houdoin@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for mbedtls, a cryptographic library for embedded systems.","last_modified":"2017-11-04T23:46:12Z","is_beginner":false,"id":5721140083294208,"categories":[1],"external_url":"https://tls.mbed.org/"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to add support for user avatars. The protocol to do so is specified in https://xmpp.org/extensions/xep-0084.html . Jabber4Haiku should get the capacity to:\n- Select an avatar for the local user, and share it on the XMPP network,\n- Download and display the avatar of remote contacts, in the contact list and/or the chat window.","tags":["xml","xmpp","jabber4haiku","network","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","adrianarroyocalle@gmail.com","agarwalakshayakshay8@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP client - User avatars","last_modified":"2017-10-29T15:48:07Z","is_beginner":false,"id":6180393956933632,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/12"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"BSAP is currently an English-Polish dictionary application.\nThe goal of this task is to update the code from sqlite version 2 to the current version 3.\n\n- Get the sources from the repository: https://github.com/ytmytm/beos-bsap\n- Make sure you can compile and run it\n- Rework the code to use sqlite3 (sqlite2 was already removed, check the git history)","tags":["building","debug","abandonware","c++"],"private_metadata":"","mentors":["bga@bug-br.org.br","kushalspidermansingh@gmail.com","revolf@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Update BSAP to sqlite3","last_modified":"2017-11-03T19:17:09Z","is_beginner":false,"id":6372127403933696,"categories":[1],"external_url":"https://github.com/ytmytm/beos-bsap"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to compile Archiver and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["kacperkasper@gmail.com","revolf@gmail.com","richienyhus@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Get Archiver to run on Haiku","last_modified":"2017-11-03T19:17:59Z","is_beginner":false,"id":6402028228050944,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/Archiver"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **CodyCam** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for CodyCam","last_modified":"2018-01-07T18:31:48Z","is_beginner":false,"id":4634924600524800,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Install and Run HaikuPorter\nThis task will introduce you to HaikuPorter, the tool that builds software packages from so-called recipes. For this task you already need to run Haiku successfully.\n\nFor more information see our wiki \"[Install and run HaikuPorter](https://dev.haiku-os.org/wiki/GoogleCodeInTaskInstallHaikuporter)\".","tags":["haikuporter","install"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com","begasus@gmail.com","code.deepanshu@gmail.com"],"max_instances":100,"name":"Install and run HaikuPorter","last_modified":"2017-12-15T13:28:26Z","is_beginner":false,"id":5276128321208320,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2017,"description":"Binder is a library to support cross-platform inter-process communication:\n https://github.com/HaikuArchives/OpenBinder\n\nThe goal of this task is just to fix up the build system so Binder can attempt to compile on Haiku. Although it will run into some big problems when compiling, these will be solved later in other tasks. Your only job is to fix up the makefiles and the C++ sourcecode so it will get to this stage and to change the build target from BeOS over to Haiku.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going.\n* Addind a COMPILING file with compiling instructions.","tags":["c++","build system"],"private_metadata":"","mentors":["bga@bug-br.org.br","kushalspidermansingh@gmail.com","philippehoudoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get Binder to run on Haiku","last_modified":"2017-11-03T19:18:56Z","is_beginner":false,"id":5154856899706880,"categories":[1,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **tinyptc**.\n\nTinyPTC is a minimal library for 2D display rendering.\n\nYou can find the sources in the sourceforge project page: https://sourceforge.net/projects/tinyptc/\n\nThe sources were already ported to BeOS and it is possible to reuse that port for Haiku as well.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","haikuports","compiling","recipe","rendering"],"private_metadata":"","mentors":["anevilyak@gmail.com","m.anirudh18@gmail.com","florentina.musat.28@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for tinyptc","last_modified":"2017-11-03T19:20:26Z","is_beginner":false,"id":5839078274629632,"categories":[1],"external_url":"https://sourceforge.net/projects/tinyptc/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ZooKeeper**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/ZooKeeper\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","Niels.Reedijk@gmail.com","richienyhus@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for ZooKeeper","last_modified":"2017-11-04T23:44:43Z","is_beginner":false,"id":4845163450990592,"categories":[1],"external_url":"https://github.com/HaikuArchives/ZooKeeper"},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **HaikuDepot** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for HaikuDepot","last_modified":"2018-01-03T18:46:20Z","is_beginner":false,"id":4812103275773952,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/Globe\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs: [1](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1), [2](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf), [3](https://api.haiku-os.org/layout_intro.html), [4](http://cgit.haiku-os.org/haiku/tree/src), [5](http://xref.plausible.coop/source/).","tags":["layout management","c++","haikuapi"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Update Globe to make use of Layout Managament","last_modified":"2017-11-03T19:24:00Z","is_beginner":false,"id":6426235200602112,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Globe"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **calcurse**, calendar and scheduling application for the command line.\n\nYou can find the sources on the project homepage: http://calcurse.org/\n\nThe recipe should be added to haikuports at haikuports/app-office/calcurse/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","app-office","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","florentina.musat.28@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for calcurse, a calendar and scheduling application for the command line.","last_modified":"2017-11-04T23:43:40Z","is_beginner":false,"id":6491253690597376,"categories":[1],"external_url":"http://calcurse.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Gadgeteer**.\n\n**Gadgeteer** is a command-line app that displays selected GUI controls in a panel and returns their values.\n\nYou can find the sources on the project homepage: http://www.goodeveca.net/beos/Gadgeteer_0.8.1_SRC.zip\n\nThe recipe should be added to haikuports at haikuports/haiku-misc/gadgeteer/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","florentina.musat.28@gmail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Gadgeteer","last_modified":"2017-11-04T23:42:34Z","is_beginner":false,"id":6229213239574528,"categories":[1,5],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **msieve**.\n\nmsive is a C library implementing a suite of algorithms to factor large integers.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/msieve/\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/msieve/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","Niels.Reedijk@gmail.com","scottmc2@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for msieve.","last_modified":"2017-11-04T23:41:57Z","is_beginner":false,"id":5823674374422528,"categories":[1],"external_url":"https://sourceforge.net/projects/msieve/"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"FontBoy is a small application to show your installed fonts in Haiku\n\nPick one of the open issues for FontBoy and solve it.\nhttps://github.com/HaikuArchives/FontBoy/\nhttps://github.com/HaikuArchives/FontBoy/issues\n\nTo complete this task you will need to:\n- Download and compile FontBoy's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the FontBoy repository on github so your changes are integrated.","tags":["c++","fonts","bugs","issues"],"private_metadata":"","mentors":["anevilyak@gmail.com","revolf@gmail.com","philippe.houdoin@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":8,"name":"Fix a open issue in FontBoy","last_modified":"2017-11-03T19:26:43Z","is_beginner":false,"id":5631165887152128,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to fix the recipe for **numptyphysics**.\nhttps://github.com/haikuports/haikuports/tree/master/games-puzzle/numptyphysics\n\nThis recipe was written during GCI2015 but didn't work due to a broken box2d. The box2d recipe appears to have been fixed since then, so we should be able to get the numptyphysics recipe working again. If you feel adventurous see if you can also write a recipe for the add-on levels pack.\nhttp://numptyphysics.garage.maemo.org/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","recipe","games","physics"],"private_metadata":"","mentors":["scottmc2@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com"],"max_instances":1,"name":"Fix NumptyPhysics recipe","last_modified":"2017-11-09T17:50:00Z","is_beginner":false,"id":5584903385120768,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/tree/master/games-puzzle/numptyphysics"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeAccessible**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeAccessible\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["bga@bug-br.org.br","HumdingerB@googlemail.com","m.anirudh18@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeAccessible, a Microsoft Access like application for Haiku","last_modified":"2017-11-03T19:28:25Z","is_beginner":false,"id":5103313332731904,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to compile MoleSvn and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","florentina.musat.28@gmail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get MoleSvn to run on Haiku","last_modified":"2017-11-03T19:30:10Z","is_beginner":false,"id":4638274138144768,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/MoleSvn"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BePodder** on Haiku for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. For testing BePooder you will need to download it from github.com/haikuarchives/bepodder and compile it, this ensures you have the latest code as many changes have been made recently.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","issues","enhancements"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BePodder for Bugs and Issues. [BONUS]","last_modified":"2018-01-10T19:58:23Z","is_beginner":false,"id":5157451596824576,"categories":[1,2,3,4],"external_url":"https://github.com/HaikuArchives/BePodder/issues"},{"status":1,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **People** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for People","last_modified":"2018-01-03T18:54:14Z","is_beginner":false,"id":5190780543041536,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for the game **No Gravity**.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/nogravity/\n\nYou can find an old BeOS port in its source code.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","kushal.spiderman.singh@gmail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for No Gravity","last_modified":"2017-11-04T23:40:09Z","is_beginner":false,"id":5425419773804544,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/634"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/ArtPaint/issues/45\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs:\n\n* [Introductory article, although a bit old...](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1)\n* [Article on creating UIs using the Layout API](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf)\n* [Layouting intro in the Haiku API docs](https://api.haiku-os.org/layout_intro.html)\n* [Apps and prefs in the Haiku tree](http://cgit.haiku-os.org/haiku/tree/src)\n* [Search the Haiku source tree](http://xref.plausible.coop/source/)","tags":["layout api","layout management","haiku api","c++"],"private_metadata":"","mentors":["revolf@gmail.com","agarwalakshayakshay8@gmail.com","bvitruvio@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert ArtPaint to use the Haiku layout API. (Potentially a hard task)","last_modified":"2017-11-28T23:42:42Z","is_beginner":false,"id":6332394191716352,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **FontBoy** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/FontBoy/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["anevilyak@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test FontBoy for Bugs and Issues.","last_modified":"2018-01-03T18:38:35Z","is_beginner":false,"id":4587323142438912,"categories":[4],"external_url":"https://github.com/HaikuArchives/FontBoy/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"FtpPositive is an FTP client for Haiku\n\nPick one of the open issues for FtpPositive solve it.\n\n- https://github.com/HaikuArchives/FtpPositive/\n- https://github.com/HaikuArchives/FtpPositive/issues\n\nTo complete this task you will need to:\n- Download and compile FtpPositive's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the FtpPositive repository on github so your changes are integrated.","tags":["layout api","ftp","rdef","bugs","c++"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","philippe.houdoin@gmail.com","adrian.arroyocalle@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix an open issue in FtpPositive","last_modified":"2017-11-03T19:31:40Z","is_beginner":false,"id":4505265980309504,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **johntheripper**.\n\n**John the Ripper** is a fast password cracker.\n\nYou can find the sources on the project homepage: http://www.openwall.com/john/\n\nThe recipe should be added to haikuports at haikuports/app-crypt/johntheripper/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["bga@bug-br.org.br","diver@gelios.net","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for johntheripper.","last_modified":"2017-11-04T23:39:32Z","is_beginner":false,"id":6542765716406272,"categories":[1,5],"external_url":"http://www.openwall.com/john/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our guide to virtualising Haiku with [KVM](https://raw.githubusercontent.com/haiku/website/master/content/guides/virtualizing/kvm.md) is very out of date and needs updating, due to various changes in KVM, in the types of bootable medium Haiku is distributed on, as well as changes in Haiku itself.\n\nRewrite the article to be updated, easier to understand and with newer screenshots.\n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running a mainstream version of Linux (Ubuntu, Mint etc) and a the KVM software.\n\nThe article is wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.","tags":["writing","markdown","kvm","linux"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Rewrite the KVM guide","last_modified":"2017-12-07T18:39:50Z","is_beginner":false,"id":5245580903186432,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The Haiku Maps application was created during Google Code-In 2016.  This task to to add a new feature to the application.\n\nMaps is located at https://github.com/raefaldhia/Maps\n\nFor this task, pick one of the open enhancement issues listed here:\nhttps://github.com/raefaldhia/Maps/issues\nWhen claiming the task let us know which issue you plan to work on, so that we don't have more than one student working on adding the same feature at the same time.\n\nWork should be submitted as a pull request\n\nMore instances of this task can be added if a student successfully completes it.","tags":["haiku api","c++"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","revolf@gmail.com","RaefaldhiAmartya@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":15,"name":"Add feature to Maps application (1)","last_modified":"2017-12-12T21:08:39Z","is_beginner":false,"id":5127118994276352,"categories":[1],"external_url":"https://github.com/raefaldhia/Maps"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **MoleSvn**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/MoleSvn\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MoleSvn","last_modified":"2017-11-05T00:13:43Z","is_beginner":false,"id":5206494284873728,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"We need a system wide password manager application that acts as a frontend for the keystore server. It should be able to be used by other applications on the system to store user identifiers and passwords, such as for: WebPositive, HaikuTwitter, BlogPositive, FtpPositive, HaikuTodo etc.\n\n----\n\nFor this first task you need to design a mockupuser interface for the application. Don't worry, it doesn't need to be functional just yet, that's for later tasks. Just design the UI.\n\nFor inspiration, look at the UI of the following apps: KWallet, enpass, 1Password, Gnome Seahorse, Apple Keychain Access, mSecure.","tags":["app","ui","security","c++","password manager"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","m.anirudh18@gmail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Password Manager using Haiku's BKeystore (part 1)","last_modified":"2017-11-03T19:35:16Z","is_beginner":false,"id":6108648877064192,"categories":[2],"external_url":"https://dev.haiku-os.org/ticket/12812"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://dev.haiku-os.org/ticket/13182\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as patch or diff on [Haiku's bug tracker](https://dev.haiku-os.org/ticket/13182). Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs: [1](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1), [2](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf), [3](https://api.haiku-os.org/layout_intro.html), [4](http://cgit.haiku-os.org/haiku/tree/src), [5](http://xref.plausible.coop/source/).","tags":["layout api","layout management","haiku api","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","agarwal.akshay.akshay8@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert SoundRecorder to use the Haiku layout API","last_modified":"2017-12-04T19:40:40Z","is_beginner":false,"id":6494754424487936,"categories":[1,2],"external_url":"https://dev.haiku-os.org/ticket/13182"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Haiku implements the POSIX system interfaces, which are standardized accross several operating systems. This allows easier portability of applications and libraries from one system to another.\n\nHowever, the implementation is sometimes incomplete. This is the case for the getrlimit and setrlimit functions\n\nThe goal of this task is to complete the implementation of one of the missing limits, as specified here:\nhttp://pubs.opengroup.org/onlinepubs/9699919799/functions/getrlimit.html","tags":[".h","posix","programming","header files"],"private_metadata":"","mentors":["anevilyak@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix resource.h","last_modified":"2017-11-03T19:41:48Z","is_beginner":false,"id":6147853338542080,"categories":[1],"external_url":"https://dev.haiku-os.org/ticket/3353"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to implement \"user tune\" as specified in https://xmpp.org/extensions/xep-0118.html. This extension allows to display the currently playing song from a media player application.\n\nTo complete this task, Jabber4Haiku should:\n- Download and display the currently playing song from remote users (in the buddy list and/or in the chat window)\n- Query MediaPlayer about the currently played song and send that on the XMPP network.","tags":["jabber4haiku","xmpp","network","c++","ipc"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","b.vitruvio@gmail.com","pulkomandy@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"XMPP Client - \"now playing\" / \"user tune\" support","last_modified":"2017-12-07T18:35:39Z","is_beginner":false,"id":5718588000305152,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/15"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeTeX** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeTeX) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\n*** Check how the program looks when you set the system font to size 8, repeat this with the system font size set to 18. Note any issues seen. ***\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeTex and create new issues for bugs and enhancements","last_modified":"2018-01-03T18:44:47Z","is_beginner":false,"id":5720401550245888,"categories":[2,4,5],"external_url":"https://github.com/HaikuArchives/BeTeX"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to port one of the games listed on the osgameclones page and write a recipe for it. http://osgameclones.com/ \n\nWarning: some games may already be ported, and some may not be easily portable because of missing dependencies. Choose wisely and tell the mentors which game you plan to work on when claiming the task.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nFor some game porting tips also see: [\"Common Issues when Porting Games\"](https://github.com/haikuports/haikuports/wiki/Common-Issues-when-Porting-Games).\n\nIf a game requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["haikuports","porting","osgameclones","recipe","games"],"private_metadata":"","mentors":["diver@gelios.net","adrian.arroyocalle@gmail.com","kacperkasper@gmail.com","scottmc2@gmail.com","begasus@gmail.com"],"max_instances":10,"name":"Create a recipe for a game listed on osgameclones (1)","last_modified":"2017-10-29T15:58:25Z","is_beginner":false,"id":4982415908929536,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **xwax**, a Digital Vinyl System (DVS).\n\nYou can find the sources on the project homepage: http://xwax.org/\n\nYou can also browse the sources on GitHub: https://github.com/xwax/xwax\n\nThe recipe should be added to haikuports at haikuports/media-sound/xwax/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","media-sound","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","Niels.Reedijk@gmail.com","philippe.houdoin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for xwax, a Digital Vinyl System (DVS).","last_modified":"2017-12-30T13:54:47Z","is_beginner":false,"id":5809177450512384,"categories":[1,2],"external_url":"http://wiki.xwax.org/"},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"This is a research task in order to make a video (which will be a follow-up task), showing in detail how to use Icon-O-Matic to create Haiku vector icons.\n\nYou need a current [nightly Haiku image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid) installed to work on it.\n\nYou should read the topic on [I-O-M in the user guide](https://www.haiku-os.org/docs/userguide/en/applications/icon-o-matic.html) while you make yourself familiar with the application. Nevertheless, you'll have questions while trying to figure everything out. Please join the [#haiku IRC channel](https://www.haiku-os.org/community/irc) to ask questions, and/or post in the [Haiku forums](https://discuss.haiku-os.org/) by creating *one* thread there, explaining your mission.\nYou can also comment here, of course, if you don't get the answers from those other channels.\n\nWhen you think you know enough to explain I-O-M to others, write a plain text document on how and what will be shown in the video demonstration. Present your document in another thread in the forums and ask for feedback. What feature is missing? Are there more questions that should be answered? etc.\n\nLink to your forum posts and attach your first draft document in a comment to this task as soon as you've created them.\n\nAlso create at least one semi-complex Haiku style icon using I-O-M and submit a png export of it as well. Here are the Haiku [Icon Guidelines](https://www.haiku-os.org/development/icon-guidelines)","tags":["icon-o-matic","video","tutorial","icons"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Research Icon-O-Matic to prepare a tutorial video","last_modified":"2017-12-04T19:48:58Z","is_beginner":false,"id":6678967719297024,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://dev.haiku-os.org/ticket/12249","tags":["development","article","testing","unit testing","writing"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to use unit tests when developing Haiku","last_modified":"2018-01-06T08:47:10Z","is_beginner":false,"id":6675618181677056,"categories":[1,3],"external_url":"https://dev.haiku-os.org/ticket/12249"},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **fdk-aac**.\n\nAdvanced Audio Coding (AAC) is the successor format to MP3.\n\nfdk-aac is the Fraunhofer AAC codec library.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/opencore-amr/\n\nThe recipe should be added to haikuports at haikuports/media-libs/fdk-aac/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","diver@gelios.net","pulkomandy@gmail.com"],"max_instances":1,"name":"Create a recipe for fdk-aac, the Fraunhofer AAC codec library. (potentially a hard task)","last_modified":"2017-12-05T05:09:55Z","is_beginner":false,"id":6011364982128640,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **DeeperPeople**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/DeeperPeople\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","revolf@gmail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for DeeperPeople","last_modified":"2017-11-03T19:51:13Z","is_beginner":false,"id":5863285247180800,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing BeCasso for bugs and other issues for this task.\nYou can use haikuporter to build it.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find and report new bugs and create new enhancements. This application will likely have several issues as it is an old BeOS program and very out of date.\n\nPlease report the issue here:\nhttps://github.com/orangejua/Becasso","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeCasso for Bugs and Issues.","last_modified":"2018-01-03T18:58:42Z","is_beginner":false,"id":5054494050091008,"categories":[2,3,4],"external_url":"https://github.com/orangejua/Becasso"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will be writing a guide on how to use veertu to virtualise Haiku on MacOS. The article should include screenshots and full step by step instructions. See the article about running [Haiku in KVM on Linux](https://www.haiku-os.org/guides/virtualizing/kvm) for an example of previously completed guide. \n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running MacOS 10.12/13 (Sierra or High Sierra) and a version of Veertu. \n\nThe article is wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.\n \nYou should submit a few screenshots early to get mentor feedback to make sure you are on the right track.","tags":["article","macos","writing","veertu","osx"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","HumdingerB@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to run Haiku with Veertu","last_modified":"2017-12-07T18:38:40Z","is_beginner":false,"id":6637342171332608,"categories":[3],"external_url":"https://veertu.com/"},{"status":1,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ifuse**.\n\nifuse is a fuse filesystem to access the contents of iOS devices.\n\nYou can find the sources on the project homepage: http://www.libimobiledevice.org/\n\nYou can also browse the sources on GitHub: https://github.com/libimobiledevice/ifuse\n\nThe recipe should be added to haikuports at haikuports/app-pda/ifuse/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-pda"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for ifuse (probably a hard task)","last_modified":"2017-11-05T13:22:39Z","is_beginner":false,"id":4866132018200576,"categories":[1],"external_url":"https://github.com/libimobiledevice/ifuse"},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **gimps**, the Great Internet Mersenne Prime Search.\n\nYou can find the sources on the project homepage: http://www.mersenne.org/download/#source\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/gimps/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","florentina.musat.28@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for gimps (Great Internet Mersenne Prime Search)","last_modified":"2017-11-05T13:18:58Z","is_beginner":false,"id":5769444238295040,"categories":[1,5],"external_url":"http://www.mersenne.org/"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"There are currently 100+ open issues on HaikuPorts. This task is to pick one of those and to fix it.\n\nhttps://github.com/haikuports/haikuports/issues\n\nWhen claiming this task, post a comment to let us know which one you plan to work on.\n\nIf you complete this task, and would like to do more of this type let a mentor know and we can create another copy of this task.","tags":["haikuports","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","revolf@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":3,"name":"Fix an open issue on HaikuPorts (1)","last_modified":"2017-12-26T19:44:51Z","is_beginner":false,"id":5753730496462848,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2017,"description":"Haiku includes a audio player application called MediaPlayer, however Haiku currently has no open source music manager or jukebox application. A music manager that takes advantage of Haiku's unique attribute system to sort and filter songs would be very powerful.\n\nThe application should be able to filter music by song, artist, album, year of release, genre, mood and user rating.\n\nThere are a few prototypes that already exist on Haiku, so your first task is to test these applications to see if any of the code is usable or if we need to start from scratch. Report back here the status of each application and what you think we should do.\n\nFor Part 2 of this program, you will need to add support for actually playing a selected music track or playlist.\nhttps://github.com/raefaldhia/MusicManager/issues/7\nAdd code to be able to read the audio tags and display them and any cover art.\nhttps://github.com/raefaldhia/MusicManager/issues/8\nAlso write code to implement support for showing more attributes in the list, see https://github.com/raefaldhia/MusicManager/issues/9\n\nResults from Part 1 of the task can be found here:\nhttps://github.com/raefaldhia/MusicManager","tags":["audio","mp3","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Music Manager (Part 2)","last_modified":"2017-10-28T19:16:26Z","is_beginner":false,"id":5638190037729280,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **stegdetect**.\n\nstegdetect is an automated tool for detecting steganographic content in images.\n\nYou can find the sources on the project homepage: https://github.com/abeluck/stegdetect\n\nThe recipe should be added to haikuports at haikuports/app-crypt/stegdetect/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","diver@gelios.net","anevilyak@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for stegdetect, a tool for detecting steganographic content in images.","last_modified":"2017-12-30T13:57:16Z","is_beginner":false,"id":5511442264489984,"categories":[1],"external_url":"https://github.com/abeluck/stegdetect"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you need to convert our **[​VirtualBox](https://github.com/haiku/website/blob/master/content/guides/virtualizing/virtualbox.html)** article to markdown and submit your work to our [website rewrite project](https://github.com/haiku/website). You might need to update the style and formatting of the article to be compatible with markdown.\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com).","tags":["article","markdown","html","writing"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","kushal.spiderman.singh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert our ​VirtualBox article to markdown and update","last_modified":"2017-11-30T18:14:26Z","is_beginner":false,"id":5717806853128192,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **TextSearch** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for TextSearch","last_modified":"2018-01-07T18:31:31Z","is_beginner":false,"id":4643544331452416,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **bzrtp**, an opensource implementation of [ZRTP](https://en.wikipedia.org/wiki/ZRTP) keys exchange protocol.\n\nYou can find the sources on the project homepage: http://www.linphone.org/\n\nYou can also browse the sources on GitHub: https://github.com/BelledonneCommunications/bzrtp\n\nThe recipe should be added to haikuports at haikuports/net-libs/bzrtp/.\n\n**Important:** This task depends on two other tasks: _\"[Create a recipe for mbedtls, a cryptographic library for embedded systems](tasks/5721140083294208/)\"_ and _\"[Create a recipe for bctoolbox, a library that allows to create and run audio and video streams.](tasks/5518783772884992/)\"_\nIt may also be made to depend on _\"[Create a recipe for bcunit, a lightweight system for writing, administering, and running unit tests in C.](tasks/4792101076205568/)\"_\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"[HOLD?] Create a recipe for bzrtp, an opensource implementation of ZRTP keys exchange protocol. (requires mbedtls and bctoolbox)","last_modified":"2017-12-03T17:26:31Z","is_beginner":false,"id":4737385340338176,"categories":[1],"external_url":"https://github.com/BelledonneCommunications/bzrtp"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"[WaveView](https://github.com/aldeck/waveview) needs an icon. You'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/). \n\nBuild the application and run it, then see if you can come up with an icon to represent it.\nIcon should be submitted as an HVIF rdef file, png and as a .IOM file.\n\nhttps://github.com/aldeck/waveview/issues/1","tags":["icon-o-matic","hvif","design","icons"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","m.anirudh18@gmail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create an icon for WaveView","last_modified":"2017-11-03T19:47:01Z","is_beginner":false,"id":6219478159327232,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **jigit**, a set of tools to work with jigdo files.\n\nJigdo files are files generated by the jigdo utility (see task _\"[Create a recipe for jigdo](tasks/4841678420574208/)\"_), which is used to distribute CD and DVD images.\n\nYou can find the sources on the project homepage: http://www.einval.com/~steve/software/JTE/\n\nYou can also browse the sources on https://git.einval.com/cgi-bin/gitweb.cgi?p=jigit.git\n\nThe recipe should be added to haikuports at haikuports/app-misc/jigit/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-misc"],"private_metadata":"","mentors":["bga@bug-br.org.br","Niels.Reedijk@gmail.com","florentina.musat.28@gmail.com","fbrosson2014-gci@yahoo.fr","begasus@gmail.com"],"max_instances":1,"name":"Create a recipe for jigit","last_modified":"2017-12-30T13:56:49Z","is_beginner":false,"id":4982748970221568,"categories":[1],"external_url":"http://www.einval.com/~steve/software/JTE/"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"==== This needs a better description before posting ====\nImplement a console/serial VirtIO driver for Haiku","tags":["driver","serial","virtio","console","advanced"],"private_metadata":"","mentors":["pulkomandy@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"[HOLD] Implement a console/serial VirtIO driver for Haiku","last_modified":"2017-11-28T14:22:06Z","is_beginner":false,"id":6390123853774848,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"http://api.haiku-os.org","tags":["haiku-api","network kit","api","network"],"private_metadata":"","mentors":["humdingerb@googlemail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[Hold - needs a description of what to do] Write API documentation for Network Kit classes","last_modified":"2017-10-28T19:16:10Z","is_beginner":false,"id":6419243732041728,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **mlucas**.\n\nmlucas is a program for performing Lucas-Lehmer tests and sieve-based trial-factoring (TF) of prime-exponent Mersenne numbers. It works on both Intel/AMD processors as well as on non-x86-based processors.\n\nYou can find the sources on the project homepage: http://hogranch.com/mayer/README.html\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/mlucas.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["diver@gelios.net","fbrosson2014-gci@yahoo.fr","kushalspidermansingh@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for mlucas, a program to search Mersenne prime numbers.","last_modified":"2017-11-05T13:16:51Z","is_beginner":false,"id":4592688093462528,"categories":[1],"external_url":"http://hogranch.com/mayer/README.html"},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **Debugger** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["diver@gelios.net","anevilyak@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Debugger","last_modified":"2018-01-03T18:46:41Z","is_beginner":false,"id":6080918756261888,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **LegacyPackageInstaller** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for LegacyPackageInstaller","last_modified":"2018-01-03T18:54:26Z","is_beginner":false,"id":5147606994911232,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to compile BeSol and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["besol","games","c++","build system"],"private_metadata":"","mentors":["anevilyak@gmail.com","humdingerb@googlemail.com","agarwalakshayakshay8@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeSol to run on Haiku","last_modified":"2017-11-03T19:52:31Z","is_beginner":false,"id":5592038735085568,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeSol"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task, you will need to run Haiku on a PC the has the hardware that is discussed in one of the open issues, you will NOT be able to do this task in a VM. You will also need to know how to get Haiku up and running on real hardware. Pick from one of the following, verify it and report your findings, whether you are able to confirm the discussed issue, or if it appears to have been fixed since it was first reported.\n\n[https://dev.haiku-os.org/ticket/9404]\n[https://dev.haiku-os.org/ticket/9833]\n[https://dev.haiku-os.org/ticket/5779]","tags":["qa","hardware","testing","bugs"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","philippe.houdoin@gmail.com","revolf@gmail.com"],"max_instances":3,"name":"Test Haiku on Hardware and verify if open issues still exist or not","last_modified":"2018-01-10T19:51:48Z","is_beginner":false,"id":5368854517645312,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **NFTP**.\n\n**NFTP** is a text-mode ftp client\n\nYou can find the sources on the project homepage: http://www.ayukov.com/nftp/source-release.html\n\nHave look at this ticket on haikuports for more information: https://github.com/haikuports/haikuports/issues/738\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["bga@bug-br.org.br","begasus@gmail.com","m.anirudh18@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for NFTP, a text-mode ftp client for Haiku","last_modified":"2017-11-04T23:30:05Z","is_beginner":false,"id":6252538334543872,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/738"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Clockwerk** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Clockwerk for Bugs and Issues","last_modified":"2018-01-03T18:45:04Z","is_beginner":false,"id":4799474125766656,"categories":[4],"external_url":"https://github.com/stippi/Clockwerk/issues"},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"A [2048](https://github.com/TwoFX/Haiku2048) clone was written during Google Code-In 2015.\n\n[2048's issue tracker](https://github.com/TwoFX/Haiku2048/issues) lists several bugs and enhancements that should be fixed/implemented. Take your pick! \n\nYou must submit your work as a pull request to https://github.com/TwoFX/Haiku2048.","tags":["games-puzzle","game","c++","2048"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","RaefaldhiAmartya@gmail.com","florentina.musat.28@gmail.com","HumdingerB@googlemail.com"],"max_instances":9,"name":"Fix an issue of the game 2048 [1]","last_modified":"2017-11-03T19:54:47Z","is_beginner":false,"id":5808530856607744,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"A [2048](https://github.com/TwoFX/Haiku2048) clone was written during Google Code-In 2015.\n\nThe goal of this task is to add animations (see [issue #4](https://github.com/TwoFX/Haiku2048/issues/4) to the game (tiles, scores), so the gaming experience can be similar to the original [2048](https://github.com/gabrielecirulli/2048).\n\nYou must submit your work as a pull request to https://github.com/TwoFX/Haiku2048.","tags":["c++","animation","games","2048","games-puzzle"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","kushal.spiderman.singh@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add animations to Haiku2048 game","last_modified":"2017-11-03T19:56:32Z","is_beginner":false,"id":5566686281334784,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to be running a recent nightly build of x86_64 Haiku, either on real hardware or in a VM. You will also need to have Haikuporter installed and able to build recipes. For this task you will find 5 different recipes which have the ARCHITECHTURES=\"\" contain an unknown state for x86_64, this would be indicated by a ? before the name, as in \"?x86_64\". Remove the ? and see if the recipe will build or not. For ones that work, leave the ? out. For ones that fail, take notes and/or screenshots of where they are failing. Change the recipes for those that fail to mark them as failing by changing them to have a ! in front, as in \"!x86_64\"\nThen submit a pull request with your 5 updated recipes. For ones that fail open a new issue on Haikuports for each, stating that it fails to build on x86_64 and attach any screenshots or notes regarding your findings.","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","diver@gelios.net","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":0,"name":"Check if 5 different recipes will build or not on Haiku x86_64 (2)","last_modified":"2017-12-26T19:50:02Z","is_beginner":false,"id":5502116816748544,"categories":[4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"All modern operating systems now come bundled with a basic level of accessibility features, namely a screenreader. While these features are out of scope for Haiku R1, these features should be within the scope of Haiku R2.\n\nScreen readers are made up of three parts:\n\n* A backend Speech synthesis system\n* An API for 1stparty & 3rdparty access to the Speech synthesis library\n* An OS bundled screen reading utility for accessibility\n\nFor instance, ​Orca is the Gnome screen reader that communicates with the Accessibility Toolkit via the AT-SPI API. In Android you have Google Text-to-Speech, which is used by Google Talkback to provide speech feedback on what is being enacted, displayed or selected. In Windows, Microsoft Narrator uses the Microsoft Speech API.\n\n[Ticket](https://dev.haiku-os.org/ticket/12804)","tags":["screen reader","accessibility","c++"],"private_metadata":"","mentors":["philippehoudoin@gmail.com","nielsreedijk@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a ScreenReader for Haiku","last_modified":"2017-11-28T09:56:34Z","is_beginner":false,"id":5553067812454400,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **TV** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for TV","last_modified":"2018-01-04T18:54:12Z","is_beginner":false,"id":6753767259111424,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Vision is an IRC client for Haiku\n\nPick one of the open issues for Vision solve it.\n- https://github.com/HaikuArchives/Vision/\n- https://github.com/HaikuArchives/Vision/issues\n\nTo complete this task you will need to:\n- Download and compile Vision's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Vision repository on github so your changes are integrated.","tags":["vision","bugs","issues","irc client"],"private_metadata":"","mentors":["anevilyak@gmail.com","HumdingerB@googlemail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix open issue in Vision","last_modified":"2017-11-09T17:50:44Z","is_beginner":false,"id":5416865809563648,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Deskbar](https://drive.google.com/open?id=0BzmDvOVZZ5mtQkZZLWcyUXYxMEU), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","deskbar","haiku-nightly"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Deskbar","last_modified":"2018-01-03T18:47:07Z","is_beginner":false,"id":5021953431699456,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Twitcher](https://drive.google.com/open?id=0BzmDvOVZZ5mtMWFoLTBUUWJkcGs), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","twitcher","haiku-nightly"],"private_metadata":"","mentors":["diver@gelios.net","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Twitcher","last_modified":"2018-01-03T18:51:45Z","is_beginner":false,"id":6074392217911296,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **pcsc-lite**, a PC/SC Architecture smartcard middleware library which allows to read and use smartcards for cryptography.\n\nYou can find the sources on the project homepage: https://pcsclite.alioth.debian.org/pcsclite.html\n\nThe recipe should be added to haikuports at haikuports/sys-apps/pcsc-lite/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","sys-apps"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for pcsc-lite. (a smartcard middleware library) (probably a hard task)","last_modified":"2017-12-30T13:27:38Z","is_beginner":false,"id":4512290130886656,"categories":[1,5],"external_url":"https://pcsclite.alioth.debian.org/pcsclite.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"​[Scripting](https://www.haiku-os.org/documents/dev/using_scripting_in_haiku) is used in Haiku to interact programmatically with applications, like with the hey CLI tool. All apps already support basic scripting through the App Kit, but some would benefit from more specific scripting interfaces.\n\nMake Magnify controllable by scripting, like zoom factor, and other actions.","tags":["​scripting","ui","c++","magnify"],"private_metadata":"","mentors":["miqlas@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add a scripting interface to Magnify to make it more useful","last_modified":"2017-12-05T04:34:09Z","is_beginner":false,"id":4955018849419264,"categories":[1,2],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Sounds** Preference.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Sounds Preference","last_modified":"2018-01-03T18:55:21Z","is_beginner":false,"id":4885465075286016,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Haiku has a \"MIDI kit\" which allows to connect MIDI devices and applications for music making.\n\nThe goal of this task is to develop an application that connects to the MIDI kit that will log all MIDI events received. It will allow to debug problems with MIDI devices or apps not communicating with each other.","tags":["event logger","music","c++","midi"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Write a MIDI event logger","last_modified":"2017-12-10T01:11:53Z","is_beginner":false,"id":4591906946285568,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you need to complete the [VMware Fusion article](https://github.com/haiku/website/blob/master/content/guides/virtualizing/vmware-fusion.md).\n\nYou will be installing a recent [Haiku nightly image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid/) and fill out the missing to-do sections.\n\nThe updated article should be sent as pull request to our [website rewrite project](https://github.com/haiku/website).","tags":["vmware fusion","writing","vmware","docs","article"],"private_metadata":"","mentors":["bga@bug-br.org.br","HumdingerB@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Complete the VMware Fusion article","last_modified":"2017-11-28T18:29:19Z","is_beginner":false,"id":6668524170772480,"categories":[3],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Reuse Google's Breakpad (MIT)\n\nInspiration:\n* Apple Crash Reporter,","tags":["breakpad","crash reporter","c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","b.vitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD][FIXME] Code a Graphical Crash Reporter","last_modified":"2017-12-08T18:32:31Z","is_beginner":false,"id":6512864892289024,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Applications (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtS0lRd3c3bWlaNzA), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","applications","pre-beta","testing","haiku-nightly"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","code.deepanshu@gmail.com","adrian.arroyocalle@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Applications (session 2)","last_modified":"2018-01-08T03:32:52Z","is_beginner":false,"id":6566972688957440,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeMines** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeMines/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["miqlas@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeMines for Bugs and Issues.","last_modified":"2018-01-03T18:42:53Z","is_beginner":false,"id":4988750448820224,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeMines/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"FTPPositive is an FTP client for Haiku. It allows uploading and downloading files from servers.\n\nPick one of the open issues for FtpPositive and solve it.\n\nhttps://github.com/HaikuArchives/FtpPositive\nhttps://github.com/HaikuArchives/FtpPositive/issues","tags":["ftp","ui","bugs","c++","networking"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","code.deepanshu@gmail.com","kacperkasper@gmail.com"],"max_instances":2,"name":"Fix a bug in FtpPositive","last_modified":"2017-11-09T17:45:44Z","is_beginner":false,"id":5690068947697664,"categories":[1,2,4],"external_url":"https://github.com/HaikuArchives/FtpPositive/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **DeskNotes** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/DeskNotes/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test DeskNotes for Bugs and Issues.","last_modified":"2018-01-03T18:44:23Z","is_beginner":false,"id":5441072782114816,"categories":[4],"external_url":"https://github.com/HaikuArchives/DeskNotes/issues"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Eventual is a personal time management system for Haiku.\n\nThe goal of this task is to compile Eventual and make sure it runs correctly on a recent version of Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding to its bugtracker any obvious bugs you come across while completing this task\n* An updated readme.md with a screenshot of the application running on Haiku\n\nAnd once the pull request is accepted, write a Haikuporter recipe build it.","tags":["abandonware","c++","build system"],"private_metadata":"","mentors":["anevilyak@gmail.com","agarwal.akshay.akshay8@gmail.com","kushal.spiderman.singh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get Eventual to run on Haiku [Potentially a Hard task]","last_modified":"2017-12-10T01:16:26Z","is_beginner":false,"id":5264223946932224,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/Eventual"},{"status":1,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **LaunchBox** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["anevilyak@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for LaunchBox","last_modified":"2018-01-03T18:52:31Z","is_beginner":false,"id":5988369727225856,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"The design for Haiku's web page at www.haiku-os.org was done a long time ago. It does not reflect todays web standards for a nice web page.\n\nThe goal of this task is to make a proposal for a new design for the Haiku website (www.haiku-os.org). It should keep the website organization and contents, but package it in a different look.","tags":["web","design","css"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","richienyhus@gmail.com","florentina.musat.28@gmail.com","HumdingerB@googlemail.com"],"max_instances":4,"name":"Propose a new design for www.haiku-os.org","last_modified":"2018-01-12T21:19:35Z","is_beginner":false,"id":5803749350047744,"categories":[2,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"PVS is a static analysis tool to detect bugs and dubious programming practises in C++ software. The tool is not publicly available, but they have made a run on the Haiku code base and reported us all the issues they found.\n\nThe goal if this task is to examine one of the issues reported during this scan (http://pulkomandy.github.io/) and make a patch to resolve it. You will have to submit your patch to the Haiku bugtracker and mention the PVS issue number (in the \"DefaultOrder\" column of the list).\n\nIssues marked in green are alerady resolved.\n\nIssues marked in red are in code not written by Haiku, so if you decide to work on one of these, you will have to send your patch where the code wasoriginally developped. Not all issues which should be marked in red have been, so tell us which one you plan to work on before starting and we can make sure it is valid. Help tagging issues is also welcome.","tags":["c++","security","bugs","analysis"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","philippe.houdoin@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":100,"name":"Haiku - Fix an issue detected by PVS Studio","last_modified":"2017-12-01T06:35:42Z","is_beginner":false,"id":6004022735536128,"categories":[1,4,5],"external_url":"http://pulkomandy.github.io"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to compile BeBattle and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions\n\nAfter you get it working, write a haikuporter recipe for it.","tags":["abandonware","c++","build system"],"private_metadata":"","mentors":["begasus@gmail.com","adrian.arroyocalle@gmail.com","richienyhus@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Get BeBattle to run on Haiku and create recipe for it","last_modified":"2017-12-08T18:30:14Z","is_beginner":false,"id":5979815762984960,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeBattle"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Tipster (https://github.com/HaikuArchives/Tipster) is an application that displays tips about Haiku usage, to let users discover some useful shortcuts and new ways to do things.\n\nThe goal of this task is to fix a bug in Tipster (from the list here: https://github.com/HaikuArchives/Tipster/issues).\n\nTo complete this task you will need to:\n- Download and compile Tipster's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Tipster repository on github so your changes are integrated.","tags":["tipster","c++","bugs","issues"],"private_metadata":"","mentors":["bga@bug-br.org.br","humdingerb@googlemail.com","manirudh18@gmail.com","revolf@gmail.com"],"max_instances":3,"name":"Tipster - Fix an issue","last_modified":"2017-11-03T20:01:41Z","is_beginner":false,"id":5710556948332544,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Tipster/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **PecoRename** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["anevilyak@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test PecoRename for Bugs and Issues.","last_modified":"2018-01-03T18:43:21Z","is_beginner":false,"id":5949914938867712,"categories":[4],"external_url":"https://github.com/HaikuArchives/PecoRename/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **MeV** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/MeV/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test MeV for Bugs and Issues.","last_modified":"2018-01-03T18:43:39Z","is_beginner":false,"id":4878122828693504,"categories":[4],"external_url":"https://github.com/HaikuArchives/MeV/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nThe Makefile of many projects include a special target, often called \"check\" or \"test\", which allows to launch some tests written by the upstream author.\nThe --test option of haikuporter allows to launch such tests, provided a TEST function is defined in the recipe with the appropriate call, e.g. a \"make check\" \n\nFor this task, you have to identify 10 recipes for which the source tarball comes with a Makefile that provides a test target (or equivalent) but which is unknown to haikuporter due to the lack of a TEST function in the recipe.\nThen, for these recipes that are either missing the TEST function or have one which is incorrect, you will add it (or fix it), and test that it is working correctly.\n\nReminder: To use the \"--test\" option of haikuporter you first need to build that recipe.\n\nPlease test all your changes before you submit your work. Adding a test block to a recipe is not hard. What consumes time is to test that everything is working. Also, please do not assume that every test target is called \"check\".\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","bash","c++"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add a TEST function to 10 Haikuports recipes","last_modified":"2017-11-03T20:01:58Z","is_beginner":false,"id":6470361157730304,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **UberTuber** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/humdingerb/ubertuber) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test UberTuber for Bugs and Issues.","last_modified":"2018-01-03T18:44:34Z","is_beginner":false,"id":6429328315252736,"categories":[1,4],"external_url":"https://github.com/humdingerb/ubertuber/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **CapitalBe** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/CapitalBe/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["diver@gelios.net","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test CapitalBe for Bugs and Issues.","last_modified":"2018-01-03T18:38:48Z","is_beginner":false,"id":4571327610486784,"categories":[4],"external_url":"https://github.com/HaikuArchives/CapitalBe/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Boot Loader](https://drive.google.com/open?id=0BzmDvOVZZ5mtWlRpN0RZeHI5T1k), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","haiku-nightly","pre-beta","testing","boot-loader"],"private_metadata":"","mentors":["bga@bug-br.org.br","jessica.l.hamilton@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Boot Loader","last_modified":"2018-01-03T18:46:56Z","is_beginner":false,"id":6225573254791168,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **efivar**.\n\nefivar is a set of tools and libraries to manipulate EFI variables on computers adhering to the Unified Extensible Firmware Interface (UEFI).\n\nYou can find the sources on the project homepage: https://github.com/rhinstaller/efivar\n\nThe recipe should be added to haikuports at haikuports/sys-libs/efivar/.\n\n**IMPORTANT WARNING**\n\nAssuming efivar can be built for Haiku x86_64, you will only be able to test it if you are able to boot Haiku using the \"haiku.efi\" EFI loader. This file is not available from the official system. You will need to Google for it on your own.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","sys-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","RaefaldhiAmartya@gmail.com","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for efivar. [PROBABLY A VERY HARD TASK]","last_modified":"2018-01-06T13:16:21Z","is_beginner":false,"id":6684237912604672,"categories":[1,5],"external_url":"https://github.com/rhinstaller/efivar"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"[We have this as a GSoC idea! It is way too big for GCI. Split it in smaller parts with more guidance on what the result for each part should be: showing the commit log, showing the status of modified files, showing diffs, etc.]\n\nWe already have [one for svn](https://github.com/HaikuArchives/MoleSvn), but we could borrow code from it (it's uses a zlib/libpng license) in order to write a git or hg version. Your first task is to compile and test MoleSvn, and then report any bugs or issues to its github page. Also investigate it's source code and report back here whether it is suitable to fork it into a new MoleGit (or MoleHg) application or whether it is completely non-functional and a complete mess. \n\nBy doing this, we can ascertain whether we can use the code or whether we need to start from scratch (in the next tasks).\n\nInfluence:\nhttps://www.sourcetreeapp.com/\nhttps://tortoisegit.org/","tags":["python","version control system","frontend","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","jessicalhamilton@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD - see description] Code a Graphical version control system frontend","last_modified":"2017-11-28T11:59:05Z","is_beginner":false,"id":4730393871777792,"categories":[1,2,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Queries](https://drive.google.com/open?id=0BzmDvOVZZ5mtc011NW5IYlBZNGM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","haiku-nightly","pre-beta","testing","queries"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Queries","last_modified":"2018-01-06T07:21:00Z","is_beginner":false,"id":4584657041489920,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **ThemeManager** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","revolf@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test ThemeManager for Bugs and Issues.","last_modified":"2018-01-03T18:43:59Z","is_beginner":false,"id":4948492311068672,"categories":[4],"external_url":"https://github.com/HaikuArchives/HaikuThemeManager/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Applications (session 1)](https://drive.google.com/open?id=0BzmDvOVZZ5mtOG5ZTy1lYmJJcWM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","applications","pre-beta","testing","haiku-nightly"],"private_metadata":"","mentors":["diver@gelios.net","adrian.arroyocalle@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Applications (session 1)","last_modified":"2018-01-03T18:47:20Z","is_beginner":false,"id":6112668228255744,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libykneomgr**, Yubico's C Library for the YubiKey NEO Manager.\n\nYou can find the sources on the project homepage: https://github.com/Yubico/libykneomgr\n\nThe recipe should be added to haikuports at haikuports/sys-auth/libykneomgr/.\n\n**Important:** This task depends on two other tasks: _\"[Create a recipe for pcsc-lite](tasks/4512290130886656/)\"_ and _\"[Create a recipe for ccid](tasks/4922248785821696/)\"_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-auth"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","agarwalakshayakshay8@gmail.com","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for libykneomgr. (requires pcsc-lite and ccid)","last_modified":"2017-11-28T09:28:54Z","is_beginner":false,"id":5037801324150784,"categories":[1,5],"external_url":"https://github.com/Yubico/libykneomgr"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **TimeTracker** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","Niels.Reedijk@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test TimeTracker for Bugs and Issues.","last_modified":"2018-01-03T18:42:33Z","is_beginner":false,"id":6750895805038592,"categories":[4],"external_url":"https://github.com/HaikuArchives/TimeTracker/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **yaddns**.\n\nYaddns is a small dynamic dns client with multiple servers support and a high flexibility.\n\nYou can find the sources on the project homepage: https://yaddns.github.io/\n\nYou can also browse the sources on GitHub: https://github.com/yaddns/yaddns/\n\nThe recipe should be added to haikuports at haikuports/net-dns/yaddns/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["bga@bug-br.org.br","jessica.l.hamilton@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for yaddns, a dyndns client written in C.","last_modified":"2017-12-30T13:30:42Z","is_beginner":false,"id":6206849009319936,"categories":[1,5],"external_url":"https://yaddns.github.io/"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"[​RemoteDesktop](https://www.haiku-os.org/node/6007)","tags":["remote desktop","ui","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a graphical interface for Haiku's RemoteDesktop","last_modified":"2017-12-03T17:37:33Z","is_beginner":false,"id":5656528205905920,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Filetypes](https://drive.google.com/open?id=0BzmDvOVZZ5mteEVpZXpyTTVYUmc), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","filetypes","haiku-nightly"],"private_metadata":"","mentors":["anevilyak@gmail.com","adrian.arroyocalle@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Filetypes","last_modified":"2018-01-10T17:53:18Z","is_beginner":false,"id":5964411862777856,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This task will introduce you to Haiku.\n\nHaiku is an operating system (like Windows, MacOS or Linux). Most of our tasks require running Haiku instead of one of these other operating systems. You can do this in a virtual machine, so you don't have to replace the system on your computer.\n\nThis task will guide you through the steps to get Haiku running, and how to use it.\n\n**Be sure to use the ​[Haiku nightly images](https://download.haiku-os.org/nightly-images/x86_gcc2_hybrid/) rather than the alpha 4 stable release. Alpha 4 is quite old and you will need a nightly to complete other tasks anyway.**\n\n[https://dev.haiku-os.org/wiki/GoogleCodeInTaskInstallHaiku]","tags":["screenshot","install","virtualbox","vmware","haiku"],"private_metadata":"","mentors":["scottmc2@gmail.com","kushal.spiderman.singh@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":300,"name":"[New to Haiku? Do this one first] Install and Run Haiku","last_modified":"2017-12-27T20:03:46Z","is_beginner":true,"id":4564169040855040,"categories":[2,3,4,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **CriticalMass** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will open new tickets for each bug on there (https://github.com/pulkomandy/critical-mass/issues).\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test CriticalMass for Bugs and Issues.","last_modified":"2018-01-03T18:40:14Z","is_beginner":false,"id":6389790792482816,"categories":[4],"external_url":"https://github.com/pulkomandy/critical-mass/issues"},{"status":1,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **WonderBrush** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["anevilyak@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for WonderBrush","last_modified":"2018-01-03T18:53:06Z","is_beginner":false,"id":5928303737176064,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Code an Advanced Download Manager\n\n​have a look at [iGetter](http://www.igetter.net/iGetter.html) and [FOLX]( http://mac.eltima.com/download-manager.html) for ideas on features and UI that you might want to use.","tags":["python","c++"],"private_metadata":"","mentors":["philippehoudoin@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[Hold] Code an Advanced Download Manager","last_modified":"2017-11-28T09:47:53Z","is_beginner":false,"id":5126638427701248,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **cnf**.\n\nYou can find the recipes at [haikuports/dev-python/cnf](https://github.com/haikuports/haikuports/tree/master/dev-python/cnf) and [haikuports/app-shells/command_not_found](https://github.com/haikuports/haikuports/tree/master/app-shells/command_not_found).\n\nThe fixed recipes should be added as pull request to haikuports at the same locations.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","python"],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Fix recipes for cnf (command not found)","last_modified":"2017-12-07T18:32:29Z","is_beginner":false,"id":4986768321413120,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **freedroid**.\n\nYou can find the recipe at haikuports/games-rpg/freedroid.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","games"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","kacperkasper@gmail.com","m.anirudh18@gmail.com","begasus@gmail.com"],"max_instances":1,"name":"Fix recipe for freedroid","last_modified":"2017-11-09T17:51:23Z","is_beginner":false,"id":6355867194621952,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **WakeUp**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/WakeUp\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","ports"],"private_metadata":"","mentors":["scottmc2@gmail.com","diver@gelios.net","HumdingerB@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for WakeUp","last_modified":"2017-11-28T00:48:25Z","is_beginner":false,"id":5236493826129920,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to pick better colors for the contacts in the contact list. The current ones are a bit unusual.\n\n- Away users should become orange,\n- \"Do not disturb\" users should becomre red,\n- Offline users should become grey","tags":["jabber4haiku","xmpp","ui","c++","graphics"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","adrian.arroyocalle@gmail.com","pulkomandy@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"XMPP Client - Contact color changes","last_modified":"2017-12-07T20:19:14Z","is_beginner":false,"id":5627867352268800,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/7"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **refind**.\n\nr**EFI**nd is a UEFI Boot Manager by Rod Smith.\n\nYou can find the sources on the project homepage: http://www.rodsbooks.com/refind/\n\nThe recipe should be added to haikuports at haikuports/sys-boot/refind/.\n\n**Important:** This task depends on another task: _[Create a recipe for efibootmgr](https://codein.withgoogle.com/tasks/5455591046643712/)_.\nIt also needs another recipe: _[haikuports/sys-boot/gnu-efi](https://github.com/haikuports/haikuports/tree/master/sys-boot/gnu-efi)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","sys-boot"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","fbrosson2014-gci@yahoo.fr","RaefaldhiAmartya@gmail.com"],"max_instances":1,"name":"Create a recipe for refind. (needs efibootmgr)","last_modified":"2018-01-14T07:58:07Z","is_beginner":false,"id":6717574307905536,"categories":[1,5],"external_url":"http://www.rodsbooks.com/refind/"},{"status":1,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **pkcs11-helper**.\n\npkcs11-helper is a library that simplifies the interaction with PKCS11 providers for end-user applications using a simple API and optional OpenSSL engine.\n\nYou can find the sources on the project homepage: https://github.com/OpenSC/pkcs11-helper\n\nThe recipe should be added to haikuports at haikuports/dev-libs/pkcs11-helper/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for pkcs11-helper. (probably a hard task)","last_modified":"2017-11-05T13:33:22Z","is_beginner":false,"id":4862469820383232,"categories":[1],"external_url":"https://github.com/OpenSC/pkcs11-helper"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Your task is to write a so-called recipe that is used to automatically build a package from the source code of a given open source program. The target for this one is up to you. Pick a possible target app from this list and let us know which one you plan on working on: https://github.com/haikuports/haikuports/wiki/GoogleCodeInIdeas2016\n\nPlease bear in mind that the list in that wiki might not be up-to-date, so you should _always_ refer to the HaikuPorts tree and to the list of \"_Create a recipe for ..._\" tasks.\n\n**Therefore, before you claim this task for writing a new recipe, please make sure that the recipe you chose does not _already_ have its _own_ task. If that's the case then you should claim that task, instead of this one.**\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nAs programs have recipes written for them we will remove them as potential target from the list. No duplicate recipes for the same program will be accepted.~~\n\nIf you complete this task, and would like to do more of this type let a mentor know and we can create another copy of this task.","tags":["haikuports","porting","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","Niels.Reedijk@gmail.com","kacperkasper@gmail.com"],"max_instances":2,"name":"Create a recipe to build a new package (1)","last_modified":"2017-12-31T11:16:42Z","is_beginner":false,"id":5335969026801664,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"HaikuArchives (https://github.com/HaikuArchives) is a repository for Haiku software. A lot of projects are stored in this github organization.\n\nThe goal of this task is to pick one of these project and add a README page to it. The README should include at least a short description of the application, and a screenshot. When picking the project, make sure there isn't already a pull-request pending by one of your fellow GCI students...\n\nIn most cases, you will first need to compile the application and get it running.\n\nSubmit your README as a pull request to the respective HaikuArchive project.","tags":["readme","haikuarchives","manual","screenshot"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","jessica.l.hamilton@gmail.com"],"max_instances":30,"name":"Write a README for an application at HaikuArchives","last_modified":"2017-12-10T07:45:53Z","is_beginner":false,"id":4594501643403264,"categories":[3,5],"external_url":"https://github.com/HaikuArchives"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **efibootmgr**, a tool to modify **UEFI** firmware boot manager variables.\n\nYou can find the sources on the project homepage: https://github.com/rhinstaller/efibootmgr\n\nThe recipe should be added to haikuports at haikuports/sys-boot/efibootmgr/.\n\n**Important:** This task depends on another one: _[Create a recipe for efivar](https://codein.withgoogle.com/tasks/5718010450935808/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","sys-boot"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","bga@bug-br.org.br","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for efibootmgr. (requires efivar) [DOES THIS MAKE SENSE ON HAIKU?]","last_modified":"2017-12-28T04:59:55Z","is_beginner":false,"id":5455591046643712,"categories":[1,5],"external_url":"https://github.com/rhinstaller/efibootmgr"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **SIDPlayer**.\n\nYou can find the sources on the project homepage: http://sidplayer.cebix.net\n\nYou should put the CL-Amp and SoundPlay plugins into their own standalone recipes.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","Niels.Reedijk@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for SIDPlayer, a Commodore64 sound decoder","last_modified":"2017-12-14T16:19:55Z","is_beginner":false,"id":5931804471066624,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/648"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libcec**.\n\nWhen combined with the right hardware, libCEC allows to control a device with a TV remote control, utilising the existing HDMI cabling.\n\nYou can find the sources on the project homepage: http://libcec.pulse-eight.com/\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libcec/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["anevilyak@gmail.com","fbrosson2014-gci@yahoo.fr","florentina.musat.28@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libcec, a library to interact with HDMI devices. (potentially a hard task)","last_modified":"2017-12-30T13:51:30Z","is_beginner":false,"id":5003736327913472,"categories":[1],"external_url":"http://libcec.pulse-eight.com/"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Code a simple Photo post-production app (a red eye remover and other simple non destructive image editing)","tags":["python","photography","app","c++","graphics"],"private_metadata":"","mentors":["bga@bug-br.org.br","m.anirudh18@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[Hold][FIXME] Code a simple Photo post-production app (needs better description)","last_modified":"2017-12-10T01:13:07Z","is_beginner":false,"id":6625350622642176,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Dynamate is a puzzle game for Haiku.\n\nCurrently, each level must be loaded from a file before playing. The goal of this task is to allow playing several levels in sequence, one after the other. This could be done for example by opening a directory or a query, rather than a file.","tags":["files","game","puzzle","c++"],"private_metadata":"","mentors":["kushal.spiderman.singh@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Dynamate: allow to play multiple levels in sequence","last_modified":"2017-12-07T18:32:04Z","is_beginner":false,"id":5107847476019200,"categories":[1],"external_url":"https://github.com/HaikuArchives/Dynamate/issues/3"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Attributes](https://drive.google.com/open?id=0BzmDvOVZZ5mtWkU1U0RJQlhnX28), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","attributes","pre-beta","testing","haiku-nightly"],"private_metadata":"","mentors":["diver@gelios.net","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Attributes","last_modified":"2018-01-10T17:52:30Z","is_beginner":false,"id":6065066770169856,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to add support for the \"nested rosters\" extension https://xmpp.org/extensions/xep-0083.html.\nThis extension allows to define groups of contacts. Groups may be nested.\n\nTo complete this task, Jabber4Haiku should:\n- Download the nested rosters information and show the groups in the contact list,\n- Allow to move contacts from one group to another, add, delete and rename groups.","tags":["xml","xmpp","jabber4haiku","network","c++"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"XMPP Client - Contact groups","last_modified":"2017-12-07T18:34:27Z","is_beginner":false,"id":4595240176451584,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/17"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Shortcuts and key combinations](https://drive.google.com/open?id=0BzmDvOVZZ5mtYmFZRWd6SFhpSU0), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","shortcuts-and-key-combinations","haiku-nightly"],"private_metadata":"","mentors":["bga@bug-br.org.br","jessica.l.hamilton@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Shortcuts and key combinations","last_modified":"2018-01-10T19:49:36Z","is_beginner":false,"id":6635933757603840,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Terminal** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","richienyhus@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Terminal","last_modified":"2018-01-07T18:32:22Z","is_beginner":false,"id":4805904564224000,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeCJK** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\nFor this task you will need to have some level of familiarity with either Chinese, Japanese or Korean writing.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["bga@bug-br.org.br","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Test BeCJK for Bugs and Issues.","last_modified":"2018-01-03T18:50:18Z","is_beginner":false,"id":6261290739695616,"categories":[4],"external_url":"https://bitbucket.org/Haiku-cn/becjk/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Much like the [powerful scripting system](https://en.wikipedia.org/wiki/AppleScript) on MacOS, Haiku also has its own equally powerful [scripting system](https://www.haiku-os.org/files/Programming_with_Haiku_Lesson_18.pdf), however the MacOS also has the [Apple Automator](https://en.wikipedia.org/wiki/List_of_macOS_components#Automator) application that allows people to make use of this system using the *graphical user interface* for automating tasks without knowledge of programming or scripting languages. This can create some [very useful workflows](https://computers.tutsplus.com/tutorials/10-awesome-uses-for-automator-explained--mac-15845) that can really cut down laborious tasks like resizing and cropping a set of 500 photos.\n\nFor this first task you need to code a non-functional UI for the application, where you prove that you understand application scripting, Haiku's API, the *hey* command line application and Haiku's datastream translation (the TranslationKit).\n\nLinks:\n\n* [Automator developer guide](https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/AutomatorConcepts/Automator.html)\n* [Actiona](https://actiona.tools)\n* [Action(s)](http://app.jbbres.com/actions/)\n* [Macro Creator](http://www.macrocreator.com)\n* [Xnee](https://xnee.wordpress.com)","tags":["python","app","beapi","c++","automation"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","revolf@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code an Action Automation app (Part 1)","last_modified":"2017-12-12T20:50:56Z","is_beginner":false,"id":5799443779551232,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Slayer** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will open new tickets for each bug on there (https://github.com/HaikuArchives/Slayer/issues).\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Slayer for Bugs and Issues.","last_modified":"2018-01-03T18:42:15Z","is_beginner":false,"id":6394143204966400,"categories":[4],"external_url":"https://github.com/HaikuArchives/Slayer/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to improve the management of URLs in the chat window. Currently, a click (with any mouse button) will open the URL in a browser. The required improvements are:\n- When the cursor hovers the URL, it should change to a different one (as it happens in the web browser)\n- When right clicking the URL, instead of opening it, there should be a pop-up menu allowing at least to open the URL or copy it to clipboard\n- When left clicking, it should open as it does now.","tags":["jabber4haiku","xmpp","c++","url management","chat"],"private_metadata":"","mentors":["bga@bug-br.org.br","adrian.arroyocalle@gmail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"XMPP Client - Better URL management","last_modified":"2017-12-07T18:38:13Z","is_beginner":false,"id":6190817305690112,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/6"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libblkmaker**.\n\nlibblkmaker is an implementation of getblocktemplate.\n\nYou can find the sources on the project homepage: https://github.com/bitcoin/libblkmaker\n\nThe recipe should be added to haikuports at haikuports/net-libs/libblkmaker/.\n\nRequirements: https://github.com/bitcoin/libbase58 and dev-libs/jansson\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["anevilyak@gmail.com","fbrosson2014-gci@yahoo.fr","diver@gelios.net","philippe.houdoin@gmail.com"],"max_instances":1,"name":"Create a recipe for libblkmaker, used in some Bitcoin-related software.","last_modified":"2017-11-05T12:07:29Z","is_beginner":false,"id":5099673347948544,"categories":[1],"external_url":"https://github.com/bitcoin/libblkmaker"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **GenesisCommander** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test GenesisCommander for Bugs and Issues.","last_modified":"2018-01-03T18:39:00Z","is_beginner":false,"id":4530628299063296,"categories":[4],"external_url":"https://github.com/HaikuArchives/GenesisCommander/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeVexed** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeVexed/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeVexed for Bugs and Issues.","last_modified":"2018-01-03T18:38:13Z","is_beginner":false,"id":4677849443205120,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeVexed/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Desktop Applets (session 1)](https://drive.google.com/open?id=0BzmDvOVZZ5mtcUFVYmxORFRHNFk), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","haiku-nightly","pre-beta","testing","desktop-applets"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","m.anirudh18@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Desktop Applets (session 1)","last_modified":"2018-01-05T22:29:58Z","is_beginner":false,"id":4927388989259776,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Weather** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","richienyhus@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Test Weather for Bugs and Issues.","last_modified":"2018-01-03T18:42:40Z","is_beginner":false,"id":6346541746880512,"categories":[4],"external_url":"https://github.com/HaikuArchives/Weather/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Einsteinium** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","Niels.Reedijk@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Einsteinium for Bugs and Issues.","last_modified":"2018-01-03T18:49:50Z","is_beginner":false,"id":5229967287779328,"categories":[4],"external_url":"https://github.com/Perelandra0x309/einsteinium/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **inadyn**, a dynamic DNS client with SSL/TLS support.\n\nYou can find the sources on the project homepage: http://troglobit.com/inadyn.html\n\nYou can also browse the sources on GitHub: https://github.com/troglobit/inadyn\n\nThe recipe should be added to haikuports at haikuports/net-dns/inadyn/.\n\nDependencies: openssl\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","net-dialup"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","bga@bug-br.org.br","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for inadyn.","last_modified":"2017-12-30T13:50:26Z","is_beginner":false,"id":5968547580739584,"categories":[1,5],"external_url":"http://troglobit.com/inadyn.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"DocumentViewer is a program to view various types of documents in Haiku\n\nPick one of the open issues for DocumentViewer solve it.\n- https://github.com/HaikuArchives/DocumentViewer/\n- https://github.com/HaikuArchives/DocumentViewer/issues\n\nTo complete this task you will need to:\n- Download and compile DocumentViewer's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the DocumentViewer repository on github so your changes are integrated.","tags":["c++","document viewer","bugs","issues"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","m.anirudh18@gmail.com","pulkomandy@gmail.com","kacperkasper@gmail.com"],"max_instances":8,"name":"Fix an open issue in DocumentViewer","last_modified":"2017-11-05T08:02:29Z","is_beginner":false,"id":5907411204308992,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"HaikuArchives is a github organization, and a place to store the code for old BeOS and Haiku applications, which are not actively maintained by the original developers anymore.\n\nThe goal of this task is to identify one such application, that has not been added to HaikuArchive. You will then have to:\n- Locate the sourcecode for the application,\n- Identify the license it was released under,\n- Import the sources into a git repository,\n- Add that repository to your github account,\n- Add it to the list at http://haikuarchives.github.io/,\n- Submit your work to HaikuArchives so it can be stored there.","tags":["app","git","abandonware","archive","preservation"],"private_metadata":"","mentors":["florentina.musat.28@gmail.com","diver@gelios.net","RaefaldhiAmartya@gmail.com","fbrosson2014-gci@yahoo.fr","adrian.arroyocalle@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Add an application to HaikuArchives","last_modified":"2017-12-26T19:46:20Z","is_beginner":false,"id":5220641840037888,"categories":[5],"external_url":"https://github.com/HaikuArchives"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **prison**.\n\nprison is a barcode abstraction layer providing uniform access to barcode generators.\nSupported barcode formats include QR-code and Data Matrix.\n\nYou can find the sources on the project homepage: https://projects.kde.org/projects/kdesupport/prison\n\nThe recipe should be added to haikuports at haikuports/kde-frameworks/prison/.\n\n**Hint:** This task depends on libdmtx, which was recently added to HaikuPorts.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","Niels.Reedijk@gmail.com","RaefaldhiAmartya@gmail.com","florentina.musat.28@gmail.com"],"max_instances":1,"name":"Create a recipe for prison","last_modified":"2017-11-05T11:46:41Z","is_beginner":false,"id":5682621742841856,"categories":[1,5],"external_url":"https://projects.kde.org/projects/kdesupport/prison"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"[Ticket](https://dev.haiku-os.org/ticket/12819)","tags":["speech recognition","app","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a speech recognition app","last_modified":"2017-11-28T09:56:49Z","is_beginner":false,"id":5591674401062912,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"This is one of our most popular tasks from previous years of Google Code-In.\n\nThe goal of this task is to help you set up everything that is required to build Haiku and make changes to it. If you plan to work on making changes to Haiku itself, it is recommended that you complete this task first, so you are all set to do the work in other tasks. No real coding work on this one here, [just following instructions](https://www.haiku-os.org/guides/building) and getting things setup for future tasks you might select for Haiku.\n\nIf you are compiling Haiku on a VM, be sure to give it at least 16GB of HDD space, and 2GB or more of ram. (It might be even higher than this, we are testing...)\nIf you run into trouble getting it to compile get on IRC #haiku and ask us for help. Mentors are standing by.\n\nOnce you have downloaded the code, edit \"src/apps/aboutsystem/Credits.h\" adding your name in Alphabetical order under the \"Contributors\" section. Then build Haiku.\n\nOnce it's built, install it and run it. Open the AboutSystem app from the leaf menu and scroll down to see your name in the credits. It's only there on your newly built Haiku. Now take a screenshot by pressing the printscreen key. Attach this image as your completed work for this task, to show that you've figured out the steps to downloading, modifying, building and running Haiku.","tags":["compile","compiling"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com","jessica.l.hamilton@gmail.com","code.deepanshu@gmail.com"],"max_instances":100,"name":"Compile Haiku","last_modified":"2017-11-27T18:11:04Z","is_beginner":true,"id":6209778713886720,"categories":[1,3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **KeymapSwitcher** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Test KeymapSwitcher for Bugs and Issues.","last_modified":"2018-01-03T18:43:47Z","is_beginner":false,"id":4773019073380352,"categories":[4],"external_url":"https://github.com/HaikuArchives/KeymapSwitcher/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The HaikuDepot application is our central app to find and install software. There are many packages, however, that don't have their icon set, nor are there screenshots available and many aren't sorted into a software category either. These are all things that help users when evaluating software.\n\nYour job is to improve this situation.\n\nRequired for the task\n-------------\n* an installed [nightly Haiku image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid)\n* an account for HaikuDepot, see [the user guide](https://www.haiku-os.org/docs/userguide/en/applications/haikudepot.html)\n* installed application *app2png* from HaikuDepot\n* installed application *Sum-It* from HaikuDepot\n\nThe task\n-------------\nDetailed instructions are in a [separate wiki page](https://dev.haiku-os.org/wiki/GoogleCodeInTaskHDS). The page is a little long, but you only have to follow the instructions, which shouldn't be too hard.","tags":["haikudepot","screenshot","icon"],"private_metadata":"","mentors":["anevilyak@gmail.com","HumdingerB@googlemail.com","m.anirudh18@gmail.com","florentina.musat.28@gmail.com","philippe.houdoin@gmail.com"],"max_instances":35,"name":"Supply category, icon, screenshots for packages in HaikuDepot [BETA]","last_modified":"2017-12-20T16:55:30Z","is_beginner":false,"id":6729651554615296,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libslz**.\n\nSLZ is a fast and memory-less stream compressor which produces an output that can be decompressed with zlib or gzip. It does not implement decompression at all, zlib is perfectly fine for this.\n\nYou can find the sources on the project homepage: http://1wt.eu/projects/libslz\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libslz/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","revolf@gmail.com","philippe.houdoin@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for libslz, a fast and memory-less stream compressor","last_modified":"2017-12-30T13:52:23Z","is_beginner":false,"id":4540363379310592,"categories":[1],"external_url":"http://1wt.eu/projects/libslz"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"In this task you'll be updating the recipe currently in the source tree from Github:\n[Freeciv](https://github.com/haikuports/haikuports/blob/75a3cf5384f650242f4b8a1094ab305d33ed99e7/games-strategy/freeciv/freeciv-2.5.5.recipe).\n\nThis should be fairly simple if no big changes in the source were committed.\n\nYou can find the source at:\nhttp://www.freeciv.org/download.html\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe","games","c++"],"private_metadata":"","mentors":["begasus@gmail.com","HumdingerB@googlemail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for the new Freeciv release","last_modified":"2017-12-05T05:27:45Z","is_beginner":false,"id":5542624263929856,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Preferences (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtQ21lYmhpY2JFYlU), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","preferences","haiku-nightly"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","code.deepanshu@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Haiku testing: Preferences (session 2)","last_modified":"2018-01-06T08:51:39Z","is_beginner":false,"id":4600888058445824,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the Album application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Album","last_modified":"2018-01-03T18:55:01Z","is_beginner":false,"id":5083878807044096,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **[Hedgewars](http://www.hedgewars.org/)**, a retro multiplayer shooter.\n\nYou can find the sources on the project homepage: http://www.hedgewars.org/download.html\n\nThe recipe should be added to haikuports at haikuports/games-action/hedgewars.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["porting","haikuports","games","recipe","hedgewars"],"private_metadata":"","mentors":["begasus@gmail.com","adrian.arroyocalle@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for Hedgewars game","last_modified":"2017-12-10T01:46:33Z","is_beginner":false,"id":5506700620595200,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/issues/437"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **sbsigntool**.\n\nsbsigntool is a set of utilities for **signing** and verifying files for UEFI **S**ecure **B**oot.\n\nYou can find the sources on the project homepage: https://git.kernel.org/cgit/linux/kernel/git/jejb/sbsigntools.git\n\nThe recipe should be added to haikuports at haikuports/app-crypt/sbsigntool/.\n\n**Important:** This recipe depends on another one: **[haikuports/sys-boot/gnu-efi](https://github.com/haikuports/haikuports/tree/master/sys-boot/gnu-efi)**.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","philippe.houdoin@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for sbsigntool, a tool for UEFI Secure Boot. (needs gnu-efi)","last_modified":"2018-01-14T07:56:58Z","is_beginner":false,"id":5029088781664256,"categories":[1,5],"external_url":"https://git.kernel.org/cgit/linux/kernel/git/jejb/sbsigntools.git"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"BeGadu (https://github.com/ytmytm/beos-begadu) is a client for the Gadu-Gadu network, a popular instant messaging system in Poland.\n\nThe goal of this task is to get the application to compile on Haiku. The sources ship with a BeIDE project, which can't be used directly, so you will have to rewrite the build system. If you have no preference for a particular build system, it is recommended to use Haiku's makefile_engine.\n\nTo complete this task, you should submit a pull request with your changes to the github repository for BeGadu. Of course the app should compile and at least somewhat run. If there are some runtime issues, they can be fixed in a follow-up task.","tags":["buildsystem","compile","c++","network","instant messaging"],"private_metadata":"","mentors":["anevilyak@gmail.com","diver@gelios.net","bga@bug-br.org.br","agarwalakshayakshay8@gmail.com"],"max_instances":1,"name":"Get BeGadu to compile on Haiku","last_modified":"2017-11-05T08:05:12Z","is_beginner":false,"id":5558338005762048,"categories":[1,5],"external_url":"https://github.com/ytmytm/beos-begadu"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Desktop Applets (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtS2oxRFpaSWxnLWs), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","haiku-nightly","pre-beta","testing","desktop-applets"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Desktop Applets (session 2)","last_modified":"2018-01-08T07:42:12Z","is_beginner":false,"id":6686610076729344,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **hefur**, a standalone C++ BitTorrent tracker.\n\nYou can find the sources on the project homepage: https://github.com/abique/hefur\n\nThe recipe should be added to haikuports at haikuports/net-p2p/hefur/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-p2p","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for hefur, a standalone and lightweight BitTorrent tracker.","last_modified":"2017-12-08T18:29:03Z","is_beginner":false,"id":5662623301369856,"categories":[1,5],"external_url":"http://github.com/abique/hefur"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/BeGet/issues/5\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","bga@bug-br.org.br","m.anirudh18@gmail.com","HumdingerB@googlemail.com"],"max_instances":1,"name":"Update BeGet to use layout management","last_modified":"2017-12-05T04:46:40Z","is_beginner":false,"id":5510033850761216,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **FlyingTroll**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/FlyingTroll\n\nThe recipe may probably be added to haikuports at haikuports/haiku-apps/flyingtroll/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for FlyingTroll","last_modified":"2017-12-08T18:28:49Z","is_beginner":false,"id":5263890885640192,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeShare** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeShare for Bugs and Issues.","last_modified":"2018-01-03T18:40:03Z","is_beginner":false,"id":5515681732755456,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeShare/issues"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"The Haiku Calendar application was created during Google Summer of Code 2017.  This task to to add a new feature to the application.\n\nCalendar is located at https://github.com/HaikuArchives/Calendar/\n\nFor this task, pick one of the open enhancement issues listed here:\nhttps://github.com/HaikuArchives/Calendar/issues\nWhen claiming the task let us know which issue you plan to work on, so that we don't have more than one student working on adding the same feature at the same time.\n\nWork should be submitted as a pull request\n\nMore instances of this task can be added if a student successfully completes it.","tags":["maps","haiku api","c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","HumdingerB@googlemail.com","scottmc2@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Add feature to Calendar application (1)","last_modified":"2017-12-12T21:09:13Z","is_beginner":false,"id":4556721835999232,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to investigate the code at https://github.com/ErisBlastar/wordservices\n\nThe \"word services SDK\" is a framework to embed spell checking in BeOS applications. However, it is unknown wether the full sourcecode is available, or only some parts.\n\nThe goal of this task is to investigate the github repo and see if it is a complete project, or just some bits and pieces.","tags":["spell check","investigation","abandonware","word services sdk","c++"],"private_metadata":"","mentors":["kacperkasper@gmail.com","m.anirudh18@gmail.com","b.vitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Investigate Word Services SDK and try to get it running","last_modified":"2017-12-05T05:23:21Z","is_beginner":false,"id":5303428408410112,"categories":[1,5],"external_url":"https://github.com/ErisBlastar/wordservices"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"ArtPaint is a painting and image processing program for Haiku\n\nPick one of the open issues for ArtPaint solve it.\n- https://github.com/HaikuArchives/ArtPaint/\n- https://github.com/HaikuArchives/ArtPaint/issues\n\nTo complete this task you will need to:\n- Download and compile ArtPaint's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the ArtPaint repository on github so your changes are integrated.","tags":["art","bugs","c++"],"private_metadata":"","mentors":["kacperkasper@gmail.com","adrianarroyocalle@gmail.com","codedeepanshu@gmail.com"],"max_instances":10,"name":"Fix an open issue in ArtPaint (1)","last_modified":"2017-10-31T19:25:29Z","is_beginner":false,"id":4673543872708608,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will be writing a guide on how to use Xen to virtualise Haiku on Linux. The article should include screenshots and full step by step instructions. See the article about running [Haiku in KVM on Linux](https://www.haiku-os.org/guides/virtualizing/kvm) for an example of previously completed guide. \n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running a mainstream version of Linux (Ubuntu, Mint etc) and a version of the [Xen software](https://www.xenproject.org/)\n\nThe article is wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.\n \nYou should submit a few screenshots early to get mentor feedback to make sure you are on the right track.","tags":["article","xen","markdown","writing","linux"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to run Haiku with Xen","last_modified":"2018-01-09T13:54:34Z","is_beginner":false,"id":5143944797093888,"categories":[3],"external_url":"https://www.xenproject.org/"},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the  **Tracker** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is **highly** recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Tracker","last_modified":"2018-01-06T08:48:54Z","is_beginner":false,"id":6018541000065024,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Haiku already has some applications that could be useful for accessibility, but aren't really tailored with it in mind. The idea is to make them more useful in this context.\n\n* Make Magnify follow caret when mouse is not moving.\n* Make Magnify \"dockable\" to the screen bottom or top.","tags":["c++","accessibility","magnify"],"private_metadata":"","mentors":["anevilyak@gmail.com","revolf@gmail.com","philippe.houdoin@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add accessibility features to Magnify to make them more useful to disabled people","last_modified":"2017-12-07T18:35:25Z","is_beginner":false,"id":5434081313554432,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **sqlcipher**, an extension providing transparent encryption for SQLite databases.\n\nYou can find the sources on the project homepage: https://www.zetetic.net/sqlcipher/\n\nThe recipe should be added to haikuports at haikuports/dev-db/sqlcipher/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","dev-db","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com","miqlas@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for sqlcipher. (potentially a hard task)","last_modified":"2017-12-30T13:34:35Z","is_beginner":false,"id":4943750667173888,"categories":[1],"external_url":"https://www.zetetic.net/sqlcipher/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Team Monitor](https://drive.google.com/open?id=0BzmDvOVZZ5mtQUJINTZGRUR5cHc), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","team-monitor","haiku-nightly"],"private_metadata":"","mentors":["anevilyak@gmail.com","adrian.arroyocalle@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Team Monitor","last_modified":"2018-01-08T03:31:19Z","is_beginner":false,"id":5949268344963072,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to research what ATI/AMD graphics cards we support, what ones we don't support and fill in the missing details on our [ATI/AMD wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/ATI).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare it to a list of [ATI/AMD GPUs listed on wikipedia](https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units)\n\nFor instance: do we support the AMD GPU codenamed \"New Zealand\" ?","tags":["wiki","hardware","amd","gpu"],"private_metadata":"","mentors":["bga@bug-br.org.br","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our AMD GPU support and update our wiki to match","last_modified":"2017-12-05T04:29:32Z","is_beginner":false,"id":5028724447641600,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to research what NVidia graphics cards we support, what ones we don't support and fill in the missing details on our [NVidia wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/NVidia).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare it to a list of [NVidia GPUs listed on wikipedia](https://en.wikipedia.org/wiki/List_of_Nvidia_graphics_processing_units)","tags":["wiki","hardware","nvidia","gpu"],"private_metadata":"","mentors":["miqlas@gmail.com","richienyhus@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Investigate our NVidia GPU support and update our wiki to match","last_modified":"2017-12-07T17:50:38Z","is_beginner":false,"id":4701273993510912,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **signify**, a tool to cryptographically sign and verify signatures on files.\n\nYou can find the sources on the project homepage: https://github.com/aperezdc/signify\n\nThe recipe should be added to haikuports at haikuports/app-crypt/signify/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","HumdingerB@googlemail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for signify. (potentially hard task)","last_modified":"2017-12-08T18:28:23Z","is_beginner":false,"id":5135390832852992,"categories":[1,5],"external_url":"https://github.com/aperezdc/signify"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for CMU's **PocketSphinx**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/cmusphinx/pocketsphinx\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","ports"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for PocketSphinx, a lightweight speech recognition engine","last_modified":"2017-11-16T17:44:24Z","is_beginner":false,"id":5495788517982208,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Mouse** Preferences.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["richienyhus@gmail.com","code.deepanshu@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Mouse Preferences","last_modified":"2018-01-07T18:32:03Z","is_beginner":false,"id":4601646657044480,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Deskbar** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","quality assurance","bugs"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Deskbar","last_modified":"2018-01-03T18:46:26Z","is_beginner":false,"id":4842647673896960,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/HaikuTwitter\nThe goal of this task is to modify HaikuTwitter so it can work with GNU Social nodes. \n\nThe GNU Social API is very a clone of Twitter API, so minimal changes are needed. GNU Social supports both XML and JSON apis (currently HaikuTwitter uses the XML API, which has been deleted by Twitter).\n\nGNU Social API docs: http://tuctum.com/doc/twitterapi","tags":["haiku apps","twitter","networking","c++","gnu social"],"private_metadata":"","mentors":["waddlesplash@gmail.com","HumdingerB@googlemail.com","jessica.l.hamilton@gmail.com","adrian.arroyocalle@gmail.com"],"max_instances":1,"name":"Add suport for GNU Social (aka Quitter) to HaikuTwitter","last_modified":"2017-12-10T23:42:51Z","is_beginner":false,"id":4823368438120448,"categories":[1],"external_url":"https://github.com/HaikuArchives/HaikuTwitter"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Seeker** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Seeker for Bugs and Issues.","last_modified":"2018-01-03T18:39:38Z","is_beginner":false,"id":4667017334358016,"categories":[4],"external_url":"https://github.com/HaikuArchives/Seeker/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **sg3_utils**.\n\nsg3_utils is a collection of utilities for interacting with the **sg** SCSI interface.\n\nYou can find the sources on the project homepage: http://sg.danny.cz/sg/sg3_utils.html\n\nThe recipe should be added to haikuports at haikuports/sys-apps/sg3_utils/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","sys-apps"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for sg3_utils. (probably a hard task, if not incompatible)","last_modified":"2017-12-28T06:56:17Z","is_beginner":false,"id":5270225425530880,"categories":[1,5],"external_url":"http://sg.danny.cz/sg/sg3_utils.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Clipdinger** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/humdingerb/clipdinger) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Clipdinger for Bugs and Issues.","last_modified":"2018-01-03T18:39:54Z","is_beginner":false,"id":5225614137098240,"categories":[4],"external_url":"https://github.com/humdingerb/clipdinger/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **efitools**.\n\nefitools are a set of tools for manipulating **UEFI** secure boot platforms.\n\nYou can find the sources on the project homepage: https://git.kernel.org/cgit/linux/kernel/git/jejb/efitools.git\n\nThe recipe should be added to haikuports at haikuports/app-crypt/efitools/.\n\n**Important:** This task depends on another one: _[Create a recipe for sbsigntool](https://codein.withgoogle.com/tasks/5029088781664256/)_.\n\n**Hint:** efitools also needs **[haikuports/sys-boot/gnu-efi](https://github.com/haikuports/haikuports/tree/master/sys-boot/gnu-efi)**.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["bga@bug-br.org.br","fbrosson2014-gci@yahoo.fr","miqlas@gmail.com"],"max_instances":1,"name":"Create a recipe for efitools. (needs sbsigntool)","last_modified":"2018-01-14T07:56:20Z","is_beginner":false,"id":4932838564560896,"categories":[1,5],"external_url":"https://git.kernel.org/cgit/linux/kernel/git/jejb/efitools.git"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to be running a recent nightly build of x86_64 Haiku, either on real hardware or in a VM. You will also need to have Haikuporter installed and able to build recipes. For this task you will find 5 different recipes which have the ARCHITECHTURES=\"\" contain an unknown state for x86_64, this would be indicated by a ? before the name, as in \"?x86_64\". Remove the ? and see if the recipe will build or not. For ones that work, leave the ? out. For ones that fail, take notes and/or screenshots of where they are failing. Change the recipes for those that fail to mark them as failing by changing them to have a ! in front, as in \"!x86_64\"\nThen submit a pull request with your 5 updated recipes. For ones that fail open a new issue on Haikuports for each, stating that it fails to build on x86_64 and attach any screenshots or notes regarding your findings.","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","bga@bug-br.org.br","kacperkasper@gmail.com","begasus@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":3,"name":"Check if 5 different recipes will build or not on Haiku x86_64 (1)","last_modified":"2017-12-27T19:52:06Z","is_beginner":false,"id":6300015976775680,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Q** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/Q/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["richienyhus@gmail.com","code.deepanshu@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Test Q for Bugs and Issues.","last_modified":"2018-01-03T18:38:22Z","is_beginner":false,"id":4603990098575360,"categories":[4],"external_url":"https://github.com/HaikuArchives/Q/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **cylindrix**.\nThere is an in-progress pull request ([586](https://github.com/haikuports/haikuports/pull/586)) open for this one, read through the comments and see if you can solve the remaining issue(s)\n\nYou can find the recipe at [haikuports/games-action/cylindrix](https://github.com/haikuports/haikuports/tree/master/games-action/cylindrix).\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Fix recipe for cylindrix [Potentially a Hard Task]","last_modified":"2017-11-09T17:46:38Z","is_beginner":false,"id":4572440879431680,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Weather is an application to show weather forecast. It was developed by Google Code-In contestants in previous editions.\n\nThe goal of this task is to make it possible to install it in the deskbar. The deskbar replicant should show just the icon of the current weather, with the details in a tooltip. Clicking on it should open the main application.","tags":["weather","ui","c++","replicant"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","HumdingerB@googlemail.com","revolf@gmail.com"],"max_instances":1,"name":"Weather: deskbar replicant support","last_modified":"2017-11-28T21:10:53Z","is_beginner":false,"id":4657691886616576,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **fluidsynth**.\n\nYou can find the recipes at [haikuports/media-sound/fluidsynth](https://github.com/haikuports/haikuports/tree/master/media-sound/fluidsynth).\n\nThe fixed recipes should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","music"],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","miqlas@gmail.com","RaefaldhiAmartya@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD- might not need fixing?] Fix recipes for fluidsynth","last_modified":"2018-01-15T04:50:55Z","is_beginner":false,"id":5404961435287552,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"​[Scripting](https://www.haiku-os.org/documents/dev/using_scripting_in_haiku) is used in Haiku to interact programmatically with applications,like with the hey CLI tool. All apps already support basic scripting through the App Kit, but some would benefit from more specific scripting interfaces.\n\nExpose the current track as a scripting object, possibly reusing SoundPlay's interface.","tags":["​scripting","c++","media player"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","richienyhus@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Add a scripting interface to MediaPlayer to make it more useful","last_modified":"2017-11-20T17:48:25Z","is_beginner":false,"id":5603751647772672,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **ShowImage** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["philippe.houdoin@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for ShowImage","last_modified":"2018-01-06T08:52:36Z","is_beginner":false,"id":5511441526292480,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BlogPositive** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/puckipedia/BlogPositive/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BlogPositive for Bugs and Issues.","last_modified":"2018-01-03T18:39:12Z","is_beginner":false,"id":5271592835743744,"categories":[4],"external_url":"https://github.com/puckipedia/BlogPositive/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The screenshots on our [Virtual Box guide page](https://www.haiku-os.org/guides/virtualizing/virtualbox) need refreshing. This task is to replace the old images with fresh ones using the latest version of Virtual Box and a Haiku Nightly Anyboot image.\n\nEach image should be properly cropped to just show the same window view as the current page does.\n\nSubmit your changes as a pull request on our [website repo](https://github.com/haiku/website).","tags":["virtualbox","guide","screenshot"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","HumdingerB@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Update screenshots on the \"Virtualizing Haiku in VirtualBox\" guide page","last_modified":"2017-11-30T18:17:21Z","is_beginner":false,"id":5834542789165056,"categories":[3,4],"external_url":"https://www.haiku-os.org/guides/virtualizing/virtualbox"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Notification center for Haiku.\n\nHaiku has a notification system similar to the one in Android and other mobile phone systems.\n\nThe goal of this task is to implement storing of the notifications. They should be displayed in Haiku's notification preferences.","tags":["notifications","c++","ui","programming","advanced"],"private_metadata":"","mentors":["RaefaldhiAmartya@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Implement storing of notifications for Haiku","last_modified":"2017-12-10T00:58:39Z","is_beginner":false,"id":5104843414831104,"categories":[1,2],"external_url":"https://dev.haiku-os.org/ticket/12809"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Workspaces** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["diver@gelios.net","richienyhus@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Workspaces","last_modified":"2018-01-10T19:50:08Z","is_beginner":false,"id":6496604682977280,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **bctoolbox**, a library that allows to create and run audio and video streams.\n\nYou can find the sources on the project homepage: https://www.linphone.org/\n\nYou can also browse the sources on GitHub: https://github.com/BelledonneCommunications/bctoolbox\n\nThe recipe should be added to haikuports at haikuports/media-libs/bctoolbox/.\n\n**Important:** This task depends on another one: _\"[Create a recipe for mbedtls, a cryptographic library for embedded systems.](tasks/5721140083294208/)\"_\nIt may also be made to depend on _\"[Create a recipe for bcunit, a lightweight system for writing, administering, and running unit tests in C.](tasks/4792101076205568/)\"_\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","RaefaldhiAmartya@gmail.com"],"max_instances":1,"name":"[HOLD?] Create a recipe for bctoolbox, a library that allows to create and run audio and video streams. (requires mbedtls)","last_modified":"2017-12-03T17:37:24Z","is_beginner":false,"id":5518783772884992,"categories":[1],"external_url":"https://github.com/BelledonneCommunications/bctoolbox"},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **MediaPlayer** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["richienyhus@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Write a QA test plan for MediaPlayer","last_modified":"2018-01-03T18:57:31Z","is_beginner":false,"id":6642340238196736,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Dynamate is a puzzle game for Haiku. It comes with a level editor (called LevelWorld).\n\nThe level editor has a save/load system, but does not track whether the current level has been modified. It should do so, in order to:\n- Not allow to save a level if it was not modified.\n- Not allow to lose changes by quitting the app or loading another level if the current one isn't saved.","tags":["dynamate","game","editor","c++"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Dynamate: track \"modified\" state in level editor","last_modified":"2017-12-07T18:33:36Z","is_beginner":false,"id":5624995898195968,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Haiku needs a graphical event/syslog viewer. This would just be a GUI for viewing logs produced by the Launch Daemon, Syslog Daemon etc.\n\nImplementations on other systems include: Windows Event Viewer, KSystemLog, Apple system Console, Gnome Log File Viewer.\n\nThe application should have the following features:\n\n* filter events by component\n* filter events by severity\n* filter events by host\n* filter events by date/time\n* filter events by custom criteria\n* basic event monitoring (this should be outsourced to ActivityMonitor on Haiku)\n* event query/search assistance","tags":["syslog","event viewer","gui","c++"],"private_metadata":"","mentors":["nielsreedijk@gmail.com","raefaldhiamartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a graphical event/syslog viewer","last_modified":"2017-11-28T09:47:19Z","is_beginner":false,"id":5040801694351360,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to implement message archiving as specified in https://xmpp.org/extensions/xep-0136.html. This extension allows the account to receive messages even if the client is not connected. When the client is connected, it can download the messages and show them to the user. It can also be used to save a server-side \"log\" of the conversation, which can be displayed again when reopeining the chat with the same user (even on another machine).\n\nTo complete this task, Jabber4Haiku should be able to:\n- Receive archived messages when connecting, and adding them to conversation windows,\n- Store received messages on the server for later use by itself or other clients.","tags":["jabber4haiku","xmpp","message archiving","network","c++"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","philippe.houdoin@gmail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"XMPP Client - Message archiving","last_modified":"2017-12-07T18:34:14Z","is_beginner":false,"id":4544897522597888,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/14"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Haiku includes a audio player application called MediaPlayer, however Haiku currently has no open source music manager or jukebox application. A music manager that takes advantage of Haiku's unique attribute system to sort and filter songs would be very powerful.\n\nThe application should be able to filter music by song, artist, album, year of release, genre, mood and user rating.\n\nFor Part 3 of this program, you will need to add support for actually playing a selected music track or playlist. This will be the final task in this series for Google Code-In 2016, so be sure to fill out the README.md, as this will likely be picked up again in 2017 to expand on the program's feature's and capabilities.\n\nExpand on README.md \nAdd a screenshot to README.md\nAdd a TODO list at the bottom of README.md explaining future feature enhancements\n\nFix these open issues:\nhttps://github.com/raefaldhia/MusicManager/issues/20\nhttps://github.com/raefaldhia/MusicManager/issues/6\nhttps://github.com/raefaldhia/MusicManager/issues/5\nhttps://github.com/raefaldhia/MusicManager/issues/14\n\nOpen new issues for any bugs you detect or enhancements you think the program could use.\n\nResults from Part 1&2 of the task can be found here:\nhttps://github.com/raefaldhia/MusicManager","tags":["music","c++"],"private_metadata":"","mentors":["humdingerb@googlemail.com","adrianarroyocalle@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Music Manager (Part 3)","last_modified":"2017-10-28T19:11:09Z","is_beginner":false,"id":5650329494355968,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **steghide**.\n\nsteghide is steganography program which hides bits of a data file in some of the least significant bits of another file in such a way that the existence of the data file is not visible and cannot be proven.\n\nYou can find the sources on the project homepage: http://steghide.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/app-crypt/steghide/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["begasus@gmail.com","kacperkasper@gmail.com","miqlas@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for steghide, a steganography hiding tool using JPEG, BMP, WAV or AU files. [BONUS]","last_modified":"2017-12-31T08:46:16Z","is_beginner":false,"id":5667793368252416,"categories":[1],"external_url":"http://steghide.sourceforge.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **lrzip**. a compression utility designed to deal better with large files.\n\nYou can find the sources on the project homepage: https://github.com/ckolivas/lrzip\n\nThe recipe should be added to haikuports at haikuports/app-arch/lrzip/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-arch"],"private_metadata":"","mentors":["diver@gelios.net","jessica.l.hamilton@gmail.com","m.anirudh18@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for lrzip","last_modified":"2017-12-08T18:33:24Z","is_beginner":false,"id":4838511955935232,"categories":[1],"external_url":"https://github.com/ckolivas/lrzip"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"We have two prototypes classes for round user interface widgets, one for a [dial knob](https://en.wikipedia.org/wiki/Control_knob) and another for a [dial gauge](https://en.wikipedia.org/wiki/Dial_(measurement&rpar;), but some of the code could be merged together into an abstract class where the more specific widgets rely on the abstract class. \n\nSome round, half or quarter round dial gauge widgets include: analogue clocks, speedometers, ammeter, voltmeter, hygrometer, tachometer, analogue decibel meters, fuel gauges, attitude indicators, ohmmeters, accelerometers, clinometer, aneroid barometers, altimeters and compasses.\n\n Dial knobs are not too different, only settings and instructions can be input.\n\nLinks:\n* Source code for [bdial](https://github.com/galexite/bdial)\n* Source code for [bknob](https://bitbucket.org/atalax/bknob)\n* Wikipedia article that explains [abstract classes](https://en.wikipedia.org/wiki/Class_(computer_programming&rpar;#Abstract_and_concrete).\n* A pre-existing abstract class in Haiku can be found [here](https://api.haiku-os.org/classBAbstractLayout.html)","tags":["ui","widget","git","physics","c++"],"private_metadata":"","mentors":["revolf@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Merge bknob and bdial together and upstream to Haiku repo","last_modified":"2017-10-28T19:10:58Z","is_beginner":false,"id":6155737623429120,"categories":[1,2],"external_url":""},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **primegen**.\n\nprimegen is a small, fast library to generate prime numbers in order.\n\nYou can find the sources on the project homepage: https://cr.yp.to/primegen.html\n\nThe recipe should be added to haikuports at haikuports/sci-libs/primegen/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","sci-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com","m.anirudh18@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for primegen.","last_modified":"2017-11-28T00:54:38Z","is_beginner":false,"id":5310563758374912,"categories":[1],"external_url":"https://cr.yp.to/primegen.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **gsasl**, the GNU SASL client, server, and library.\n\nYou can find the sources on the project homepage: https://www.gnu.org/software/gsasl/\n\nThe recipe should be added to haikuports at haikuports/net-misc/gsasl/.\n\nHint: gsasl will probably need [haikuports/net-libs/libgsasl](https://github.com/haikuports/haikuports/tree/master/net-libs/libgsasl).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","net-misc"],"private_metadata":"","mentors":["anevilyak@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for gsasl. (potentially a hard task)","last_modified":"2017-12-30T13:29:42Z","is_beginner":false,"id":5873513711796224,"categories":[1],"external_url":"https://www.gnu.org/software/gsasl/"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **DiskProbe** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for DiskProbe","last_modified":"2018-01-03T18:54:40Z","is_beginner":false,"id":5124122650607616,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Weather** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Weather","last_modified":"2018-01-03T18:48:44Z","is_beginner":false,"id":5476706515156992,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **BurnItNow** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for BurnItNow","last_modified":"2018-01-03T18:48:21Z","is_beginner":false,"id":6039656468578304,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Hare is an Audio Ripper and Encoder for Haiku\n\nPick one of the open issues for Hare solve it.\n- https://github.com/HaikuArchives/Hare/\n- https://github.com/HaikuArchives/Hare/issues\n\nTo complete this task you will need to:\n- Download and compile Hare's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Hare repository on github so your changes are integrated.","tags":["encoding","audio","bugs","issues","plugins"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","scottmc2@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":2,"name":"Fix open issue in Hare","last_modified":"2017-11-09T18:23:18Z","is_beginner":false,"id":5174116069933056,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **pcsc-tools**.\n\npcsc-tools allows to test a PC/SC driver, smartcard or reader or send commands in a friendly environment (text or graphical user interface).\n\nYou can find the sources on the project homepage: http://ludovic.rousseau.free.fr/softwares/pcsc-tools/\n\nThe recipe should be added to haikuports at haikuports/sys-apps/pcsc-tools/.\n\n**Important:** This task depends on another one: _[Create a recipe for pcsc-lite](tasks/4512290130886656/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-apps"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"[HOLD] Create a recipe for pcsc-tools. (requires pcsc-lite)","last_modified":"2017-12-03T17:26:23Z","is_beginner":false,"id":4707275472109568,"categories":[1,5],"external_url":"http://ludovic.rousseau.free.fr/softwares/pcsc-tools/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **BeScreenCapture** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["scottmc2@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeScreenCapture for Bugs and Issues.","last_modified":"2018-01-03T18:39:30Z","is_beginner":false,"id":5584035264856064,"categories":[4],"external_url":"https://github.com/jackburton79/bescreencapture/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"ArmyKnife has been worked on in the past by several Google Code-In Students. Their work has been added to the program, but the affected open issues haven't always been closed. This task is to install and run ArmyKnife and check to see which of the open issues for ArmyKnife are still valid. Make a list of your findings and submit that as your work on this one.\n\nArmyKnife can be installed using HaikuDepot.\n\nhttps://github.com/HaikuArchives/ArmyKnife/issues","tags":["qa","testing","bugs","armyknife","quality assurance"],"private_metadata":"","mentors":["scottmc2@gmail.com","m.anirudh18@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test ArmyKnife and verify whether current open issues are still correct","last_modified":"2018-01-03T18:45:14Z","is_beginner":false,"id":4807754822713344,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **XRS**, a _simple Rhythm Station_ that can be used to create loops.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/XRS\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","b.vitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for XRS, a simple Rhythm Station for creating loops","last_modified":"2017-12-08T18:25:25Z","is_beginner":false,"id":5029837716586496,"categories":[1],"external_url":"https://github.com/HaikuArchives/XRS"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **Cmix**.\n\nYou can find the sources on the project homepage: http://cmc.music.columbia.edu/RTcmix/\n\nYou can find an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/322209/BeCmix-r3_src-incl.tar.gz\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","diver@gelios.net","miqlas@gmail.com","HumdingerB@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Cmix","last_modified":"2017-12-08T18:25:08Z","is_beginner":false,"id":4747613804953600,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/652"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/Vision/issues/13\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","pulkomandy@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Convert Vision to use the Haiku layout API.","last_modified":"2017-11-09T18:08:50Z","is_beginner":false,"id":5565244313174016,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **PeopleEdit**.\n\n**PeopleEdit** is a cross platform clone of the Haiku's People app using QT. It can be used to sync contacts between Haiku and Windows, Mac or Linux.\n\nYou can find the sources on the project homepage: https://code.google.com/archive/p/peopleedit/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","HumdingerB@googlemail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for PeopleEdit, a utility to sync your contacts between platforms","last_modified":"2017-12-08T18:24:37Z","is_beginner":false,"id":5046896789815296,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/694"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for [OpenClonk](http://www.openclonk.org/), a free multiplayer action game.\n\nYou can find the sources on the project homepage: http://wiki.openclonk.org/w/Development\n\nLooking at the README it lists the dependencies. Depending on whether gtk+ is required or not this might be a showstopper as there is no working gtk+ for Haiku\nhttps://git.openclonk.org/openclonk.git/blob/c54d917f7e85cabebe447259f46ca0092469284e:/README\n\nThe recipe should be added to haikuports at haikuports/games-action/openclonk.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","games-action","games","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","kacperkasper@gmail.com","begasus@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for OpenClonk game (potentially a hard task)","last_modified":"2017-11-28T00:50:42Z","is_beginner":false,"id":4705293344702464,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **VoiceBender**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/VoiceBender\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for VoiceBender","last_modified":"2017-12-08T18:24:06Z","is_beginner":false,"id":4948491572871168,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal if this task is to implement user mood or user activity extensions.\n\nhttps://xmpp.org/extensions/xep-0107.html\nhttps://xmpp.org/extensions/xep-0108.html\n\nThese extensions allow to set a mood (happy, sad, ...) and an activity (working, playing, ...). Both are shared with contacts so they can decide if it is a good time to chat with you.\n\nTo complete this task, Jabber4Haiku should:\n- Receive and display user mood or activity for contacts (in the contact list or in the chat window)\n- Allow the local user to set his mood or activity, and share these with the XMPP network.\nYou do not need to implement both the mood and the activity, only one is enough.","tags":["xml","xmpp","jabber4haiku","c++","mood / activity"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","m.anirudh18@gmail.com","pulkomandy@gmail.com"],"max_instances":2,"name":"XMPP Client - User mood or user activity","last_modified":"2017-12-05T04:40:11Z","is_beginner":false,"id":6405135100018688,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/16"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Weather is an application to show weather forecast on Haiku. It was mostly written by Google Code-In students in past editions of the contest.\n\nThe goal of this task is to complete the icon set, by providing 3 icons for weather conditions that are still are missing. When claiming this task, tell us which icons you plan to work on so we can make sure they weren't done already by another student.\n\nYou can find the list of missing icons here: https://github.com/HaikuArchives/Weather/issues/8\n\nIcons have to be in Icon-O-Matic format (you will need to use Icon-O-Matic in Haiku for that) and with a style similar to the existing icons. You may use parts of the existing icons as starting point for your own.\nAll objects (shapes, paths, styles) should be named.\nSee the user guide on Icon-O-Matic:\nhttps://www.haiku-os.org/docs/userguide/en/applications/icon-o-matic.html","tags":["icon-o-matic","weather","design","icons"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":8,"name":"Design missing icons for weather forecast app","last_modified":"2017-11-16T17:41:08Z","is_beginner":false,"id":5303610743193600,"categories":[2],"external_url":""},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the Screenshot.png application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["richienyhus@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Screenshot","last_modified":"2018-01-06T08:50:09Z","is_beginner":false,"id":5687072604028928,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **cadaver**, a command-line WebDAV client.\n\nYou can find the sources on the project homepage: http://www.webdav.org/cadaver\n\nThe recipe should be added to haikuports at haikuports/net-misc/cadaver/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","net-misc"],"private_metadata":"","mentors":["anevilyak@gmail.com","fbrosson2014-gci@yahoo.fr","RaefaldhiAmartya@gmail.com"],"max_instances":1,"name":"Create a recipe for cadaver, a command-line WebDAV client.","last_modified":"2017-12-04T19:37:38Z","is_beginner":false,"id":5225225643884544,"categories":[1],"external_url":"http://www.webdav.org/cadaver"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Some progress has been made over the years to get BRL-CAD building on Haiku. This issue was opened on Haikuports in 2014.\nhttps://github.com/haikuports/haikuports/issues/163\n\nThis task is to try and build the current version of BRL-CAD on Haiku and to report the status as it stands now. Some of the reported issues from 2014 are no longer issues, so it might get further than it did then.\n\nIf you can get it to build or partially build then submit a pull request at haikuports with an updated recipe.","tags":["blr-cad","haikuports","recipe","build","porting"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","scottmc2@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Investigate and report the current status of building BRL-CAD on Haiku.","last_modified":"2017-12-08T18:30:59Z","is_beginner":false,"id":5737066023354368,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Desktop Applets (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtS2oxRFpaSWxnLWs), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","haiku-nightly","pre-beta","testing","desktop-applets"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","m.anirudh18@gmail.com","code.deepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Desktop Applets (session 2)","last_modified":"2018-01-06T08:52:08Z","is_beginner":false,"id":4818586931560448,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Dynamate is a puzzle game for Haiku. It was designed for small screens and does not work too well on modern high resolution displays.\n\nThe goal of this task is to make Dynamate use vector graphics, so the game can be zoomed as much as needed without scaling artifacts.\n\nA set of replacement vector graphics is available, but the code must be adjusted to make use of those.","tags":["game","puzzle","c++","graphics"],"private_metadata":"","mentors":["b.vitruvio@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add vector graphics to Dynamate","last_modified":"2017-12-05T04:36:15Z","is_beginner":false,"id":5777263494692864,"categories":[1],"external_url":"https://github.com/HaikuArchives/Dynamate/issues/2"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task, you need to fork [Tipster](https://github.com/HaikuArchives/Tipster) and add 5 new tips to the application. You will then need to submit a PR (pull request) containing the new tips.\n\nYou should join Haiku's IRC channel (#haiku) to get input from Haiku developers on what tips they would like to see added into the application.\n\nIn addition, you should only try this task after having Haiku running.","tags":["tipster","info","help","writing"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","miqlas@gmail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":5,"name":"Tipster - Add 5 new tips","last_modified":"2017-12-04T19:38:46Z","is_beginner":false,"id":5054560823410688,"categories":[1,3],"external_url":"https://github.com/HaikuArchives/Tipster"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/FtpPositive/issues/5\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","RaefaldhiAmartya@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Update FtpPositive to use layout management","last_modified":"2017-12-05T04:45:56Z","is_beginner":false,"id":5797156709466112,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Haiku's E-Mail preferences can auto-fill some settings to make adding email accounts easier.\nYour task is to add the necessary \"ProviderInfo\" for email providers that are still missing. Please see this thread in the Haiku forums: [\"New or corrected email provider info anyone?\"](https://discuss.haiku-os.org/t/new-or-corrected-email-provider-info-anyone/4326).\n\nYou have to find out the working settings for your provider by testing different settings in Haiku's E-mail preferences and submit an .rdef file with the working settings for your provider.\n\nFor more information, see these chapters of the user guide:\n* [E-mail preferences](https://www.haiku-os.org/docs/userguide/en/preferences/e-mail.html)\n* [Workshop: Managing Email](https://www.haiku-os.org/docs/userguide/en/workshop-email.html)","tags":["messaging","rdef","email","internet"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":20,"name":"Add missing email provider infos","last_modified":"2017-12-10T00:57:42Z","is_beginner":false,"id":5119986932645888,"categories":[5],"external_url":""},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"The Haiku project is not very well known even in the open source world. We need your help to reach out to more users or developers.\n\nPresent Haiku to a local audience, whether that be a Linux User Group, a technology club, a school, etc. You can do a 5 minute lightning style talk, or a longer 30-60 minute talk and demo, the choice is yours. Figure about 1-2 slides per minute of talking. For your work on this task we would like to see your slides.\n\nFinal output of your slides should be a .pdf file. You can use Google Slides or any other slides program you wish for this, but be sure to export the final result as a pdf so it can be viewed inside Haiku itself. This will make it easy for you to transition to demo mode during your talk.","tags":["linux user group","presentation","outreach","talk","slideshow"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com"],"max_instances":20,"name":"Present a Haiku Talk to a local audience","last_modified":"2017-12-04T20:52:39Z","is_beginner":false,"id":4783442422136832,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"ArtPaint is a painting and image processing program for Haiku\n\nPick one of the open issues for ArtPaint solve it.\n- https://github.com/HaikuArchives/ArtPaint/\n- https://github.com/HaikuArchives/ArtPaint/issues\n\nTo complete this task you will need to:\n- Download and compile ArtPaint's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the ArtPaint repository on github so your changes are integrated.","tags":["art","bugs","c++"],"private_metadata":"","mentors":["kacperkasper@gmail.com","adrianarroyocalle@gmail.com","codedeepanshu@gmail.com"],"max_instances":10,"name":"Fix an open issue in ArtPaint (2)","last_modified":"2017-10-31T19:25:56Z","is_beginner":false,"id":4708642882322432,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **Filer** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is **highly** recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Filer","last_modified":"2018-01-06T07:21:23Z","is_beginner":false,"id":6538230230941696,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ccid**.\n\nCCID is a free software driver for generic USB Chip/Smart Card Interface Devices (CCID) and Integrated Circuit(s) Card Devices (ICCD).\n\nYou can find the sources on the project homepage: http://pcsclite.alioth.debian.org/ccid.html\n\nThe recipe should be added to haikuports at haikuports/app-crypt/ccid/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for ccid, a generic USB CCID (Chip/Smart Card Interface Devices) driver and ICCD (Integrated Circuit(s) Card Devices). (probably a hard task)","last_modified":"2017-11-05T00:46:46Z","is_beginner":false,"id":4922248785821696,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **mdate**.\n\nYou can find the sources on the project homepage: https://github.com/ewe2/mdate\n\nYou can find the source code for an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/368897/mdate-1.5.1-BeOS_src-incl.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for mdate, a mayan date utility","last_modified":"2017-12-10T00:58:03Z","is_beginner":false,"id":5100061908271104,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/728"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **softhsm**, a software PKCS#11 implementation that is part of the [OpenDNSSEC](https://www.opendnssec.org/) project.\n\nThe letters \"HSM\" (in SoftHSM) stand for **_Hardware Security Modules_**.\n\nYou can find the sources on the project homepage: https://www.opendnssec.org/softhsm/\n\nYou can also browse the sources on GitHub: https://github.com/opendnssec/SoftHSMv2\n\nThe recipe should be added to haikuports at haikuports/dev-libs/softhsm/.\n\nHint: softhsm needs [haikuports/dev-libs/botan](https://github.com/haikuports/haikuports/tree/master/dev-libs/botan).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["diver@gelios.net","HumdingerB@googlemail.com","philippe.houdoin@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for softhsm, a software PKCS#11 implementation. (probably a hard task)","last_modified":"2017-12-30T13:49:35Z","is_beginner":false,"id":5451301246730240,"categories":[1],"external_url":"https://github.com/opendnssec/SoftHSMv2"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/haikuports/haikuports/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aopen%20x86_64\n\nSome of the Haikuports recipes have been tested and found to not be working on x86_64. This task it to figure out and fix them so that they build and work on x86_64.\n\nThe issues are likely to be similar, so once you learn the trick to fixing one, the next one will be a bit easier.","tags":["haikuports","porting","recipe","x86_64"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"Fix 3 recipes that are currently marked as broken on x86_64","last_modified":"2017-12-26T19:51:09Z","is_beginner":false,"id":4722261351202816,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **glucas**.\n\nGlucas is a client to make primality test for Mersenne numbers.\nIt is related to the GIMPS effort to search the bigest primes ever found.\nIn addition, it can be used as an excellent performance test.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/glucas/\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/glucas/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["begasus@gmail.com","Niels.Reedijk@gmail.com","jessica.l.hamilton@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for glucas.","last_modified":"2017-12-30T13:17:50Z","is_beginner":false,"id":5328371766525952,"categories":[1,5],"external_url":"https://sourceforge.net/projects/glucas/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libiscsi**, a clientside library to implement the iSCSI protocol.\n\nYou can find the sources on the project homepage: https://github.com/sahlberg/libiscsi\n\nThe recipe should be added to haikuports at haikuports/net-libs/libiscsi/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com","revolf@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for libiscsi, a clientside library to implement the iSCSI protocol.","last_modified":"2017-12-30T13:19:54Z","is_beginner":false,"id":4561172697186304,"categories":[1],"external_url":"https://github.com/sahlberg/libiscsi"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **TimeBomb**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/TimeBomb\n\nFor this task you will need to convert the .prj file to a makefile using Paladin, and convert the .rsrc file to an .rdef file using the [rc command](https://www.haiku-os.org/documents/dev/compile_them_resources)\nVerify that the new makefile will compile and then submit a pull request on HaikuArchive with your changes. Then create/update the recipe for it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","HumdingerB@googlemail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for TimeBomb","last_modified":"2017-11-27T18:35:49Z","is_beginner":false,"id":4842011481866240,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to research what Intel graphics cards we support, what ones we don't support and fill in the missing details on our [Intel wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/Intel).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare it to a list of [Intel GPUs listed on wikipedia](https://en.wikipedia.org/wiki/List_of_Intel_graphics_processing_units)\n\nFor instance: do we support the in GMA 3150 the Atom N5xx chipset?","tags":["wiki","hardware","intel","gpu"],"private_metadata":"","mentors":["diver@gelios.net","Niels.Reedijk@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our Intel GPU support and update our wiki to match","last_modified":"2017-12-07T18:33:54Z","is_beginner":false,"id":5882226254282752,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **AuralIllusion**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/AuralIllusion\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for AuralIllusion","last_modified":"2017-11-28T00:52:40Z","is_beginner":false,"id":5891321719947264,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Repositorie** Preference.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["richienyhus@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Repositories Preference","last_modified":"2018-01-10T19:49:53Z","is_beginner":false,"id":6421493556707328,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Network** Preference.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Network","last_modified":"2018-01-06T08:48:22Z","is_beginner":false,"id":5865510241566720,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **\ncodecrypt**, a post-quantum cryptography tool.\n\nYou can find the sources on the project homepage: http://e-x-a.org/codecrypt\n\nYou can also browse the sources on GitHub: https://github.com/exaexa/codecrypt\n\nThe recipe should be added to haikuports at haikuports/app-crypt/codecrypt/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for codecrypt, a post-quantum cryptography tool","last_modified":"2017-12-08T21:15:35Z","is_beginner":false,"id":5788564090519552,"categories":[1],"external_url":"https://github.com/exaexa/codecrypt"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Preferences (session 1)](https://drive.google.com/open?id=0BzmDvOVZZ5mtUktVSFBQOXF3ZUU), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","preferences","haiku-nightly"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","adrian.arroyocalle@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Preferences (session 1)","last_modified":"2018-01-03T18:47:45Z","is_beginner":false,"id":4662664183676928,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Haiku's GUI](https://drive.google.com/open?id=0BzmDvOVZZ5mtYWN0NEowX2F4bmM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","haiku-gui","haiku-nightly"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","HumdingerB@googlemail.com","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Haiku testing: Haiku's GUI","last_modified":"2018-01-03T18:47:56Z","is_beginner":false,"id":4662275690463232,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libu2f-server**, Yubico's Universal 2nd Factor (U2F) server C Library.\n\nYou can find the sources on the project homepage: https://developers.yubico.com/libu2f-server/\n\nYou can also browse the sources on GitHub: https://github.com/Yubico/libu2f-server\n\nThe recipe should be added to haikuports at haikuports/app-crypt/libu2f-server/.\n\nHint: libu2f-server needs [haikuports/dev-libs/hidapi](https://github.com/haikuports/haikuports/tree/master/dev-libs/hidapi).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["diver@gelios.net","fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for libu2f-server","last_modified":"2018-01-10T19:50:38Z","is_beginner":false,"id":4557036979224576,"categories":[1,5],"external_url":"https://developers.yubico.com/libu2f-server/"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Haiku includes a audio player application called *MediaPlayer*, however Haiku currently has no open source music manager or jukebox application. A music manager that takes advantage of Haiku's unique attribute system to sort and filter songs would be very powerful.\n\nThe application should be able to filter music by song, artist, album, year of release, genre, mood and user rating.\n\nThere are a few prototypes that already exist on Haiku, so your first task is to test these applications to see if any of the code is usable or if we need to start from scratch. Report back here the status of each application and what you think we should do.\n\nFor part one, we expect to see a Main application window which will have a menu option to run querries on your system to locate media files to play. This querry option should allow seraching based on selectable attributes. It should the be able to populate a list in the window (or frame in the window) showing the results. More features will be added in future tasks.\n\n\nPrototypes:\n* [CherryBlossom](https://github.com/HaikuArchives/CherryBlossom)\n* [​MusicCollection](http://cgit.haiku-os.org/haiku/tree/src/apps/musiccollection)\n* [FreeBird](https://github.com/kallisti5/freebird)","tags":["python","app","music manager","c++","metadata"],"private_metadata":"","mentors":["humdingerb@googlemail.com","adrianarroyocalle@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Music Manager (Part 1)","last_modified":"2017-10-28T19:07:24Z","is_beginner":false,"id":5874262646718464,"categories":[1,2,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Applications (session 3)](https://drive.google.com/open?id=0BzmDvOVZZ5mteTRTNmdsQ1REckk), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","applications","pre-beta","testing","haiku-nightly"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","m.anirudh18@gmail.com","code.deepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Applications (session 3)","last_modified":"2018-01-06T08:53:17Z","is_beginner":false,"id":6402762935894016,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Fix this minor issue in the recipe.\nhttps://github.com/haikuports/haikuports/issues/885\n\nAdd a proper makefile\n\nAdd proper MIT license header to each source code file.\n\nAdd a proper .rdef file\n\nAdd a README.md, no screenshot needed unless game is working.\n\nAfter you complete all this and get it building, test the app and open new issue for any bugs you might run into, such as song directories not working, etc.\n\nSubmit pull request for fixes on https://github.com/HaikuArchives/GuitarMaster, once those are accepted, submit a pull request for the updated recipe.\n\nOnce the second pull request is submitted, submit the URL to it as your work for this task.","tags":[".rdef","guitarmaster","testing","recipe","makefile"],"private_metadata":"","mentors":["miqlas@gmail.com","philippe.houdoin@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Update and Test Guitarmaster","last_modified":"2017-12-04T19:37:16Z","is_beginner":false,"id":5366351625453568,"categories":[1,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"Inspiration:\n\n* KCachegrind\n* AMD CodeAnalyst\n* Stackify","tags":["python","ui","tracer","c++","profiler"],"private_metadata":"","mentors":["agarwalakshayakshay8@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[Hold] Code a Graphical Profiler/Tracer","last_modified":"2017-11-28T09:50:45Z","is_beginner":false,"id":5295593649864704,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ccextractor CLI app**.\n\nYou can find the sources on the project homepage: \nhttp://www.ccextractor.org/doku.php?id=public:general:downloads\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","HumdingerB@googlemail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for ccextractor CLI app","last_modified":"2017-12-08T18:23:49Z","is_beginner":false,"id":6249386365419520,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to port the Bitcoin Core client, that is, the **_Bitcoin Core consensus library_**, also known as **libbitcoinconsensus**, and write a recipe for it.\n\nSee build instructions here: [https://github.com/bitcoin/bitcoin/tree/master/doc](https://github.com/bitcoin/bitcoin/tree/master/doc)\n\nThe sources are on https://bitcoin.org/ but you will find them easier if you start from the project homepage: https://bitcoincore.org/\n\nYou can also browse the sources on GitHub: https://github.com/bitcoin/bitcoin\n\nFor this task we don't need the user interface to be ported, just the command line mode.\n\nThe recipe should be added to haikuports at haikuports/net-libs/libbitcoinconsensus/.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.\n\nAvailable time is only 3 days but it can be increased on request.","tags":["cryptocurrency","haikuports","recipe","bitcoin","haikuporter"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","adrian.arroyocalle@gmail.com","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libbitcoinconsensus, aka the Bitcoin Core consensus library.","last_modified":"2017-12-28T06:58:38Z","is_beginner":false,"id":5846719289884672,"categories":[1,5],"external_url":"https://github.com/bitcoin/bitcoin"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"BeBuilder is a tool to easily create user interfaces for Haiku and BeOS.\nhttps://github.com/HaikuArchives/BeBuilder\n\nThe goal of this task is to compile BeBuilder and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n- Any changes you needed to get things going (or none if it built without any changes)\n- Addind a COMPILING file with compiling instructions","tags":["abandonware","c++","build system"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","b.vitruvio@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Get BeBuilder to run on Haiku","last_modified":"2017-12-05T04:43:48Z","is_beginner":false,"id":6354458780893184,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeBuilder"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"This task is about card solitaire games (Klondike and Spider) developed by previous GCI students: https://github.com/haikuarchives/BeSpider/\n\nOriginally there were two applications, BeSpider and BeKlondike. However, it would be better to have a single application, with multiple rule sets implemented.\nThe two applications are now merged into one, but the code for each game is still largely independent.\n\nThe goal of this task is to rework the application using the MVC pattern (https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)\n\nThe application should be structured as such:\n- A single \"window\" class, representing the main window of the application.\n- A single, generic, \"SolitaireView\" class. This is the \"view\" part of the MVC. It should be generic enough to implement any solitaire card game. It should handle piles of cards at different positions on the screen, without knowing anything about the game rules,\n- A set of \"rules\" class implementing different games. This is where all the game rule knowledge should be stored.\n\nThe KlondikeView and SpiderView from the current application should not be needed anymore.\n\nThe resulting program should be given a new name (Haiku Solitaire?) as it will then be more than simply Spider or Klondike capable.","tags":["c++","game","architecture","card","solitaire"],"private_metadata":"","mentors":["adrian.arroyocalle@gmail.com","pulkomandy@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Haiku Solitaire - MVC design pattern [BONUS]","last_modified":"2018-01-05T22:34:40Z","is_beginner":false,"id":5123486458576896,"categories":[1,2],"external_url":"https://github.com/haikuarchives/BeSpider/"},{"status":1,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **ArmyKnife** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for ArmyKnife","last_modified":"2018-01-03T18:55:40Z","is_beginner":false,"id":4720819383042048,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **Sequitur** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour task is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","RaefaldhiAmartya@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Sequitur for Bugs and Issues.","last_modified":"2018-01-03T18:39:20Z","is_beginner":false,"id":5279235193176064,"categories":[4],"external_url":"https://github.com/HaikuArchives/Sequitur/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Appearance** Preference.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["philippe.houdoin@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Appearance Preference","last_modified":"2018-01-08T03:31:06Z","is_beginner":false,"id":5424506824818688,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"You will be ad hoc testing **TakeNotes** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. If there are already open issues, you can recheck those to see if they are still valid and report your findings on the issues.\n\nYou need to identify new bugs, create new enhancements, and/or verify existing open issues, we are looking for 8 or more of these total.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","quality assurance"],"private_metadata":"","mentors":["m.anirudh18@gmail.com","richienyhus@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Test TakeNotes for Bugs and Issues.","last_modified":"2018-01-03T18:50:06Z","is_beginner":false,"id":5663011861692416,"categories":[4],"external_url":"https://github.com/HaikuArchives/TakeNotes/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **BeInterfaceCreator**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeInterfaceCreator\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeInterfaceCreator","last_modified":"2017-12-08T18:22:49Z","is_beginner":false,"id":5858543603286016,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Coverity Prevent is a static code analysis tool for C, C++, C# and Java source code. It is a commercial product which originated as the Stanford Checker, which used abstract interpretation to identify defects in source code.\n\nIt analyzes Haiku sourcecode and detects bugs and programming errors.\n\nThe goal of this task is to pick one of the issues reported by Coverity, investogate the problem, and fix the bug. You will have to submit your work as a patch on Haiku's bug tracker.\n\nThe issue list is not publicly available, so the first step is requesting access at the Coverity website to view the detected problems. Follow the instructions in our wiki to do so:\nhttps://dev.haiku-os.org/wiki/Coverity\n\nThen you need to pick an issue and analyze the problem. Coverity will show you the parts of the code where it thinks there is a problem. Your goal is to change the code to fix the problem, or report the task as a false positive if it turns out Coverity is wrong.","tags":["c++","security","bugs","analysis","coverity"],"private_metadata":"","mentors":["kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":15,"name":"Haiku - Fix an issue detected by Coverity (BONUS)","last_modified":"2017-11-09T17:55:11Z","is_beginner":false,"id":4732643696443392,"categories":[1,4],"external_url":"https://dev.haiku-os.org/wiki/Coverity"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"This task requires that you have Haiku installed and working.\n\nThere is already an HVIF->bitmap translator, however what would be really useful is an IOM/HVIF->SVG translator.\n\nYour task is to make Icon-O-Matic usable from command-line, and possibly on build platforms, to allow converting icons from the native format to HVIF and SVG, or to write a CLI tool doing just that.","tags":["svg","hvif","cli","icon"],"private_metadata":"","mentors":["miqlas@gmail.com","revolf@gmail.com","pulkomandy@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"Make Icon-O-Matic usable from command-line, or write a CLI tool to convert icons to HVIF/SVG","last_modified":"2018-01-10T19:53:35Z","is_beginner":false,"id":4756326347440128,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"For this task you will need to create a test plan for the **QuickLaunch** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for QuickLaunch","last_modified":"2018-01-05T22:28:38Z","is_beginner":false,"id":6707419394605056,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to research what VIA graphics cards we support, which ones we don't support and fill in the missing details on our [VIA wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/via). \n\nVIA graphics card were really just a slightly improved versions of earlier graphics cards made by GPU chipset maker 'S3 Graphics'. S3 saw some success in the 90s, but got into financial difficulties in the early 2000s until they got rescued by VIA, who became majority shareholder of S3 until they sold S3 to HTC in 2011. \n\nYou will need to make sure not to accidentally include any cards that use our [S3 Graphics driver](https://dev.haiku-os.org/wiki/HardwareInfo/video/s3).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare those listed on a [wikipedia article on VIA GPUs](https://en.wikipedia.org/wiki/S3_Chrome).","tags":["wiki","gpu","hardware","via"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our VIA GPU support and update our wiki to match","last_modified":"2017-12-07T18:30:45Z","is_beginner":false,"id":5229966549581824,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libdiscid**, a media library for reading Compact Disc TOCs.\n\nYou can find the sources on the project homepage: https://github.com/metabrainz/libdiscid\nThe recipe should be added to haikuports at haikuports/media-libs/libdiscid/.\nThe deprecated format recipe there can also give you hints.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","media-libs","recipe","metabrainz"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for libdiscid. (Potentially hard task)","last_modified":"2017-12-30T13:18:11Z","is_beginner":false,"id":5873149377773568,"categories":[1],"external_url":"https://github.com/metabrainz/libdiscid"},{"status":1,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **pesign**, a tool for manipulating signed PE-COFF binaries.\n\nYou can find the sources on the project homepage: https://github.com/rhinstaller/pesign\n\nThe recipe should be added to haikuports at haikuports/app-crypt/pesign/.\n\nImportant: This task might depend on another one: _[Create a recipe for efivar](https://codein.withgoogle.com/tasks/5718010450935808/)_.\n\nHint: pesign might also need [haikuports/sys-boot/gnu-efi](https://github.com/haikuports/haikuports/tree/master/sys-boot/gnu-efi).\n\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","agarwal.akshay.akshay8@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"[HOLD dependency on evivar?] Create a recipe for pesign.","last_modified":"2017-12-08T18:18:54Z","is_beginner":false,"id":5584515831431168,"categories":[1,5],"external_url":"https://github.com/rhinstaller/pesign"},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **ideviceinstaller**.\n\nideviceinstaller is a tool to interact with **iOS** devices, allowing to install, upgrade, uninstall, archive, restore and enumerate installed or archived apps.\n\nYou can find the sources on the project homepage: http://www.libimobiledevice.org/\n\nYou can also browse the sources on GitHub: https://github.com/libimobiledevice/ideviceinstaller\n\nThe recipe should be added to haikuports at haikuports/app-pda/ideviceinstaller/.\n\n**Important:** This task depends on another one: _[Create a recipe for libimobiledevice](tasks/5378046284529664/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-pda"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","b.vitruvio@gmail.com"],"max_instances":1,"name":"[HOLD]Create a recipe for ideviceinstaller (needs libimobiledevice) (probably a hard task)","last_modified":"2017-12-28T05:02:49Z","is_beginner":false,"id":4674358842753024,"categories":[1],"external_url":"https://github.com/libimobiledevice/ideviceinstaller"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"If you haven't completed any tasks yet, you should start with our beginner task to install and run Haiku first.  See this task: [https://codein.withgoogle.com/tasks/4564169040855040/]\n\nThis is one of our most popular tasks. Many students over the years have tried this one and have thanked us for helping them to learn how to program.\n\nHaiku Developer 'DarkWyrm' wrote a book a while back that has easy to follow lessons introducing the reader to programming with C++.\nIt's not specific to Haiku's API, but a general introduction.\n\nYour task is to follow the lessons and complete some of its assignments.\n[All details at our wiki.](https://dev.haiku-os.org/wiki/GoogleCodeInTaskBook1)","tags":["intro","programming","book","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":80,"name":"Learning to program with Haiku (book 1)","last_modified":"2017-12-19T19:15:12Z","is_beginner":false,"id":5507481767772160,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **BeGUI**, a simple to use programmer's tool which allows for rapid development of a program.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeGUI\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeGUI, a simple to use programmer's tool which allows for rapid development of a program","last_modified":"2017-12-29T05:00:53Z","is_beginner":false,"id":5365963132239872,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **GuitarTuner**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/GuitarTuner\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","revolf@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for GuitarTuner","last_modified":"2017-12-08T18:22:22Z","is_beginner":false,"id":5425948792979456,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libimobiledevice**.\n\n**libimobiledevice** is a cross-platform protocol library to communicate with **iOS** devices.\n\nYou can find the sources on the project homepage: http://www.libimobiledevice.org/\n\nYou can also browse the sources on GitHub: https://github.com/libimobiledevice/libimobiledevice\n\nThe recipe should be added to haikuports at haikuports/app-pda/libimobiledevice/.\n\n**Hint:** libimobiledevice needs [haikuports/app-pda/libusbmuxd](https://github.com/haikuports/haikuports/tree/master/app-pda/libusbmuxd).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","app-pda/libimobiledevice","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","miqlas@gmail.com","philippe.houdoin@gmail.com"],"max_instances":1,"name":"Create a recipe for libimobiledevice, a library to communicate with iOS devices. (maybe a hard task)","last_modified":"2017-12-28T05:04:01Z","is_beginner":false,"id":5378046284529664,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"ArmyKnife is an attribute tagger and utility for audio files.\n\nPick one of the open issues for ArmyKnife and solve it.\nhttps://github.com/HaikuArchives/ArmyKnife\nhttps://github.com/HaikuArchives/ArmyKnife/issues\n\nTo complete this task you will need to:\n- Download and compile ArmyKnife's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the ArmyKnife repository on github so your changes are integrated.","tags":["armyknife","bugs","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","adrian.arroyocalle@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix a bug in ArmyKnife","last_modified":"2017-11-09T17:44:12Z","is_beginner":false,"id":4716285239754752,"categories":[1,2,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **TakeNotes** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["diver@gelios.net","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for TakeNotes","last_modified":"2018-01-03T18:51:37Z","is_beginner":false,"id":6088909744242688,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"The game [Freeciv](http://www.freeciv.org/) needs an icon. You'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/).\n\nPlay the game a few times to get an idea of how the icon should look like. Submit the icon as Icon-O-Matic file and PNG. \nYou should open a pull request to haikuports at haikuports/games-strategy/freeciv with the .hvif and .rdef files.\n\nIn the meantime update the freeciv recipe to use the new icon.","tags":["graphic design","games","icon","recipe","artwork"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","jessica.l.hamilton@gmail.com"],"max_instances":1,"name":"Create an icon for Freeciv","last_modified":"2017-11-29T18:44:31Z","is_beginner":false,"id":4739610334724096,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"BePDF is a PDF viewer for Haiku\n\nPick one of the open issues for BePDF and solve it.\n- https://github.com/HaikuArchives/BePDF/\n- https://github.com/HaikuArchives/BePDF/issues\n\nTo complete this task you will need to:\n- Download and compile BePDF's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the BePDF repository on github so your changes are integrated.\n\nhttps://github.com/HaikuArchives/BePDF/issues","tags":["c++","pdf viewer","bugs","issues"],"private_metadata":"","mentors":["anevilyak@gmail.com","humdingerb@googlemail.com","revolf@gmail.com"],"max_instances":10,"name":"Fix open issue in BePDF","last_modified":"2017-11-09T17:56:17Z","is_beginner":false,"id":6353720247844864,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"FIXME\n\nYou will write documentation for the Debugger application.\nYou should search blog posts about it.","tags":["documentation","debugger"],"private_metadata":"","mentors":["anevilyak@gmail.com","diver@gelios.net","revolf@gmail.com"],"max_instances":1,"name":"[HOLD][FIXME] Write documentation for the Debugger application","last_modified":"2017-11-28T09:50:17Z","is_beginner":false,"id":5280765275275264,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **ProcessController** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for ProcessController","last_modified":"2018-01-10T19:38:31Z","is_beginner":false,"id":6534880693321728,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nFor this task, you have to update two haikuporter recipes, which is a kind of script that automates this process. Depending on the targeted software you may need these skills:\n\nSome knowledge of C, C++, git and bash\nKnowledge of the GNU autotools and/or cmake\nThe package may require some patching to get it to work on Haiku\n\nInstall HaikuPorter and run haikuporter --lint\nThis will show a lot of recipes that are currently not working. For this task pick two of these \"broken\" recipes and convert them to have a properly formatted and working recipe that builds .hpkg files.\n\nBefore submitting your work, make sure to test your recipe by creating a hpkg package from it with haikuporter. Haiku's Expander app can open hpkg files to inspect their contents.\n\nTake care to include all required licenses and copyright entries.\n\nBe sure to update the SUMMARY to be 70 characters or less, and have a DESCRIPTION that is 2-4 sentences long that describes what the package is. This is what shows up in HaikuDepot when users are looking to program to install.\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["begasus@gmail.com","HumdingerB@googlemail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Get the Lint out of 2 Haikuports recipes failing for [NO SUMMARY] (2)","last_modified":"2017-12-26T19:47:14Z","is_beginner":false,"id":5443297776500736,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **PowerStatus** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["bga@bug-br.org.br","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for PowerStatus","last_modified":"2018-01-03T18:51:24Z","is_beginner":false,"id":6183390434820096,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you need to convert our **[AMD SimNow](https://gist.github.com/richienyhus/7ec11d908e4a2f2cc554bc3d43169d7e)** article to markdown and upload your work to our [website rewrite project](https://github.com/haiku/website).\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com)","tags":["article","markdown","amd","writing","documentation"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert ​AMD SimNow article to markdown and update","last_modified":"2018-01-06T07:25:31Z","is_beginner":false,"id":4524429587513344,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **8hz-mp3**.\n\nYou can find the sources on the project homepage: http://www.mp3-tech.org/programmer/sources/8hz-mp3_src_v02b.tgz\n\nYou can also find an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/322280/8hz-mp3-src.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for 8hz-mp3, a layer 3 mp3 encoder","last_modified":"2017-12-14T16:15:38Z","is_beginner":false,"id":4765421813104640,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/659"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **xlreader**.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/xlreader/\n\nYou can find the source code of an old BeOS port at HaikuPorts, which should come in handy: https://github.com/haikuports/haikuports/files/368921/xlreader-src.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for xlreader, an Excel reader.","last_modified":"2017-11-27T18:36:56Z","is_beginner":false,"id":5355051029626880,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/730"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"https://github.com/HaikuArchives/CapitalBe/issues/9\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","c++","haikuapi"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","adrian.arroyocalle@gmail.com","miqlas@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Update CapitalBe to make use of Layout Managament","last_modified":"2017-12-05T04:38:55Z","is_beginner":false,"id":4944531814350848,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"HexVexed is puzzle game for Haiku.\n\nPick one of the open issues for HexVexed and solve it.\nhttps://bitbucket.org/scottmc/hexvexed\nhttps://bitbucket.org/scottmc/hexvexed/issues?status=new&status=open\n\nTo complete this task you will need to:\n- Download and compile HexVexed's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the HexVexed repository on bitbucket so your changes are integrated.","tags":["game","haiku api","puzzle","c++","hexvexed"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","code.deepanshu@gmail.com","adrian.arroyocalle@gmail.com","revolf@gmail.com"],"max_instances":4,"name":"Fix an open issue in HexVexed","last_modified":"2017-11-09T17:54:49Z","is_beginner":false,"id":4780570968064000,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Your task is to write a recipe that is used to automatically build a package from software. The target is OpenCV (www.opencv.org).\n\nOpenCV (Open Source Computer Vision Library) is an open source computer vision and machine learning software library. OpenCV was built to provide a common infrastructure for computer vision applications and to accelerate the use of machine perception in the commercial products. Being a BSD-licensed product, OpenCV makes it easy for businesses to utilize and modify the code.\n\nFor more information, see our wiki page \"[Haikuporter recipe task](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe)\".","tags":["haikuports","porting","recipe","advanced"],"private_metadata":"","mentors":["kacperkasper@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for OpenCV (potentially difficult task)","last_modified":"2017-11-27T18:47:51Z","is_beginner":false,"id":4913756561735680,"categories":[1],"external_url":"https://github.com/itseez/opencv"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"*This is a 2nd set of packages needing category, icon, screenshots. Only take it, if you've already done the original 1st set task.*\n-------------\n\nThe HaikuDepot application is our central app to find and install software. There are many packages, however, that don't have their icon set, nor are there screenshots available and many aren't sorted into a software category either. These are all things that help users when evaluating software.\n\nYour job is to improve this situation.\n\nRequired for the task\n-------------\n* an installed [nightly Haiku image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid)\n* an account for HaikuDepot, see [the user guide](https://www.haiku-os.org/docs/userguide/en/applications/haikudepot.html)\n* installed application *app2png* from HaikuDepot\n* installed application *Sum-It* from HaikuDepot\n\nThe task\n-------------\nDetailed instructions are in a [separate wiki page](https://dev.haiku-os.org/wiki/GoogleCodeInTaskHDS). The page is a little long, but you only have to follow the instructions, which shouldn't be too hard.","tags":["haikudepot","screenshot","icon"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","florentina.musat.28@gmail.com","richienyhus@gmail.com"],"max_instances":10,"name":"Supply category, icon, screenshots for packages in HaikuDepot (2)","last_modified":"2018-01-08T07:43:03Z","is_beginner":false,"id":4824015032025088,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our guide to virtualising Haiku with [Hyper-V](https://raw.githubusercontent.com/haiku/website/master/content/guides/virtualizing/hyper-v.md) is very out of date and needs updating, due to various changes in Hyper-V, in the types of bootable medium Haiku is distributed on, as well as changes in Haiku itself.\n\nRewrite the article to be updated, easier to understand and with newer screenshots.\n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running Windows 10 and a Windows version that includes Hyper-V.\n\nThe article is to be written in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.","tags":["windows","article","markdown","hyper-v","writing"],"private_metadata":"","mentors":["richienyhus@gmail.com","code.deepanshu@gmail.com","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Rewrite the Hyper-V guide","last_modified":"2017-12-02T05:38:56Z","is_beginner":false,"id":5824099240640512,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **MP3Gain**.\n\nYou can find the sources on the project homepage: http://mp3gain.sourceforge.net/\n\nYou can find an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/322286/MP3GainBeOS-1.3.1_src-incl.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MP3Gain, a sound normalizer.","last_modified":"2017-12-08T18:22:05Z","is_beginner":false,"id":4880347823079424,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/661"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"The goal of this task is to compile BeAccessible and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","kacperkasper@gmail.com","RaefaldhiAmartya@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeAccessible to run on Haiku","last_modified":"2017-12-07T18:34:44Z","is_beginner":false,"id":5018569534341120,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeAccessible"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **LibAddressInput**, Google’s postal address library.\n\nYou can find the sources on the project homepage: https://github.com/googlei18n/libaddressinput/tree/master/cpp\n\n\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching"],"private_metadata":"","mentors":["begasus@gmail.com","fbrosson2014-gci@yahoo.fr","miqlas@gmail.com","RaefaldhiAmartya@gmail.com"],"max_instances":1,"name":"Create a recipe for LibAddressInput","last_modified":"2017-12-30T13:33:19Z","is_beginner":false,"id":4861556871397376,"categories":[1],"external_url":"https://github.com/googlei18n/libaddressinput"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **BeNetTris**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeNetTris\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeNetTris","last_modified":"2017-12-08T18:21:28Z","is_beginner":false,"id":5788956744482816,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Tracker](https://drive.google.com/open?id=0BzmDvOVZZ5mtMXFvaWpGWF9fX3c), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","tracker","testing","haiku-nightly"],"private_metadata":"","mentors":["HumdingerB@googlemail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Tracker","last_modified":"2018-01-06T07:20:40Z","is_beginner":false,"id":4667016596160512,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will be writing a guide on how to use Bhyve to virtualise Haiku on BSD. The article should include screenshots and full step by step instructions. See the article about running [Haiku in KVM on Linux](https://www.haiku-os.org/guides/virtualizing/kvm) for an example of previously completed guide. \n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running a mainstream version of BSD (FreeBSD, TrueOS, DragonFly BSD etc) and a copy of the [Bhyve software](http://bhyve.org).\n\nThe article is to be wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.\n \nYou should submit a few screenshots early to get mentor feedback to make sure you are on the right track.","tags":["bsd","article","bhyve","writing"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","b.vitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to run Haiku with Bhyve","last_modified":"2017-12-07T17:50:54Z","is_beginner":false,"id":5940996237950976,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **libu2f-host**, Yubico's Universal 2nd Factor (U2F) Host C Library.\n\nYou can find the sources on the project homepage: https://developers.yubico.com/libu2f-host/\n\nYou can also browse the sources on GitHub: https://github.com/Yubico/libu2f-host\n\nThe recipe should be added to haikuports at haikuports/app-crypt/libu2f-host/.\n\nHint: libu2f-host needs [dev-libs/hidapi](https://github.com/haikuports/haikuports/tree/master/dev-libs/hidapi).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["anevilyak@gmail.com","fbrosson2014-gci@yahoo.fr","kushal.spiderman.singh@gmail.com"],"max_instances":1,"name":"Create a recipe for libu2f-host (Universal 2nd Factor Host C Library) (probably a hard task)","last_modified":"2017-12-30T13:25:44Z","is_beginner":false,"id":5807434767532032,"categories":[1,5],"external_url":"https://developers.yubico.com/libu2f-host/"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"VirtualKeyBoard is an onscreen keyboard that allows you to make key presses even if you do not have an available physical keyboard.\n\nPick one of the issues listed in the Haiku source code and solve it.\n\n[List of issues on github](https://github.com/haiku/haiku/blob/master/src/add-ons/input_server/devices/virtualkeyboard/TODO.org)\n\n[Code hosted on Haiku's cgit website](http://cgit.haiku-os.org/haiku/tree/src/add-ons/input_server/devices/virtualkeyboard)\n\nTo complete this task you will need to:\n- Download [Haiku's sources with git](https://www.haiku-os.org/guides/building/get-source-git),\n- Change the code to fix the problem,\n- Compile Haiku with your changes,\n- Test the app to make sure the problem is gone,\n- Submit a patch to [Haiku's bug tracker](https://dev.haiku-os.org/ticket/8370) so your changes are integrated,\n- Submit the URL of the patch for review here.","tags":["qa","testing","bugs","c++","compiling"],"private_metadata":"","mentors":["richienyhus@gmail.com","code.deepanshu@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Fix a bug in VirtualKeyBoard","last_modified":"2017-11-09T17:46:07Z","is_beginner":false,"id":5460013789216768,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libpsl**.\n\nlibpsl is a \"Publix Suffic List library\".\n\nYou can find the sources on the project homepage: https://rockdaboot.github.io/libpsl/\n\nYou can also browse the sources on GitHub: https://github.com/rockdaboot/libpsl\n\nThe recipe should be added to haikuports at haikuports/net-libs/libpsl/ .\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["bga@bug-br.org.br","jessica.l.hamilton@gmail.com","miqlas@gmail.com","fbrosson2014-gci@yahoo.fr","adrian.arroyocalle@gmail.com"],"max_instances":1,"name":"Create a recipe for libpsl (Public Suffix List library functions)","last_modified":"2017-12-08T18:33:04Z","is_beginner":false,"id":4747249470930944,"categories":[1],"external_url":"https://github.com/rockdaboot/libpsl"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **NetworkStatus** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","florentina.musat.28@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for NetworkStatus","last_modified":"2018-01-06T08:47:43Z","is_beginner":false,"id":4713913075630080,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Workspaces](https://drive.google.com/open?id=0BzmDvOVZZ5mtNU4waExyQUlFUDA), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","testing","workspaces","haiku-nightly"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Workspaces","last_modified":"2018-01-06T08:50:55Z","is_beginner":false,"id":5797915308064768,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"For this task you will need to create a test plan for the **Installer** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*; any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","test plan","bugs","quality assurance"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","code.deepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Installer","last_modified":"2018-01-03T18:45:42Z","is_beginner":false,"id":4681534860689408,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"Some games for Haiku (including SDL Lopan and BShisen) are usually displayed with tiles from the game of Mah Jong. These two games use old tilesets which have some problems:\n- The resolution is too low, making them pixelated or small on moden displays,\n- The tile sets are quite ugly and do not fit with the look of the system.\n\nThe goal of this task is to design a complete set of Mah Jong tiles for integration in these games. They should ideally be in vector format so we can use them at any resolution.\n\nSee https://en.wikipedia.org/wiki/Mahjong_tiles for a list of the tiles.","tags":["art","mahjong","design","games","drawing"],"private_metadata":"","mentors":["scottmc2@gmail.com","HumdingerB@googlemail.com","florentina.musat.28@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com","jessica.l.hamilton@gmail.com"],"max_instances":0,"name":"Design a mah jong tile set","last_modified":"2018-01-12T21:39:02Z","is_beginner":false,"id":5195231538446336,"categories":[2,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **jigdo**.\n\nJigdo is a CD image distribution system which allows reassembling a CD image from various files contained in it.\n\nYou can find the sources on the project homepage: http://atterer.org/jigdo/\n\nThe recipe should be added to haikuports at haikuports/app-misc/jigdo/.\n\nWe have a separate task for a related tool: _\"[Create a recipe for jigit](tasks/4982748970221568/)\"_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nAvailable time is only 3 days but it can be increased on request.","tags":["haikuports","porting","recipe","patching","app-misc"],"private_metadata":"","mentors":["bga@bug-br.org.br","begasus@gmail.com","miqlas@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for jigdo","last_modified":"2017-12-30T13:31:52Z","is_beginner":false,"id":4841678420574208,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **gpart**.\n\nGpart is a small command line tool which tries to guess what partitions are on a PC type, MBR-partitioned hard disk in case the primary partition table was damaged.\n\n**Be extra careful when using this as it could wipe your data.  You've been warned.**\n\nYou can find the sources on the project homepage: https://github.com/baruch/gpart\n\nThe recipe should be added to haikuports at haikuports/sys-block/gpart/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-block"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","jessica.l.hamilton@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for gpart [PROBABLY A HARD TASK]","last_modified":"2017-12-08T18:21:01Z","is_beginner":false,"id":4672015401222144,"categories":[1],"external_url":"https://github.com/baruch/gpart"},{"status":2,"time_to_complete_in_days":5,"program_year":2017,"description":"Fakbetur is an invoice editing application. It was originally developed for BeOS and currently does not run on Haiku.\n\nThe goal of this task is to research and fix the problems, and update the code as need to get it to compile and run on Haiku.\n\nThe current version of the sourcecode is available here: https://github.com/ModeenF/beos-fakBEtur\n\n**Once this task is done, you might wish to claim this one:**\n\n[Create a recipe for fakBEtur, an accounting application for Haiku](tasks/4971166089347072)","tags":["debug","fakbetur","build","c++"],"private_metadata":"","mentors":["jessica.l.hamilton@gmail.com","miqlas@gmail.com","b.vitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Get fakbetur running on Haiku","last_modified":"2017-12-28T09:07:25Z","is_beginner":false,"id":4776015551266816,"categories":[1,5],"external_url":"https://github.com/ModeenF/beos-fakBEtur"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our guide to virtualising Haiku with [QEMU Manager](https://web.archive.org/web/20150413214035/https://www.haiku-os.org/guides/virtualizing/qemu) is very out of date and needs updating, due to various changes in QEMU, in the types of bootable medium Haiku is distributed on, as well as changes in Haiku itself.\n\nRewrite the article to be updated, easier to understand and with newer screenshots.\n\nSubmit your changes to our [website repo](https://github.com/haiku/website) in a pull request and submit the URL of the pull request here to complete this task.\n\n----\nFor this task you will need excellent English skills, a computer running Windows 10, a Windows version of QEMU and copy of QEMU Manager. \n\nThe article is to be wrtten in markdown, so you will also need to know markdown or have the ability to learn it. But if you do not know markdown, don't worry! It is very easy to learn, just follow this short [tutorial](http://www.markdowntutorial.com) and you will be a pro in minutes.","tags":["windows","article","markdown","qemu","writing"],"private_metadata":"","mentors":["richienyhus@gmail.com","code.deepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Rewrite the QEMU Manager guide","last_modified":"2017-11-30T18:18:27Z","is_beginner":false,"id":5885226624483328,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **bcunit**.\n\nBCUnit is a unit testing framework for C.\n\nYou can find the sources on the project homepage: https://github.com/BelledonneCommunications/bcunit\n\nThe recipe should be added to haikuports at haikuports/dev-libs/bcunit/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for bcunit, a lightweight system for writing, administering, and running unit tests in C.","last_modified":"2017-12-08T18:29:18Z","is_beginner":false,"id":4792101076205568,"categories":[1],"external_url":"https://github.com/BelledonneCommunications/bcunit"},{"status":2,"time_to_complete_in_days":7,"program_year":2017,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/4564169040855040/)\n* [Install and run HaikuPorter](tasks/5276128321208320/)\n\nThe goal of this task is to write a recipe for **LibPhoneNumber**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/googlei18n/libphonenumber/tree/master/cpp\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","agarwalakshayakshay8@gmail.com"],"max_instances":1,"name":"Create a recipe for LibPhoneNumber","last_modified":"2017-11-15T17:41:06Z","is_beginner":false,"id":4663056837640192,"categories":[1,5],"external_url":"https://github.com/googlei18n/libphonenumber"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"http://cgit.haiku-os.org/haiku/tree/src/add-ons/media/media-add-ons/finepix_webcam\n\nhttp://cgit.haiku-os.org/haiku/tree/src/add-ons/media/media-add-ons/usb_webcam/addons","tags":["c++"],"private_metadata":"","mentors":["anevilyak@gmail.com","agarwal.akshay.akshay8@gmail.com","bga@bug-br.org.br","richienyhus@gmail.com"],"max_instances":1,"name":"Merge the Fujifilm Finepix diver into the modular webcam diver as an addon","last_modified":"2017-12-07T18:31:26Z","is_beginner":false,"id":5157931626528768,"categories":[1],"external_url":"https://dev.haiku-os.org/ticket/13483"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our cmedia driver curretly only supports a limited amount of devices, due to not listing many of the devices as supported. Research the PCI IDs of the unlisted devices and add them to our driver.\n\nSubmit your changes to our review website: https://review.haiku-os.org\n\nThe file you will need to change: http://cgit.haiku-os.org/haiku/tree/src/add-ons/kernel/drivers/audio/cmedia/cmedia_pci.h","tags":["c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","b.vitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add missing PCI IDs to our cmedia driver","last_modified":"2017-12-07T18:32:44Z","is_beginner":false,"id":4876233244409856,"categories":[1,5],"external_url":"https://dev.haiku-os.org/wiki/HardwareInfo/audio/cmedia"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our VIA driver curretly only supports a limited amount of devices, due to not listing many of the devices as supported. Research the PCI IDs of the unlisted devices and add them to our driver.\n\nSubmit your changes to our review website: https://review.haiku-os.org\n\nThe file you will need to change: http://cgit.haiku-os.org/haiku/tree/src/add-ons/kernel/drivers/graphics/via/driver.c","tags":["c++"],"private_metadata":"","mentors":["bga@bug-br.org.br","m.anirudh18@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add missing PCI IDs to our VIA driver","last_modified":"2017-12-05T05:24:17Z","is_beginner":false,"id":5649104623370240,"categories":[1,5],"external_url":"https://dev.haiku-os.org/wiki/HardwareInfo/video/via"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our USBVision driver curretly only supports a limited amount of devices, due to not listing many of the devices as supported. Research the PCI IDs of the unlisted devices and add them to our driver.\n\nSubmit your changes to our review website: https://review.haiku-os.org\n\nThe file you will need to change: http://cgit.haiku-os.org/haiku/tree/src/add-ons/kernel/drivers/video/usb_vision/usb_vision.c","tags":["c++"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","richienyhus@gmail.com","philippe.houdoin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add missing PCI IDs to our USBVision driver","last_modified":"2017-12-08T18:31:44Z","is_beginner":false,"id":5687812747689984,"categories":[1,5],"external_url":"https://dev.haiku-os.org/wiki/HardwareInfo/tuner/Nogatech"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our CX23882 driver curretly only supports a limited amount of devices, due to not listing many of the devices as supported. Research the PCI IDs of the unlisted devices and add them to our driver.\n\nSubmit your changes to our review website: https://review.haiku-os.org\n\nThe file you will need to change: http://cgit.haiku-os.org/haiku/tree/src/add-ons/kernel/drivers/dvb/cx23882/driver.c","tags":["c++"],"private_metadata":"","mentors":["agarwal.akshay.akshay8@gmail.com","miqlas@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add missing PCI IDs to our CX23882 driver","last_modified":"2017-12-07T17:50:19Z","is_beginner":false,"id":4786218850058240,"categories":[1,5],"external_url":"https://dev.haiku-os.org/wiki/HardwareInfo/tuner/Brooktree#CX2388x"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Our ice1712 driver curretly only supports a limited amount of devices, due to not listing many of the devices as supported. Research the PCI IDs of the unlisted devices and add them to our driver.\n\nSubmit your changes to our review website: https://review.haiku-os.org\n\nThe file you will need to change: http://cgit.haiku-os.org/haiku/tree/src/add-ons/kernel/drivers/audio/ice1712/ice1712.h","tags":["c++"],"private_metadata":"","mentors":["Niels.Reedijk@gmail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add missing PCI IDs to our ice1712 driver","last_modified":"2017-12-05T05:22:32Z","is_beginner":false,"id":5438337424818176,"categories":[1,5],"external_url":"https://dev.haiku-os.org/wiki/HardwareInfo/audio/ice1712"},{"status":2,"time_to_complete_in_days":3,"program_year":2017,"description":"Your task is to:\n* Edit the wiki mark up (to be supplied by your mentor) and attach your edited version here.\n* Add the chipset code name of each the graphics cards to the table on the Wiki page.\n* Check to make sure all of the graphics cards listed (in the first table) are listed as supported by the driver\n* Check to make sure all the graphics cards listed as supported in the driver code are displayed in the (first) table.","tags":["wiki","documentation"],"private_metadata":"","mentors":["kushal.spiderman.singh@gmail.com","philippe.houdoin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add code names to the NVidia page on our internal wiki","last_modified":"2017-12-05T05:26:28Z","is_beginner":false,"id":6284088694538240,"categories":[3],"external_url":"https://dev.haiku-os.org/wiki/HardwareInfo/video/NVidia"}]}