{"count":395,"next":null,"previous":null,"results":[{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"Create a recipe for tox, a new kind of encrypted P2P instant messaging app, supporting audio/video screen and file sharing, and much more.\n\n**Note: This is probably a very hard task, which will require a lot of skills. But if you have already completed several other \"_Create a recipe for ..._\" tasks then you find this one very challenging! It is not known, however, if this task is suitable for a GCI.**\n\nThe goal of this task is to write a recipe for **tox**, a distributed, encrypted P2P, messaging, and audio/video calling platform.\n\nYou can find the sources on the project homepage: https://tox.chat/\n\nYou can also browse the sources on GitHub: https://github.com/Tox/tox.chat\n\nThe recipe should be added to haikuports at haikuports/net-libs/tox/.\n\n**Hint:** net-libs/tox should depend on several other recipes that are already available in haikuports:\n* dev-libs/check.\n* dev-libs/libconfig\n* dev-libs/libsodium\n* media-libs/libvpx\n* media-libs/opus\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","bvitruvio@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for tox. [POTENTIALLY VERY HARD TASK]","last_modified":"2017-01-04T17:52:23Z","is_beginner":false,"id":4557396907130880,"categories":[1,5],"external_url":"https://tox.chat/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to compile BeAccessible and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["waddlesplash@gmail.com","kacperkasper@gmail.com","chirayudesai1@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeAccessible to run on Haiku","last_modified":"2016-12-27T20:43:35Z","is_beginner":false,"id":4564702501797888,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeAccessible"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application.\n\nYou must work from the application created in parts 1-4: https://github.com/raefaldhia/Maps\n\nFor this fifth part, the goal is to implement transformations on the map view to allow for smooth browsing of the map. It should work this way:\n- The user can pan and zoom the map. This will trigger a reload of a map tile from the server, but it can take some time\n- In order to provide immediate feedback, the existing tile should be moved and zoomed appropriately. This can be done immediately.\n- Once the new tile for the new position is available, it will replace the previous one.\n\nIn order to do this, you can use BView::SetTransform and the BTransform class. This will allow you to perform all required changes (panning and scaling) by the use of an appropriate transform matrix. Rotation would also be possible.","tags":["openstreetmap","map","geo","c++"],"private_metadata":"","mentors":["begasus@gmail.com","joel.r.sherrill@ieee.org","jackjrabbit@gmail.com"],"max_instances":1,"name":"Code a map application (Part 5)","last_modified":"2017-01-02T15:33:50Z","is_beginner":false,"id":4566922018422784,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **VoiceBender**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/VoiceBender\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for VoiceBender","last_modified":"2017-01-09T22:35:18Z","is_beginner":false,"id":4576846177894400,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **MP3Gain**.\n\nYou can find the sources on the project homepage: http://mp3gain.sourceforge.net/\n\nYou can find an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/322286/MP3GainBeOS-1.3.1_src-incl.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","bvitruvio@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MP3Gain, a sound normalizer.","last_modified":"2016-12-22T12:29:56Z","is_beginner":false,"id":4600154470481920,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/661"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for [OpenClonk](http://www.openclonk.org/), a free multiplayer action game.\n\nYou can find the sources on the project homepage: http://wiki.openclonk.org/w/Development\n\nLooking at the README it lists the dependencies.  Depending on whether gtk+ is required or not this might be a showstopper  as there is no working gtk+ for Haiku\nhttps://git.openclonk.org/openclonk.git/blob/c54d917f7e85cabebe447259f46ca0092469284e:/README\n\nThe recipe should be added to haikuports at haikuports/games-action/openclonk.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","games-action","games","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","emrysnurmi@gmail.com","fbrosson2014-gci@yahoo.fr","jeromeduval@gmail.com"],"max_instances":1,"name":"Create a recipe for OpenClonk game (potentially a hard task)","last_modified":"2016-12-23T19:31:10Z","is_beginner":false,"id":4605505026654208,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to add support for logging in with OAuth 2.0. This is an advanced authentication method, stronger than just a password. In particular, this is used by Google's XMPP server. The authentication code from https://github.com/AdrianArroyoCalle/haiku-todo may be reused.\n\nTo complete this task, it should be possible to log in to a Google account with Jabber4Haiku, without enabling support for \"less secure apps\" in said account.","tags":["oauth","xmpp","jabber4haiku","network","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP Client - OAuth 2.0 identification","last_modified":"2016-12-22T13:18:32Z","is_beginner":false,"id":4634954654810112,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/18"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **bcunit**.\n\nBCUnit is a unit testing framework for C.\n\nYou can find the sources on the project homepage: https://github.com/BelledonneCommunications/bcunit\n\nThe recipe should be added to haikuports at haikuports/dev-libs/bcunit/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for bcunit, a lightweight system for writing, administering, and running unit tests in C.","last_modified":"2016-12-11T03:41:45Z","is_beginner":false,"id":4644535021862912,"categories":[1],"external_url":"https://github.com/BelledonneCommunications/bcunit"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you need to convert our **[​Parallels Desktop](https://gist.github.com/richienyhus/c0799f5a07a4cb2bd5d2170d5caa8219)** article to markdown and upload your work to our [website rewrite project](https://github.com/haiku/website).\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com).","tags":["article","markdown","html","writing"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","waddlesplash@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert ​Parallels Desktop article to markdown and update","last_modified":"2016-12-23T08:34:52Z","is_beginner":false,"id":4646107846017024,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **PeopleEdit**.\n\n**PeopleEdit** is a cross platform clone of the Haiku's People app using QT. It can be used to sync contacts between Haiku and Windows, Mac or Linux.\n\nYou can find the sources on the project homepage: https://code.google.com/archive/p/peopleedit/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for PeopleEdit, an utility to sync your contacts between platforms","last_modified":"2016-12-22T12:29:35Z","is_beginner":false,"id":4665781939863552,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/694"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application.\n\nYou must work from the application created in parts 1-3: https://github.com/raefaldhia/Maps\n\nFor this third part, the goal is to implement a search function. You will need to:\n\n- Add a text view where the user can enter a location (latitude/logitude or a place name)\n- Convert a name to a latitude/longitude using the Nominatim API (http://wiki.openstreetmap.org/wiki/Nominatim)\n- Show the location on the map\n\nIf you run Haiku on a machine with wifi support, you may also use BGeolocation to approximate the location of the machine and use that as the initial location, when the application starts.","tags":["openstreetmap","maps","geo","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","chirayudesai1@gmail.com","pulkomandy@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Code a map application (Part 4)","last_modified":"2016-12-23T23:10:57Z","is_beginner":false,"id":4671504413360128,"categories":[1],"external_url":"https://github.com/raefaldhia/Maps"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/Vision/issues/13\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","pulkomandy@gmail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Convert Vision to use the Haiku layout API.","last_modified":"2017-01-03T19:55:01Z","is_beginner":false,"id":4674717376053248,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **joe**.\n\nYou can find the recipe at haikuports/app-editors/joe.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Fix recipe for joe","last_modified":"2017-01-02T04:12:20Z","is_beginner":false,"id":4684427491803136,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to create a recipe for [libepubgen](https://sourceforge.net/projects/libepubgen/) an EPUB generator for librevenge. It supports librevenge's text document interface and presentation and vector drawing interfaces.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/libepubgen/\n\nThe recipe should be added to haikuports at haikuports/app-text/libepubgen/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libepubgen, an ePub document generator","last_modified":"2016-12-22T12:36:28Z","is_beginner":false,"id":4701442231238656,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Cmix**.\n\nYou can find the sources on the project homepage: http://cmc.music.columbia.edu/RTcmix/\n\nYou can find an old BeOS port at HaikuPorts:  https://github.com/haikuports/haikuports/files/322209/BeCmix-r3_src-incl.tar.gz\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Cmix","last_modified":"2016-12-31T20:55:44Z","is_beginner":false,"id":4704214380969984,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/652"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **flac123**, a console app for playing FLAC (free lossless audio codec) audio files.\n\nYou can find the sources on the project homepage: http://flac-tools.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/media-sound/flac123/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","media-sound","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","hannahypan@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for flac123","last_modified":"2016-12-04T23:34:11Z","is_beginner":false,"id":4705744305782784,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **XRS**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/XRS\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for XRS","last_modified":"2017-01-12T19:13:57Z","is_beginner":false,"id":4718299449393152,"categories":[1],"external_url":"https://github.com/HaikuArchives/XRS"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*This is a 2nd set of packages needing category, icon, screenshots. Only take it, if you've already done the original 1st set task.*\n-------------\n\nThe HaikuDepot application is our central app to find and install software. There are many packages, however, that don't have their icon set, nor are there screenshots available and many aren't sorted into a software category either. These are all things that help users when evaluating software.\n\nYour job is to improve this situation.\n\nRequired for the task\n-------------\n* an installed [nightly Haiku image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid)\n* an account for HaikuDepot, see [the user guide](https://www.haiku-os.org/docs/userguide/en/applications/haikudepot.html)\n* installed application *app2png* from HaikuDepot\n* installed application *Sum-It* from HaikuDepot\n\nThe task\n-------------\nDetailed instructions are in a [separate wiki page](https://dev.haiku-os.org/wiki/GoogleCodeInTaskHDS). The page is a little long, but you only have to follow the instructions, which shouldn't be too hard.","tags":["haikudepot","screenshot","icon"],"private_metadata":"","mentors":["waddlesplash@gmail.com","emrysnurmi@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":10,"name":"Supply category, icon, screenshots for packages in HaikuDepot (2)","last_modified":"2016-12-27T20:42:04Z","is_beginner":false,"id":4725518962262016,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Fakbetur is an invoice editing application. It was originally developed for BeOS and currently does not run on Haiku.\n\nThe goal of this task is to research and fix the problems, and update the code as need to get it to compile and run on Haiku.\n\nThe current version of the sourcecode is available here: https://github.com/ModeenF/beos-fakBEtur","tags":["debug","fakbetur","build","c++"],"private_metadata":"","mentors":["jeromeduval@gmail.com","dcatthaiku@gmail.com","bvitruvio@gmail.com"],"max_instances":1,"name":"Get fakbetur running on Haiku","last_modified":"2016-12-22T13:03:42Z","is_beginner":false,"id":4737986021294080,"categories":[1,5],"external_url":"https://github.com/ModeenF/beos-fakBEtur"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Your task is to write a recipe that is used to automatically build a package from software. The target is OpenCV (www.opencv.org).\n\nOpenCV (Open Source Computer Vision Library) is an open source computer vision and machine learning software library. OpenCV was built to provide a common infrastructure for computer vision applications and to accelerate the use of machine perception in the commercial products. Being a BSD-licensed product, OpenCV makes it easy for businesses to utilize and modify the code.\n\nFor more information, see our wiki page \"[Haikuporter recipe task](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe)\".","tags":["haikuports","porting","recipe","advanced"],"private_metadata":"","mentors":["jeromeduval@gmail.com","valetolpegin@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for OpenCV","last_modified":"2016-12-22T13:16:16Z","is_beginner":false,"id":4739005002285056,"categories":[1],"external_url":"https://github.com/itseez/opencv"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **gpart**.\n\nGpart is a small command line tool which tries to guess what partitions are on a PC type, MBR-partitioned hard disk in case the primary partition table was damaged.\n\nYou can find the sources on the project homepage: https://github.com/baruch/gpart\n\nThe recipe should be added to haikuports at haikuports/sys-block/gpart/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-block"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for gpart [PROBABLY A HARD TASK]","last_modified":"2017-01-04T21:30:33Z","is_beginner":false,"id":4747482093322240,"categories":[1],"external_url":"https://github.com/baruch/gpart"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"HexVexed is puzzle game for Haiku.\n\nPick one of the open issues for HexVexed and solve it.\nhttps://bitbucket.org/scottmc/hexvexed\nhttps://bitbucket.org/scottmc/hexvexed/issues?status=new&status=open\n\nTo complete this task you will need to:\n- Download and compile HexVexed's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the HexVexed repository on bitbucket so your changes are integrated.","tags":["game","haiku api","puzzle","c++","hexvexed"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","begasus@gmail.com","humdingerb@googlemail.com","revolf@gmail.com"],"max_instances":4,"name":"Fix an open issue in HexVexed","last_modified":"2017-01-03T18:38:29Z","is_beginner":false,"id":4750013580181504,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"ArmyKnife has been worked on in the past by several Google Code-In Students.  Their work has been added to the program, but the affected open issues haven't always been closed.  This task is to install and run ArmyKnife and check to see which of the open issues for ArmyKnife are still valid.  Make a list of your finding and submit that as your work on this one.\n\nArmyKnife can be installed using HaikuDepot.\n\nhttps://github.com/HaikuArchives/ArmyKnife/issues","tags":["qa","testing","bugs","armyknife"],"private_metadata":"","mentors":["scottmc2@gmail.com","dcatthaiku@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test ArmyKnife and verify whether current open issues are still correct","last_modified":"2016-12-22T13:09:04Z","is_beginner":false,"id":4753213693624320,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/CapitalBe/issues/9\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","c++","haikuapi"],"private_metadata":"","mentors":["valetolpegin@gmail.com","adrianarroyocalle@gmail.com","hannahypan@gmail.com","waddlesplash@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Update CapitalBe to make use of Layout Managament","last_modified":"2016-12-20T21:35:44Z","is_beginner":false,"id":4757970191646720,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BeScreenCapture** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["scottmc2@gmail.com","emrysnurmi@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeScreenCapture for Bugs and Issues.","last_modified":"2016-12-22T10:25:30Z","is_beginner":false,"id":4759181114474496,"categories":[4],"external_url":"https://github.com/jackburton79/bescreencapture/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **xlreader**.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/xlreader/\n\nYou can find the source code of an old BeOS port at HaikuPorts, which should come in handy: https://github.com/haikuports/haikuports/files/368921/xlreader-src.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for xlreader, an Excel reader.","last_modified":"2016-12-31T20:54:24Z","is_beginner":false,"id":4764574240735232,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/730"},{"status":1,"time_to_complete_in_days":7,"program_year":2016,"description":"The goal of this task is to write a recipe for pcsc-tools.\n\npcsc-tools allows to test a PC/SC driver, smartcard or reader or send commands in a friendly environment (text or graphical user interface).\n\nYou can find the sources on the project homepage: http://ludovic.rousseau.free.fr/softwares/pcsc-tools/\n\nThe recipe should be added to haikuports at haikuports/sys-apps/pcsc-tools/.\n\n**Important:** This task depends on another one: _[Create a recipe for pcsc-lite](https://codein.withgoogle.com/tasks/5759670291529728/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-apps"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD] Create a recipe for pcsc-tools. (requires pcsc-lite)","last_modified":"2016-11-28T20:45:37Z","is_beginner":false,"id":4770387657228288,"categories":[1,5],"external_url":"http://ludovic.rousseau.free.fr/softwares/pcsc-tools/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **8hz-mp3**.\n\nYou can find the sources on the project homepage: http://www.mp3-tech.org/programmer/sources/8hz-mp3_src_v02b.tgz\n\nYoucan find an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/322280/8hz-mp3-src.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for 8hz-mp3","last_modified":"2016-12-22T12:30:05Z","is_beginner":false,"id":4779779230269440,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/659"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **jigdo**.\n\nJigdo is a CD image distribution system which allows reassembling a CD image from various files contained in it.\n\nYou can find the sources on the project homepage: http://atterer.org/jigdo/\n\nThe recipe should be added to haikuports at haikuports/app-misc/jigdo/.\n\nWe have a separate task for a related tool: _\"[Create a recipe for jigit](tasks/5976226703343616/)\"_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-misc"],"private_metadata":"","mentors":["jeromeduval@gmail.com","dcatthaiku@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for jigdo","last_modified":"2017-01-11T20:10:02Z","is_beginner":false,"id":4784071288815616,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you need to convert our **[​VMware Workstation](https://gist.github.com/richienyhus/7907670094f771a5907110f3673b5065)** article to markdown and upload your work to our [website rewrite project](https://github.com/haiku/website).\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com).","tags":["article","markdown","html","vmware","writing"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Convert ​VMware Workstation article to markdown and update","last_modified":"2016-12-22T11:21:22Z","is_beginner":false,"id":4784586450010112,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you need to convert our **[AMD SimNow](https://gist.github.com/richienyhus/7ec11d908e4a2f2cc554bc3d43169d7e)** article to markdown and upload your work to our [website rewrite project](https://github.com/haiku/website).\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com)","tags":["markdown","article","documentation","amd","writing"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert ​AMD SimNow article to markdown and update","last_modified":"2016-12-22T11:11:56Z","is_beginner":false,"id":4786845334372352,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"Some games for Haiku (including SDL Lopan and BShisen) are usually displayed with tiles from the game of Mah Jong. These two games use old tilesets which have some problems:\n- The resolution is too low, making them pixelated or small on moden displays,\n- The tile sets are quite ugly and do not fit with the look of the system.\n\nThe goal of this task is to design a complete set of Mah Jong tiles for integration in these games. They should ideally be in vector format so we can use them at any resolution.\n\nSee https://en.wikipedia.org/wiki/Mahjong_tiles for a list of the tiles.","tags":["design","drawing","art","games","mahjong"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","richienyhus@gmail.com","emrysnurmi@gmail.com","jessicalhamilton@gmail.com"],"max_instances":5,"name":"Design a mah jong tile set","last_modified":"2016-12-22T12:52:34Z","is_beginner":false,"id":4807014735675392,"categories":[2,5],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **paperkey**, an OpenPGP key archiver.\n\nYou can find the sources on the project homepage: http://www.jabberwocky.com/software/paperkey/\n\nThe recipe should be added to haikuports at haikuports/app-crypt/paperkey/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","chirayudesai1@gmail.com"],"max_instances":1,"name":"Create a recipe for paperkey.","last_modified":"2017-01-06T20:31:20Z","is_beginner":false,"id":4808108207505408,"categories":[1],"external_url":"http://www.jabberwocky.com/software/paperkey/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **apng2gif**, a tool to convert APNG animations to the GIF format.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/apng2gif/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/apng2gif/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","chirayudesai1@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for apng2gif","last_modified":"2016-12-04T22:28:08Z","is_beginner":false,"id":4811629141164032,"categories":[1],"external_url":"https://sourceforge.net/projects/apng2gif/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Hare is an Audio Ripper and Encoder for Haiku\n\nPick one of the open issues for Hare solve it.\n- https://github.com/HaikuArchives/Hare/\n- https://github.com/HaikuArchives/Hare/issues\n\nTo complete this task you will need to:\n- Download and compile Hare's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Hare repository on github so your changes are integrated.","tags":["encoding","audio","bugs","issues","plugins"],"private_metadata":"","mentors":["scottmc2@gmail.com","valetolpegin@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":2,"name":"Fix open issue in Hare","last_modified":"2016-12-22T13:11:46Z","is_beginner":false,"id":4821443376316416,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **PoorMan** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","hannahypan@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for PoorMan","last_modified":"2016-12-27T20:40:17Z","is_beginner":false,"id":4822586978467840,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Workspaces](https://drive.google.com/open?id=0BzmDvOVZZ5mtNU4waExyQUlFUDA), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","workspaces","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["scottmc2@gmail.com","dcatthaiku@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Haiku testing: Workspaces","last_modified":"2016-12-14T08:55:51Z","is_beginner":false,"id":4830569779167232,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nFor this task, you have to update a haikuporter recipe, which is a kind of script that automates this process. Depending on the targeted software you may need these skills:\n\nSome knowledge of C, C++, git and bash\nKnowledge of the GNU autotools and/or cmake\nThe package may require some patching to get it to work on Haiku\n\nInstall HaikuPorter and run haikuporter --lint\nThis will show a lot of recipes that are currently not working. For this task pick five of these \"broken\" recipes and convert them to have a properly formatted and working recipe that builds .hpkg files.\n\nBefore submitting your work, make sure to test your recipe by creating a hpkg package from it with haikuporter. Haiku's Expander app can open hpkg files to inspect their contents.\n\nTake care to include all required licenses and copyright entries.\n\nBe sure to update the SUMMARY to be 70 characters or less, and have a DESCRIPTION that is 2-4 sentences long that describes what the package is.  This is what shows up in HaikuDepot when users are looking to program to install.\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","humdingerb@googlemail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":10,"name":"Get the Lint out of 2 Haikuports recipes failing for [NO SUMMARY] (2)","last_modified":"2017-01-07T08:52:08Z","is_beginner":false,"id":4842793404989440,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **DiskUsage** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for DiskUsage","last_modified":"2017-01-04T18:11:51Z","is_beginner":false,"id":4844758673391616,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"FIXME\n\nYou will write documentation for the Debugger application.\nYou should search blog posts about it.","tags":["documentation","debugger"],"private_metadata":"","mentors":["revolf@gmail.com"],"max_instances":1,"name":"[HOLD][FIXME] Write documentation for the Debugger application","last_modified":"2016-11-23T18:00:30Z","is_beginner":false,"id":4856682509238272,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libpsl**.\n\nlibpsl is a \"Publix Suffic List library\".\n\nYou can find the sources on the project homepage: https://rockdaboot.github.io/libpsl/\n\nYou can also browse the sources on GitHub: https://github.com/rockdaboot/libpsl\n\nThe recipe should be added to haikuports at haikuports/net-libs/libpsl/ .\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","adrianarroyocalle@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for libpsl (Public Suffix List library functions)","last_modified":"2016-12-14T08:51:42Z","is_beginner":false,"id":4859344388620288,"categories":[1],"external_url":"https://github.com/rockdaboot/libpsl"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"VirtualKeyBoard is an onscreen keyboard that allows you to make key presses even if you do not have an available physical keyboard.\n\nPick one of the issues listed in the Haiku source code and solve it.\n\n[List of issues on github](https://github.com/haiku/haiku/blob/master/src/add-ons/input_server/devices/virtualkeyboard/TODO.org)\n\n[Code hosted on Haiku's cgit website](http://cgit.haiku-os.org/haiku/tree/src/add-ons/input_server/devices/virtualkeyboard)\n\nTo complete this task you will need to:\n- Download [Haiku's sources with git](https://www.haiku-os.org/guides/building/get-source-git),\n- Change the code to fix the problem,\n- Compile Haiku with your changes,\n- Test the app to make sure the problem is gone,\n- Submit a patch to [Haiku's bug tracker](https://dev.haiku-os.org/ticket/8370) so your changes are integrated,\n- Submit the URL of the patch for review here.","tags":["qa","testing","bugs","c++","compiling"],"private_metadata":"","mentors":["valetolpegin@gmail.com","richienyhus@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Fix a bug in VirtualKeyBoard","last_modified":"2017-01-09T22:30:41Z","is_beginner":false,"id":4866462399332352,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libu2f-host**, Yubico's Universal 2nd Factor (U2F) Host C Library.\n\nYou can find the sources on the project homepage: https://developers.yubico.com/libu2f-host/\n\nYou can also browse the sources on GitHub: https://github.com/Yubico/libu2f-host\n\nThe recipe should be added to haikuports at haikuports/app-crypt/libu2f-host/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libu2f-host (hidapi now has recipe)","last_modified":"2016-12-28T07:09:48Z","is_beginner":false,"id":4868817402462208,"categories":[1,5],"external_url":"https://developers.yubico.com/libu2f-host/"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"http://www.proxmox.com/","tags":["article","proxmoxve","writing"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to run Haiku with ProxmoxVE","last_modified":"2016-12-22T11:31:30Z","is_beginner":false,"id":4872640661553152,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Tracker](https://drive.google.com/open?id=0BzmDvOVZZ5mtMXFvaWpGWF9fX3c), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","tracker","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","humdingerb@googlemail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Tracker","last_modified":"2016-11-28T01:38:09Z","is_beginner":false,"id":4886260069957632,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeNetTris**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeNetTris\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeNetTris","last_modified":"2017-01-12T21:46:37Z","is_beginner":false,"id":4889710923087872,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"BeKlondike and BeSpider are two card solitaire games for Haiku. Instead of two applications, it would be better to have a single one, implementing the two rule sets.\n\n- Get the source for https://github.com/hannahyp/BeSpider and https://github.com/hannahyp/BeKlondike\n- Make sure each app compiles and runs fine\n- Merge the two inside a single application, with a menu to chose which game to play\n- Submit a github pull request with your changes","tags":["game","c++","card"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","hannahypan@gmail.com","joel.r.sherrill@ieee.org"],"max_instances":1,"name":"Merge BeKlondike and BeSpider into a single application","last_modified":"2016-11-18T15:36:31Z","is_beginner":false,"id":4906825346449408,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"BePDF is a PDF viewer for Haiku\n\nPick one of the open issues for BePDF and solve it.\n- https://github.com/HaikuArchives/BePDF/\n- https://github.com/HaikuArchives/BePDF/issues\n\nTo complete this task you will need to:\n- Download and compile BePDF's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the BePDF repository on github so your changes are integrated.\n\nhttps://github.com/HaikuArchives/BePDF/issues","tags":["c++","pdf viewer","bugs","issues"],"private_metadata":"","mentors":["humdingerb@googlemail.com","kushalspidermansingh@gmail.com","revolf@gmail.com"],"max_instances":10,"name":"Fix open issue in BePDF","last_modified":"2016-12-22T13:11:20Z","is_beginner":false,"id":4907472644997120,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **dmtx-utils**, a set of 3 utilities for reading and writing Data Matrix 2D barcodes.\n\nYou can find the sources on the project homepage: http://libdmtx.sourceforge.net/\n\nHints:\n\n1) The name of the recipe should be dmtx**_**utils-0.7.4.recipe (i.e. with an underscore between \"dmtx\" and \"utils\") but the name of the directory should be dmtx-utils.\n\n2) the SOURCE_URI to use is:\nhttps://downloads.sourceforge.net/libdmtx/dmtx-utils-0.7.4.tar.gz\n(but you should replace the \"0.7.4\" by $portVersion when defining SOURCE_URI.)\n\n3) the SOURCE_DIR to use is:\ndmtx-utils-$portVersion\n\nThis is required because the name of the recipe does not correspond exactly to the name of the directory in the source tarball.\n\nThe recipe should be added to haikuports at haikuports/media-gfx/dmtx**-**utils/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","begasus@gmail.com","jackjrabbit@gmail.com"],"max_instances":1,"name":"Create a recipe for dmtx-utils","last_modified":"2017-01-08T16:47:26Z","is_beginner":false,"id":4909645778911232,"categories":[1],"external_url":"http://libdmtx.sourceforge.net/"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"The game [Freeciv](http://www.freeciv.org/) needs an icon. You'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/).\n\nPlay the game a few times to get an idea of how the icon should look like. Submit the icon as Icon-O-Matic file and PNG. \nYou should open a pull request to haikuports at haikuports/games-strategy/freeciv with the .hvif and .rdef files.\n\nIn the meantime update the freeciv recipe to use the new icon.","tags":["graphic design","games","icon","recipe","artwork"],"private_metadata":"","mentors":["begasus@gmail.com","humdingerb@googlemail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Create an icon for Freeciv","last_modified":"2016-12-27T00:54:43Z","is_beginner":false,"id":4913291442782208,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **DiskProbe** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for DiskProbe","last_modified":"2017-01-04T18:12:16Z","is_beginner":false,"id":4913305613238272,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"ArmyKnife is an attribute tagger and utility for audio files.\n\nPick one of the open issues for ArmyKnife and solve it.\nhttps://github.com/HaikuArchives/ArmyKnife\nhttps://github.com/HaikuArchives/ArmyKnife/issues\n\nTo complete this task you will need to:\n- Download and compile ArmyKnife's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the ArmyKnife repository on github so your changes are integrated.","tags":["armyknife","bugs","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","adrianarroyocalle@gmail.com","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix a bug in ArmyKnife","last_modified":"2016-12-23T23:18:28Z","is_beginner":false,"id":4913554218024960,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libimobiledevice**.\n\n**libimobiledevice** is a cross-platform protocol library to communicate with **iOS** devices.\n\nYou can find the sources on the project homepage: http://www.libimobiledevice.org/\n\nYou can also browse the sources on GitHub: https://github.com/libimobiledevice/libimobiledevice\n\nThe recipe should be added to haikuports at haikuports/app-pda/libimobiledevice/.\n\n**Hint:** this recipe needs libusbmuxd, which was recently added to haikuports.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","app-pda/libimobiledevice","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for libimobiledevice, a library to communicate with iOS devices. (requires libusbmuxd) (maybe a hard task)","last_modified":"2017-01-09T07:00:53Z","is_beginner":false,"id":4914925520551936,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libextractor**, a library used to extract metadata from files.\n\nYou can find the sources on the project homepage: https://www.gnu.org/software/libextractor/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libextractor/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com"],"max_instances":1,"name":"Create a recipe for libextractor, a library used to extract metadata from files.","last_modified":"2016-12-23T19:09:31Z","is_beginner":false,"id":4917035110760448,"categories":[1],"external_url":"https://www.gnu.org/software/libextractor/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **GuitarTuner**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/GuitarTuner\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","begasus@gmail.com","richienyhus@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for GuitarTuner","last_modified":"2017-01-09T22:36:01Z","is_beginner":false,"id":4917644316639232,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **gsasl**, the GNU SASL client, server, and library.\n\nYou can find the sources on the project homepage: https://www.gnu.org/software/gsasl/\n\nThe recipe should be added to haikuports at haikuports/net-misc/gsasl/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","net-misc"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","chirayudesai1@gmail.com"],"max_instances":1,"name":"Create a recipe for gsasl.","last_modified":"2016-12-19T18:37:43Z","is_beginner":false,"id":4918216136589312,"categories":[1],"external_url":"https://www.gnu.org/software/gsasl/"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **primegen**.\n\nprimegen is a small, fast library to generate prime numbers in order.\n\nYou can find the sources on the project homepage: https://cr.yp.to/primegen.html\n\nThe recipe should be added to haikuports at haikuports/sci-libs/primegen/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-libs","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","chirayudesai1@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for primegen.","last_modified":"2016-12-19T18:42:58Z","is_beginner":false,"id":4932100960550912,"categories":[1],"external_url":"https://cr.yp.to/primegen.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **neon lights**.\nneon lights is a screensaver for Haiku and should go in haiku-misc directory.  You can probably use one of the recipes for other Haiku screensavers in that same directory as a starting point for this recipe.\n\nYou can find the sources on the project homepage: https://github.com/pulkomandy/neonlights\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","jessicalhamilton@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Create a recipe for neonlights screensaver","last_modified":"2017-01-10T08:35:00Z","is_beginner":false,"id":4964435972063232,"categories":[1],"external_url":"https://github.com/pulkomandy/neonlights"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Bong**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/Bong\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Bong","last_modified":"2017-01-12T21:44:37Z","is_beginner":false,"id":4965549576552448,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"We have two prototypes classes for round user interface widgets, one for a [dial knob](https://en.wikipedia.org/wiki/Control_knob) and another for a [dial gauge](https://en.wikipedia.org/wiki/Dial_(measurement&rpar;), but some of the code could be merged together into an abstract class where the more specific widgets rely on the abstract class. \n\nSome round, half or quarter round dial gauge widgets include: analogue clocks, speedometers, ammeter, voltmeter, hygrometer, tachometer, analogue decibel meters, fuel gauges, attitude indicators, ohmmeters, accelerometers, clinometer, aneroid barometers, altimeters and compasses.\n\n Dial knobs are not too different, only settings and instructions can be input.\n\nLinks:\n* Source code for [bdial](https://github.com/galexite/bdial)\n* Source code for [bknob](https://bitbucket.org/atalax/bknob)\n* Wikipedia article that explains [abstract classes](https://en.wikipedia.org/wiki/Class_(computer_programming&rpar;#Abstract_and_concrete).\n* A pre-existing abstract class in Haiku can be found [here](https://api.haiku-os.org/classBAbstractLayout.html)","tags":["ui","widget","git","physics","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Merge bknob and bdial together and upstream to Haiku repo","last_modified":"2016-12-22T13:10:18Z","is_beginner":false,"id":4993259818450944,"categories":[1,2],"external_url":""},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"This is one of our most popular tasks.  Many students over the years have tried this one and have thanked us for helping them to learn how to program.\n\nHaiku Developer 'DarkWyrm' wrote a book a while back that has easy to follow lessons introducing the reader to programming with C++.\nIt's not specific to Haiku's API, but a general introduction.\n\nYour task is to follow the lessons and complete some of its assignments.\n[All details at our wiki.](https://dev.haiku-os.org/wiki/GoogleCodeInTaskBook1)","tags":["intro","programming","book","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","codedeepanshu@gmail.com","richienyhus@gmail.com","emrysnurmi@gmail.com","hannahypan@gmail.com"],"max_instances":20,"name":"Learning to program with Haiku (book 1)","last_modified":"2016-12-22T10:27:53Z","is_beginner":false,"id":5012588916113408,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to fix the recipe for **jed**.\n\nYou can find the recipe at haikuports/app-editors/jed.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com"],"max_instances":1,"name":"Fix recipe for jed","last_modified":"2017-01-02T04:12:29Z","is_beginner":false,"id":5013257234415616,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **lrzip**. a compression utility designed to deal better with large files.\n\nYou can find the sources on the project homepage: https://github.com/ckolivas/lrzip\n\nThe recipe should be added to haikuports at haikuports/app-arch/lrzip/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-arch"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","chirayudesai1@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for lrzip","last_modified":"2017-01-11T20:10:45Z","is_beginner":false,"id":5015738335100928,"categories":[1],"external_url":"https://github.com/ckolivas/lrzip"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **steghide**.\n\nsteghide is steganography program which hides bits of a data file in some of the least significant bits of another file in such a way that the existence of the data file is not visible and cannot be proven.\n\nYou can find the sources on the project homepage: http://steghide.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/app-crypt/steghide/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["scottmc2@gmail.com","kacperkasper@gmail.com","kushalspidermansingh@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for steghide, a steganography hiding tool using JPEG, BMP, WAV or AU files.","last_modified":"2016-12-19T18:51:22Z","is_beginner":false,"id":5032433007198208,"categories":[1],"external_url":"http://steghide.sourceforge.net/"},{"status":1,"time_to_complete_in_days":6,"program_year":2016,"description":"The goal of this task is to write a recipe for **ideviceinstaller**.\n\nideviceinstaller is a tool to interact with iOS devices, allowing to install, upgrade, uninstall, archive, restore and enumerate installed or archived apps.\n\nYou can find the sources on the project homepage: http://www.libimobiledevice.org/\n\nYou can also browse the sources on GitHub: https://github.com/libimobiledevice/ideviceinstaller\n\nThe recipe should be added to haikuports at haikuports/app-pda/ideviceinstaller/.\n\n**Important:** This task depends on another one: _[Create a recipe for libimobiledevice](https://codein.withgoogle.com/tasks/4914925520551936/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-pda"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for ideviceinstaller (needs libimobiledevice) (probably a hard task)","last_modified":"2016-11-28T21:04:46Z","is_beginner":false,"id":5035289026232320,"categories":[1],"external_url":"https://github.com/libimobiledevice/ideviceinstaller"},{"status":1,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for pesign, a  tool for manipulating signed PE-COFF binaries.\n\nYou can find the sources on the project homepage: https://github.com/rhinstaller/pesign\n\nThe recipe should be added to haikuports at haikuports/app-crypt/pesign/.\n\n**Important:** This task depends on another one: _[Create a recipe for gnu-efi](tasks/5709557686861824/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for pesign. (needs gnu-efi)","last_modified":"2016-11-28T21:13:45Z","is_beginner":false,"id":5041117531734016,"categories":[1,5],"external_url":"https://github.com/rhinstaller/pesign"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haiku includes a audio player application called MediaPlayer, however Haiku currently has no open source music manager or jukebox application. A music manager that takes advantage of Haiku's unique attribute system to sort and filter songs would be very powerful.\n\nThe application should be able to filter music by song, artist, album, year of release, genre, mood and user rating.\n\nFor Part 3 of this program, you will need to add support for actually playing a selected music track or playlist.  This will be the final task in this series for Google Code-In 2016, so be sure to fill out the README.md, as this will likely be picked up again in 2017 to expand on the program's feature's and capabilities.\n\nExpand on README.md \nAdd a screenshot to README.md\nAdd a TODO list at the bottom of README.md explaining future feature enhancements\n\nFix these open issues:\nhttps://github.com/raefaldhia/MusicManager/issues/20\nhttps://github.com/raefaldhia/MusicManager/issues/6\nhttps://github.com/raefaldhia/MusicManager/issues/5\nhttps://github.com/raefaldhia/MusicManager/issues/14\n\nOpen new issues for any bugs you detect or enhancements you think the program could use.\n\nResults from Part 1&2 of the task can be found here:\nhttps://github.com/raefaldhia/MusicManager","tags":["music","c++"],"private_metadata":"","mentors":["valetolpegin@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Music Manager (Part 3)","last_modified":"2017-01-12T19:25:16Z","is_beginner":false,"id":5066675588169728,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to implement message archiving as specified in https://xmpp.org/extensions/xep-0136.html. This extension allows the account to receive messages even if the client is not connected. When the client is connected, it can download the messages and show them to the user. It can also be used to save a server-side \"log\" of the conversation, which can be displayed again when reopeining the chat with the same user (even on another machine).\n\nTo complete this task, Jabber4Haiku should be able to:\n- Receive archived messages when connecting, and adding them to conversation windows,\n- Store received messages on the server for later use by itself or other clients.","tags":["jabber4haiku","xmpp","message archiving","network","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP Client - Message archiving","last_modified":"2016-12-22T13:18:02Z","is_beginner":false,"id":5066852204019712,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/14"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for **libdiscid**, a media library for reading Compact Disc TOCs.\n\nYou might want to first do the porting task: \"_[Port libdiscid.](https://codein.withgoogle.com/tasks/5714500892229632/)_\" although it's not strictly required.\n\nYou can find the sources on the project homepage: https://github.com/metabrainz/libdiscid\nThe recipe should be added to haikuports at haikuports/media-libs/libdiscid/.\nThe deprecated format recipe there can also give you hints.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","metabrainz"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libdiscid.","last_modified":"2016-11-28T19:44:35Z","is_beginner":false,"id":5068814567866368,"categories":[1],"external_url":"https://github.com/metabrainz/libdiscid"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for **xdelta**.\nXdelta version 3 is a C library and command-line tool for delta compression using VCDIFF/RFC 3284 streams.\n\nYou can find the sources on the project homepage: http://xdelta.org/\n\nYou can also browse the sources on GitHub: https://github.com/jmacd/xdelta\n\nThe recipe should be added to haikuports at haikuports/dev-util/xdelta/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-util"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","pulkomandy@gmail.com"],"max_instances":1,"name":"Create recipe for xdelta","last_modified":"2016-11-29T17:18:18Z","is_beginner":false,"id":5069138636570624,"categories":[1],"external_url":"https://github.com/jmacd/xdelta"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to research what VIA graphics cards we support, which ones we don't support and fill in the missing details on our [VIA wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/via). \n\nVIA graphics card were really just a slightly improved versions of earlier graphics cards made by GPU chipset maker 'S3 Graphics'. S3 saw some success in the 90s, but got into financial difficulties in the early 2000s until they got rescued by VIA, who became majority shareholder of S3 until they sold S3 to HTC in 2011. \n\nYou will need to make sure not to accidentally include any cards that use our [S3 Graphics driver](https://dev.haiku-os.org/wiki/HardwareInfo/video/s3).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare those listed on a [wikipedia article on VIA GPUs](https://en.wikipedia.org/wiki/S3_Chrome).","tags":["wiki","gpu","hardware","via"],"private_metadata":"","mentors":["valetolpegin@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our VIA GPU support and update our wiki to match","last_modified":"2016-12-22T11:10:47Z","is_beginner":false,"id":5069584373645312,"categories":[3,5],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"Haiku needs a graphical event/syslog viewer. This would just be a GUI for viewing logs produced by the Launch Daemon, Syslog Daemon etc.\n\nImplementations on other systems include: Windows Event Viewer, KSystemLog, Apple system Console, Gnome Log File Viewer.\n\nThe application should have the following features:\n\n* filter events by component\n* filter events by severity\n* filter events by host\n* filter events by date/time\n* filter events by custom criteria\n* basic event monitoring (this should be outsourced to ActivityMonitor on Haiku)\n* event query/search assistance","tags":["syslog","event viewer","gui","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a graphical event/syslog viewer","last_modified":"2016-12-22T11:39:14Z","is_beginner":false,"id":5073704421687296,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Dynamate is a puzzle game for Haiku. It comes with a level editor (called LevelWorld).\n\nThe level editor has a save/load system, but does not track whether the current level has been modified. It should do so, in order to:\n- Not allow to save a level if it was not modified.\n- Not allow to lose changes by quitting the app or loading another level if the current one isn't saved.","tags":["dynamate","game","editor","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","valetolpegin@gmail.com","begasus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Dynamate: track \"modified\" state in level editor","last_modified":"2016-12-24T21:09:44Z","is_beginner":false,"id":5073777308205056,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **MediaPlayer** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for MediaPlayer","last_modified":"2017-01-04T18:11:07Z","is_beginner":false,"id":5075689736765440,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"XXX: there is already an HVIF->bitmap translator, however what would be really useful is an IOM/HVIF->SVG translator.\n\nYour task is to make Icon-O-Matic usable from command-line, and possibly on build platforms, to allow converting icons from the native format to HVIF and SVG, or to write a CLI tool doing just that.","tags":["svg","hvif","cli","icon"],"private_metadata":"","mentors":["revolf@gmail.com"],"max_instances":1,"name":"[HOLD][FIXME] Make Icon-O-Matic usable from command-line, or write a CLI tool to convert icons to HVIF/SVG","last_modified":"2016-11-23T21:13:49Z","is_beginner":false,"id":5078768020357120,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Coverity Prevent is a static code analysis tool for C, C++, C# and Java source code. It is a commercial product which originated as the Stanford Checker, which used abstract interpretation to identify defects in source code.\n\nIt analyzes Haiku sourcecode and detects bugs and programming errors.\n\nThe goal of this task is to pick one of the issues reported by Coverity, investogate the problem, and fix the bug. You will have to submit your work as a patch on Haiku's bug tracker.\n\nThe issue list is not publicly available, so the first step is requesting access at the Coverity website to view the detected problems. Follow the instructions in our wiki to do so:\nhttps://dev.haiku-os.org/wiki/Coverity\n\nThen you need to pick an issue and analyze the problem. Coverity will show you the parts of the code where it thinks there is a problem. Your goal is to change the code to fix the problem, or report the task as a false positive if it turns out Coverity is wrong.","tags":["c++","security","bugs","analysis","coverity"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","kacperkasper@gmail.com","revolf@gmail.com","pulkomandy@gmail.com","waddlesplash@gmail.com"],"max_instances":15,"name":"Haiku - Fix an issue detected by Coverity (BONUS)","last_modified":"2017-01-03T18:35:57Z","is_beginner":false,"id":5083439367716864,"categories":[1,4],"external_url":"https://dev.haiku-os.org/wiki/Coverity"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libmspack**.\n\nlibmspack is a library which implements several algorithms for decompressing some Microsoft compression formats.\n\nYou can find the sources on the project homepage: http://www.cabextract.org.uk/libmspack/\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libmspack/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","joel.r.sherrill@ieee.org","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libmspack.","last_modified":"2017-01-12T21:08:30Z","is_beginner":false,"id":5083957313929216,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeInterfaceCreator**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeInterfaceCreator\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeInterfaceCreator","last_modified":"2017-01-12T21:47:00Z","is_beginner":false,"id":5087770924023808,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **TakeNotes** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":[],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","morrison@opencax.org","richienyhus@gmail.com"],"max_instances":1,"name":"Test TakeNotes for Bugs and Issues.","last_modified":"2016-12-14T08:51:56Z","is_beginner":false,"id":5088098568372224,"categories":[4],"external_url":"https://github.com/HaikuArchives/TakeNotes/issues"},{"status":1,"time_to_complete_in_days":6,"program_year":2016,"description":"A **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **bctoolbox**, a library that allows to create and run audio and video streams.\n\nYou can find the sources on the project homepage: https://www.linphone.org/\n\nYou can also browse the sources on GitHub: https://github.com/BelledonneCommunications/bctoolbox\n\nThe recipe should be added to haikuports at haikuports/media-libs/bctoolbox/.\n\n**Important:** This task depends on another one: _\"[Create a recipe for mbedtls, a cryptographic library for embedded systems.](tasks/6308451925884928/)\"_\nIt may also be made to depend on _\"[Create a recipe for bcunit, a lightweight system for writing, administering, and running unit tests in C.](tasks/4644535021862912/)\"_\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for bctoolbox, a library that allows to create and run audio and video streams. (requires mbedtls)","last_modified":"2016-12-06T15:08:27Z","is_beginner":false,"id":5088733558734848,"categories":[1],"external_url":"https://github.com/BelledonneCommunications/bctoolbox"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **Expander** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Expander","last_modified":"2017-01-04T17:45:21Z","is_beginner":false,"id":5093916504227840,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Notification center for Haiku.\n\nHaiku has a notification system similar to the one in Android and other mobile phone systems.\n\nThe goal of this task is to implement storing of the notifications. They should be displayed in Haiku's notification preferences.","tags":["notifications","c++","ui","programming","advanced"],"private_metadata":"","mentors":["waddlesplash@gmail.com","valetolpegin@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Implement storing of notifications for Haiku","last_modified":"2016-12-22T13:08:01Z","is_beginner":false,"id":5096957508845568,"categories":[1,2],"external_url":"https://dev.haiku-os.org/ticket/12809"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Sequitur** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["humdingerb@googlemail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test Sequitur for Bugs and Issues.","last_modified":"2016-12-22T12:43:07Z","is_beginner":false,"id":5097578098065408,"categories":[4],"external_url":"https://github.com/HaikuArchives/Sequitur/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The screenshots on our Virtual Box guide page need refreshing. This task is to replace the old images with fresh ones using the latest version of Virtual Box and a Haiku Nightly Anyboot image.\n\nhttps://www.haiku-os.org/guides/virtualizing/virtualbox\nzip your screenshots into one zip file and attach it.  You may need up to 15 images for this task.  each image should be properly cropped to just show the same window view as the current page does.","tags":["virtualbox","guide","screenshot"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Update screenshots on the \"Virtualizing Haiku in VirtualBox\" guide page","last_modified":"2016-11-30T13:45:41Z","is_beginner":false,"id":5098538962780160,"categories":[3,4],"external_url":"https://www.haiku-os.org/guides/virtualizing/virtualbox"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BlogPositive** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/puckipedia/BlogPositive/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["scottmc2@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test BlogPositive for Bugs and Issues.","last_modified":"2016-12-22T12:43:00Z","is_beginner":false,"id":5100506192019456,"categories":[4],"external_url":"https://github.com/puckipedia/BlogPositive/issues"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **ShowImage** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for ShowImage","last_modified":"2016-12-27T20:39:26Z","is_beginner":false,"id":5104061955178496,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"This task is about card solitaire games (Klondike and Spider) developed by previous GCI students: https://github.com/haikuarchives/BeSpider/\n\nOriginally there were two applications, BeSpider and BeKlondike. However, it would be better to have a single application, with multiple rule sets implemented.\nThe two applications are now merged into one, but the code for each game is still largely independent.\n\nThe goal of this task is to rework the application using the MVC pattern (https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller)\n\nThe application should be structured as such:\n- A single \"window\" class, representing the main window of the application.\n- A single, generic, \"SolitaireView\" class. This is the \"view\" part of the MVC. It should be generic enough to implement any solitaire card game. It should handle piles of cards at different positions on the screen, without knowing anything about the game rules,\n- A set of \"rules\" class implementing different games. This is where all the game rule knowledge should be stored.\n\nThe KlondikeView and SpiderView from the current application should not be needed anymore.\n\nThe resulting program should be given a new name (Haiku Solitaire?) as it will then be more than simply Spider or Klondike capable.","tags":["c++","game","architecture","card","solitaire"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","pulkomandy@gmail.com","revolf@gmail.com","hannahypan@gmail.com","bvitruvio@gmail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Haiku Solitaire - part 2 - MVC design pattern (BONUS)","last_modified":"2017-01-03T19:17:57Z","is_beginner":false,"id":5104961314619392,"categories":[1,2],"external_url":"https://github.com/haikuarchives/BeSpider/"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"BeBuilder is a tool to easily create user interfaces for Haiku and BeOS.\nhttps://github.com/HaikuArchives/BeBuilder\n\nThe goal of this task is to compile BeBuilder and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n- Any changes you needed to get things going (or none if it built without any changes)\n- Addind a COMPILING file with compiling instructions","tags":["abandonware","c++","build system"],"private_metadata":"","mentors":["kacperkasper@gmail.com","chirayudesai1@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Get BeBuilder to run on Haiku","last_modified":"2016-11-15T16:17:24Z","is_beginner":false,"id":5106591388925952,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeBuilder"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"The goal of this task is to port the Bitcoin Core client, that is, the **_Bitcoin Core consensus library_**, also known as **libbitcoinconsensus**, and write a recipe for it.\n\nSee build instructions here: [https://github.com/bitcoin/bitcoin/tree/master/doc](https://github.com/bitcoin/bitcoin/tree/master/doc)\n\nThe sources are on https://bitcoin.org/ but you will find them easier if you start from the project homepage: https://bitcoincore.org/\n\nYou can also browse the sources on GitHub: https://github.com/bitcoin/bitcoin\n\nFor this task we don't need the user interface to be ported, just the command line mode.\n\nThe recipe should be added to haikuports at haikuports/net-libs/libbitcoinconsensus/.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nIf the software requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["cryptocurrency","haikuports","recipe","bitcoin","haikuporter"],"private_metadata":"","mentors":["scottmc2@gmail.com","fbrosson2014-gci@yahoo.fr","adrianarroyocalle@gmail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Create a recipe for libbitcoinconsensus, aka the Bitcoin Core consensus library.","last_modified":"2017-01-11T20:06:15Z","is_beginner":false,"id":5107942391021568,"categories":[1,5],"external_url":"https://github.com/bitcoin/bitcoin"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **ccextractor CLI app**.\n\nYou can find the sources on the project homepage: \nhttp://www.ccextractor.org/doku.php?id=public:general:downloads\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for ccextractor CLI app","last_modified":"2017-01-07T08:51:39Z","is_beginner":false,"id":5117879617847296,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"Inspiration:\n\n* KCachegrind\n* AMD CodeAnalyst\n* Stackify","tags":["python","ui","tracer","c++","profiler"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[Hold] Code a Graphical Profiler/Tracer","last_modified":"2016-12-22T11:42:12Z","is_beginner":false,"id":5120313675218944,"categories":[1,2],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"​[Scripting](https://www.haiku-os.org/documents/dev/using_scripting_in_haiku) is used in Haiku to interact programmatically with applications,like with the hey CLI tool. All apps already support basic scripting through the App Kit, but some would benefit from more specific scripting interfaces.\n\nExpose the current track as a scripting object, possibly reusing SoundPlay's interface.","tags":["​scripting","c++","media player"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"Add a scripting interface to MediaPlayer to make it more useful","last_modified":"2016-12-22T11:31:08Z","is_beginner":false,"id":5121894793609216,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **fluidsynth**.\n\nYou can find the recipes at haikuports/media-sound/fluidsynth.\n\nThe fixed recipes should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","music"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","bvitruvio@gmail.com"],"max_instances":1,"name":"Fix recipes for fluidsynth","last_modified":"2017-01-02T04:41:26Z","is_beginner":false,"id":5130733179895808,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Weather is an application to show weather forecast. It was developed by Google Code-In contestants in previous editions.\n\nThe goal of this task is to make it possible to install it in the deskbar. The deskbar replicant should show just the icon of the current weather, with the details in a tooltip. Clicking on it should open the main application.","tags":["weather","ui","c++","replicant"],"private_metadata":"","mentors":["waddlesplash@gmail.com","valetolpegin@gmail.com","humdingerb@googlemail.com","revolf@gmail.com"],"max_instances":1,"name":"Weather: deskbar replicant support","last_modified":"2016-12-22T11:08:51Z","is_beginner":false,"id":5130757022416896,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **cylindrix**.\nThere is an in-progress pull request open for this one, read through the comments and see if you can solve the remaining issue(s)\n\nYou can find the recipe at haikuports/games-action/cylindrix.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","begasus@gmail.com"],"max_instances":1,"name":"Fix recipe for cylindrix [Potentially a Hard Task]","last_modified":"2017-01-03T21:53:30Z","is_beginner":false,"id":5132877979189248,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Q** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/Q/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["richienyhus@gmail.com","chirayudesai1@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test Q for Bugs and Issues.","last_modified":"2016-12-22T12:42:42Z","is_beginner":false,"id":5136524861505536,"categories":[4],"external_url":"https://github.com/HaikuArchives/Q/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to be running a recent nightly build of x86_64 Haiku, either on real hardware or in a VM.  You will also need to have Haikuporter installed and able to build recipes.  For this task you will find 5 different recipes which have the ARCHITECHTURES=\"\"  contain an unknown state for x86_64, this would be indicated by a ? before the name, as in \"?x86_64\".  Remove the ? and see if the recipe will build or not.  For ones that work, leave the ? out.  For ones that fail, take notes and/or screenshots of where they are failing.  Change the recipes for those that fail to mark them as failing by changing them to have a ! in front, as in \"!x86_64\"\nThen submit a pull request with your 5 updated recipes.  For ones that fail open a new issue on Haikuports for each, stating that it fails to build on x86_64 and attach any screenshots or notes regarding your findings.","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":10,"name":"Check if 5 different recipes will build or not on Haiku x86_64 (1)","last_modified":"2017-01-07T08:50:40Z","is_beginner":false,"id":5141113478316032,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libsmf**.\n\nlibsmf is a library for handling SMF (\"*.mid\") files.\n\nYou can find the sources on the project homepage: http://sourceforge.net/projects/libsmf/\n\nYou can also read the API at: http://libsmf.sourceforge.net/api/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libsmf/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libsmf.","last_modified":"2016-12-19T18:36:18Z","is_beginner":false,"id":5141773479313408,"categories":[1],"external_url":"http://sourceforge.net/projects/libsmf/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Fix this minor issue in the recipe.\nhttps://github.com/haikuports/haikuports/issues/885\n\nAdd a proper makefile\n\nAdd proper MIT license header to each source code file.\n\nAdd a proper .rdef file\n\nAdd a README.md, no screenshot needed unless game is working.\n\nAfter you complete all this and get it building, test the app and open new issue for any bugs you might run into, such as song directories not working, etc.\n\nSubmit pull request for fixes on https://github.com/HaikuArchives/GuitarMaster, once those are accepted, submit a pull request for the updated recipe.\n\nOnce the second pull request is submitted, submit the URL to it as your work for this task.","tags":[".rdef","guitarmaster","testing","recipe","makefile"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","kushalspidermansingh@gmail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Update and Test Guitarmaster","last_modified":"2016-12-22T10:52:34Z","is_beginner":false,"id":5142129481351168,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for squashfs-tools.\n\nSquashfs is a compressed read-only filesystem.\nsquashfs-tools, which ships mksquashfs and unsquashfs, allows to create and extract such filesystems.\n\nYou can find the sources on the project homepage: http://squashfs.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/sys-fs/squashfs-tools/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","sys-fs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for squashfs-tools.","last_modified":"2016-11-21T19:17:22Z","is_beginner":false,"id":5144213289172992,"categories":[1],"external_url":"http://squashfs.sourceforge.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Applications (session 3)](https://drive.google.com/open?id=0BzmDvOVZZ5mteTRTNmdsQ1REckk), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","applications","pre-beta","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Applications (session 3)","last_modified":"2016-12-06T16:43:21Z","is_beginner":false,"id":5145801185558528,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for **efitools**.\n\nefitools are a set of tools for manipulating UEFI secure boot platforms.\n\nYou can find the sources on the project homepage: https://git.kernel.org/cgit/linux/kernel/git/jejb/efitools.git\n\nThe recipe should be added to haikuports at haikuports/app-crypt/efitools/.\n\n**Important:** This task depends on two other tasks: _[Create a recipe for gnu-efi](https://codein.withgoogle.com/tasks/5709557686861824/)_ and _[Create a recipe for sbsigntool](https://codein.withgoogle.com/tasks/5635060506034176/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for efitools. (needs gnu-efi and sbsigntool) [DOES THIS MAKE SENSE ON HAIKU?]","last_modified":"2016-11-28T20:37:49Z","is_beginner":false,"id":5146607733440512,"categories":[1,5],"external_url":"https://git.kernel.org/cgit/linux/kernel/git/jejb/efitools.git"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Clipdinger** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/humdingerb/clipdinger) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Clipdinger for Bugs and Issues.","last_modified":"2016-11-26T20:12:05Z","is_beginner":false,"id":5149393388830720,"categories":[4],"external_url":"https://github.com/humdingerb/clipdinger/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haiku includes a audio player application called *MediaPlayer*, however Haiku currently has no open source music manager or jukebox application. A music manager that takes advantage of Haiku's unique attribute system to sort and filter songs would be very powerful.\n\nThe application should be able to filter music by song, artist, album, year of release, genre, mood and user rating.\n\nThere are a few prototypes that already exist on Haiku, so your first task is to test these applications to see if any of the code is usable or if we need to start from scratch. Report back here the status of each application and what you think we should do.\n\nFor part one, we expect to see a Main application window which will have a menu option to run querries on your system to locate media files to play.  This querry option should allow seraching based on selectable attributes.  It should the be able to populate a list in the window (or frame in the window) showing the results.  More features will be added in future tasks.\n\n\nPrototypes:\n* [CherryBlossom](https://github.com/HaikuArchives/CherryBlossom)\n* [​MusicCollection](http://cgit.haiku-os.org/haiku/tree/src/apps/musiccollection)\n* [FreeBird](https://github.com/kallisti5/freebird)","tags":["python","app","music manager","c++","metadata"],"private_metadata":"","mentors":["valetolpegin@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com","bvitruvio@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Code a Music Manager (Part 1)","last_modified":"2017-01-02T05:55:39Z","is_beginner":false,"id":5155654108971008,"categories":[1,2,5],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **sg3_utils**.\n\nsg3_utils is a collection of utilities for interacting with the **sg** SCSI interface.\n\nYou can find the sources on the project homepage: http://sg.danny.cz/sg/sg3_utils.html\n\nThe recipe should be added to haikuports at haikuports/sys-apps/sg3_utils/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-apps"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for sg3_utils. (probably a hard task, if not incompatible)","last_modified":"2016-12-19T18:25:34Z","is_beginner":false,"id":5156282415710208,"categories":[1,5],"external_url":"http://sg.danny.cz/sg/sg3_utils.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **ebooktools**.\n\nYou can find the recipe at haikuports/app-text/ebook_tools.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Fix recipe for ebook_tools","last_modified":"2017-01-02T04:11:49Z","is_beginner":false,"id":5158076485206016,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":7,"program_year":2016,"description":"The goal of this task is to write a recipe for **libu2f-server**, Yubico's Universal 2nd Factor (U2F) server C Library.\n\nYou can find the sources on the project homepage: https://developers.yubico.com/libu2f-server/\n\nYou can also browse the sources on GitHub: https://github.com/Yubico/libu2f-server\n\nThe recipe should be added to haikuports at haikuports/app-crypt/libu2f-server/.\n\n**Important:** This task depends on another one: _[Create a recipe for hidapi](https://codein.withgoogle.com/tasks/6228314842726400/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for libu2f-server (needs hidapi)","last_modified":"2016-11-28T21:02:39Z","is_beginner":false,"id":5169791530696704,"categories":[1,5],"external_url":"https://developers.yubico.com/libu2f-server/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Seeker** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["jessicalhamilton@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test Seeker for Bugs and Issues.","last_modified":"2016-12-22T12:42:34Z","is_beginner":false,"id":5176513691385856,"categories":[4],"external_url":"https://github.com/HaikuArchives/Seeker/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **beae**.\n\nYou can find the recipe at haikuports/haiku-apps/beae.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Fix recipe for Haiku Audio editor BeAE","last_modified":"2017-01-02T04:12:09Z","is_beginner":false,"id":5180085843787776,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Haiku's GUI](https://drive.google.com/open?id=0BzmDvOVZZ5mtYWN0NEowX2F4bmM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","haiku-gui"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","jessicalhamilton@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Haiku testing: Haiku's GUI","last_modified":"2016-12-10T11:11:07Z","is_beginner":false,"id":5181699059089408,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/HaikuTwitter\nThe goal of this task is to modify HaikuTwitter so it can work with GNU Social nodes. \n\nThe GNU Social API is very a clone of Twitter API, so minimal changes are needed. GNU Social supports both XML and JSON apis (currently HaikuTwitter uses the XML API, which has been deleted by Twitter).\n\nGNU Social API docs: http://tuctum.com/doc/twitterapi","tags":["haiku apps","twitter","networking","c++","gnu social"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","adrianarroyocalle@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Add suport for GNU Social (aka Quitter) to HaikuTwitter","last_modified":"2016-11-21T02:32:42Z","is_beginner":false,"id":5192546703638528,"categories":[1],"external_url":"https://github.com/HaikuArchives/HaikuTwitter"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Preferences (session 1)](https://drive.google.com/open?id=0BzmDvOVZZ5mtUktVSFBQOXF3ZUU), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","preferences"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Preferences (session 1)","last_modified":"2016-12-06T16:46:20Z","is_beginner":false,"id":5198870875209728,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **c-blosc**, a blocking, shuffling and loss-less compression library.\n\nYou can find the sources on the project homepage: http://blosc.org/\n\nYou can also browse the sources on GitHub: https://github.com/Blosc/c-blosc\n\nThe recipe should be added to haikuports at haikuports/dev-libs/c-blosc/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD] Create a recipe for c-blosc, a blocking, shuffling and loss-less compression library. (requires zstd)","last_modified":"2016-12-25T14:52:27Z","is_beginner":false,"id":5200470001844224,"categories":[1],"external_url":"https://github.com/Blosc/c-blosc"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **StyledEdit** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for StyledEdit","last_modified":"2016-11-28T07:29:12Z","is_beginner":false,"id":5202721850261504,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **ActivityMonitor** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for ActivityMonitor","last_modified":"2017-01-04T17:45:58Z","is_beginner":false,"id":5202864523706368,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeOhms**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeOhms\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","beos"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeOhms","last_modified":"2017-01-10T13:21:57Z","is_beginner":false,"id":5220544871923712,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **AuralIllusion**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/AuralIllusion\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for AuralIllusion","last_modified":"2017-01-12T19:26:25Z","is_beginner":false,"id":5227704716623872,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to research what Intel graphics cards we support, what ones we don't support and fill in the missing details on our [Intel wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/Intel).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare it to a list of [Intel GPUs listed on wikipedia](https://en.wikipedia.org/wiki/List_of_Intel_graphics_processing_units)\n\nFor instance: do we support the in GMA 3150 the Atom N5xx chipset?","tags":["wiki","hardware","intel","gpu"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our Intel GPU support and update our wiki to match","last_modified":"2016-12-22T11:20:30Z","is_beginner":false,"id":5229077447311360,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **TimeBomb**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/TimeBomb\n\nFor this task you will need to convert the .prj file to a makefile using Paladin, and convert the .rsrc file to an .rdef file using the [rc command](https://www.haiku-os.org/documents/dev/compile_them_resources)\nVerify that the new makefile will compile and then submit a pull request on HaikuArchive with your changes.  Then create/update the recipe for it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","emrysnurmi@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for TimeBomb","last_modified":"2017-01-12T09:25:03Z","is_beginner":false,"id":5229940515536896,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Icon should be submitted as an HVIF rdef file, png and as a .IOM file.\n\nSee old issue here: https://github.com/orangejua/Becasso/issues/3","tags":["icon-o-matic","hvif","design","icons"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create new icon for BeCasso","last_modified":"2017-01-12T09:31:37Z","is_beginner":false,"id":5238137628393472,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for signify, a tool to cryptographically sign and verify signatures on files.\n\nYou can find the sources on the project homepage: https://github.com/aperezdc/signify\n\nThe recipe should be added to haikuports at haikuports/app-crypt/signify/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","kacperkasper@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Create a recipe for signify. (this task is hard and might need to be changed)","last_modified":"2016-11-30T08:49:03Z","is_beginner":false,"id":5240241778589696,"categories":[1,5],"external_url":"https://github.com/aperezdc/signify"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to research what NVidia graphics cards we support, what ones we don't support and fill in the missing details on our [NVidia wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/NVidia).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare it to a list of [NVidia GPUs listed on wikipedia](https://en.wikipedia.org/wiki/List_of_Nvidia_graphics_processing_units)","tags":["wiki","hardware","nvidia","gpu"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our NVidia GPU support and update our wiki to match","last_modified":"2016-12-22T11:20:24Z","is_beginner":false,"id":5246490318471168,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libiscsi**, a clientside library to implement the iSCSI protocol.\n\nYou can find the sources on the project homepage: https://github.com/sahlberg/libiscsi\n\nThe recipe should be added to haikuports at haikuports/net-libs/libiscsi/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for libiscsi, a clientside library to implement the iSCSI protocol.","last_modified":"2016-12-18T05:23:19Z","is_beginner":false,"id":5253323718393856,"categories":[1],"external_url":"https://github.com/sahlberg/libiscsi"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to research what ATI/AMD graphics cards we support, what ones we don't support and fill in the missing details on our [ATI/AMD wiki page](https://dev.haiku-os.org/wiki/HardwareInfo/video/ATI).\n\nYou will need to look the device IDs and vendor codenames of the hardware we support (links are listed on the page linked above) and compare it to a list of [ATI/AMD GPUs listed on wikipedia](https://en.wikipedia.org/wiki/List_of_AMD_graphics_processing_units)\n\nFor instance: do we support the AMD GPU codenamed \"New Zealand\" ?","tags":["wiki","hardware","amd","gpu"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Investigate our AMD GPU support and update our wiki to match","last_modified":"2016-12-22T11:20:16Z","is_beginner":false,"id":5254927110635520,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for jpegoptim, a utility to optimize JPEG files.\n\nYou can find the sources on the project homepage: http://www.kokkonen.net/tjko/projects.html\n\nYou can also browse the sources on GitHub: https://github.com/tjko/jpegoptim\n\nThe recipe should be added to haikuports at haikuports/media-gfx/jpegoptim/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","hannahypan@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for jpegoptim.","last_modified":"2016-11-21T02:42:20Z","is_beginner":false,"id":5265825019723776,"categories":[1],"external_url":"http://www.kokkonen.net/tjko/projects.html"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for glucas.\n\nGlucas is a client to make primality test for Mersenne numbers.\nIt is related to the GIMPS effort to search the bigest primes ever found.\nIn addition, it can be used as an excellent performance test.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/glucas/\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/glucas/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for glucas.","last_modified":"2017-01-04T18:08:09Z","is_beginner":false,"id":5282774571286528,"categories":[1,5],"external_url":"https://sourceforge.net/projects/glucas/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Team Monitor](https://drive.google.com/open?id=0BzmDvOVZZ5mtQUJINTZGRUR5cHc), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","team-monitor"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Team Monitor","last_modified":"2016-12-06T15:41:00Z","is_beginner":false,"id":5286043007844352,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BabyBe**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BabyBe\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BabyBe","last_modified":"2017-01-12T21:45:06Z","is_beginner":false,"id":5289995969495040,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **sqlcipher**, an extension providing transparent encryption for SQLite databases.\n\nYou can find the sources on the project homepage: https://www.zetetic.net/sqlcipher/\n\nThe recipe should be added to haikuports at haikuports/dev-db/sqlcipher/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","dev-db","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","bvitruvio@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for sqlcipher.","last_modified":"2016-12-19T18:39:14Z","is_beginner":false,"id":5292630279716864,"categories":[1],"external_url":"https://www.zetetic.net/sqlcipher/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haiku already has some applications that could be useful for accessibility, but aren't really tailored with it in mind. The idea is to make them more useful in this context.\n\n* Make Magnify follow caret when mouse is not moving.\n* Make Magnify \"dockable\" to the screen bottom or top.","tags":["c++","accessibility","magnify"],"private_metadata":"","mentors":["valetolpegin@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add accessibility features to Magnify to make them more useful to disabled people","last_modified":"2016-12-22T11:09:56Z","is_beginner":false,"id":5318377467805696,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/haikuports/haikuports/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aopen%20x86_64\n\nSome of the Haikuports recipes have been tested and found to not be working on x86_64.  This task it to figure out and fix them so that they build and work on x86_64.\n\nThe issues are likely to be similar, so once you learn the trick to fixing one, the next one will be a bit easier.","tags":["haikuports","porting","recipe","x86_64"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":5,"name":"Fix 3 recipes that are currently marked as broken on x86_64","last_modified":"2017-01-09T22:04:02Z","is_beginner":false,"id":5319318650748928,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **softhsm**, a software PKCS#11 implementation that is part of the [OpenDNSSEC](https://www.opendnssec.org/) project.\n\nThe letters \"HSM\" (in SoftHSM) stand for **_Hardware Security Modules_**.\n\nYou can find the sources on the project homepage: https://www.opendnssec.org/softhsm/\n\nYou can also browse the sources on GitHub: https://github.com/opendnssec/SoftHSMv2\n\nThe recipe should be added to haikuports at haikuports/\n\n**Important:** This task depends on another one: _[Create a recipe for botan](tasks/5367285021671424/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD] Create a recipe for softhsm, a software PKCS#11 implementation. (requires botan)","last_modified":"2016-12-18T18:28:11Z","is_beginner":false,"id":5331174278823936,"categories":[1],"external_url":"https://github.com/opendnssec/SoftHSMv2"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **mdate**.\n\nYou can find the sources on the project homepage: https://github.com/ewe2/mdate\n\nYou can find the source code for an old BeOS port at HaikuPorts: https://github.com/haikuports/haikuports/files/368897/mdate-1.5.1-BeOS_src-incl.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for mdate, a mayan date utility","last_modified":"2016-12-31T20:54:53Z","is_beginner":false,"id":5349619384975360,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/728"},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **ccid**.\n\nCCID is a free software driver for generic USB Chip/Smart Card Interface Devices (CCID) and Integrated Circuit(s) Card Devices (ICCD).\n\nYou can find the sources on the project homepage: http://pcsclite.alioth.debian.org/ccid.html\n\nThe recipe should be added to haikuports at haikuports/app-crypt/ccid/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for ccid, a generic USB CCID (Chip/Smart Card Interface Devices) driver and ICCD (Integrated Circuit(s) Card Devices). (probably a hard task)","last_modified":"2016-12-19T18:26:30Z","is_beginner":false,"id":5364148632289280,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **botan**, a crypto library written in C++.\n\nYou can find the sources on the project homepage: https://botan.randombit.net/\n\nYou can also browse the sources on GitHub: https://github.com/randombit/botan\n\nThe recipe should be added to haikuports at haikuports/dev-libs/botan/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for botan, a C++ crypto library","last_modified":"2016-12-19T17:59:23Z","is_beginner":false,"id":5367285021671424,"categories":[1],"external_url":"https://github.com/randombit/botan"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **WebPositive** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is **highly** recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for WebPositive","last_modified":"2016-12-22T10:46:57Z","is_beginner":false,"id":5369743598944256,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **unrtf**, a command-line program which converts RTF documents to other formats.\n\nYou can find the sources on the project homepage: https://www.gnu.org/software/unrtf/unrtf.html\n\nThe recipe should be added to haikuports at haikuports/app-text/unrtf/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","app-text","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for unrtf","last_modified":"2017-01-06T09:04:25Z","is_beginner":false,"id":5371602145378304,"categories":[1],"external_url":"https://www.gnu.org/software/unrtf/unrtf.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"ArtPaint is a painting and image processing program for Haiku\n\nPick one of the open issues for ArtPaint solve it.\n- https://github.com/HaikuArchives/ArtPaint/\n- https://github.com/HaikuArchives/ArtPaint/issues\n\nTo complete this task you will need to:\n- Download and compile ArtPaint's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the ArtPaint repository on github so your changes are integrated.","tags":["art","bugs","c++"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","kacperkasper@gmail.com","adrianarroyocalle@gmail.com","hannahypan@gmail.com","valetolpegin@gmail.com"],"max_instances":10,"name":"Fix an open issue in ArtPaint","last_modified":"2016-12-22T11:08:26Z","is_beginner":false,"id":5384393329737728,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://www.xenproject.org/\n\nArticle should include screenshots and full step by step instructions.  See articles about running Haiku in VirtualBox for instance: https://www.haiku-os.org/guides/virtualizing\n\nSubmit your screenshots one at a time and the article text as a .txt file.  You should submit a few screenshots early to get mentor feedback to make sure you are on the right track.","tags":["article","xen","screenshot","writing"],"private_metadata":"","mentors":["humdingerb@googlemail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Write an article on how to run Haiku with Xen","last_modified":"2016-12-22T12:47:30Z","is_beginner":false,"id":5395664598990848,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to investigate the code at https://github.com/ErisBlastar/wordservices\n\nThe \"word services SDK\" is a framework to embed spell checking in BeOS applications. However, it is unknown wether the full sourcecode is available, or only some parts.\n\nThe goal of this task is to investigate the github repo and see if it is a complete project, or just some bits and pieces.","tags":["spell check","investigation","abandonware","word services sdk","c++"],"private_metadata":"","mentors":["jeromeduval@gmail.com","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Investigate Word Services SDK and try to get it running","last_modified":"2016-12-22T13:15:20Z","is_beginner":false,"id":5395871394955264,"categories":[1,5],"external_url":"https://github.com/ErisBlastar/wordservices"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The Haiku project is not very well known even in the open source world. We need your help to reach out to more users or developers.\n\nPresent Haiku to a local audience, whether that be a Linux User Group, a technology club, a school, etc. You can do a 5 minute lightning style talk, or a longer 30-60 minutes talk and demo, the choice is yours. Figure about 1-2 slides per minute of talking. For your work on this task we would like to see your slides.\n\nFinal output of your slides should be a .pdf file.  You can use Google Slides or any other slides program you wish for this, but be sure to export the final result as a pdf so it can be viewed inside Haiku itself.  This will make it easy for you to transition to demo mode during your talk.","tags":["presentation","outreach","slideshow"],"private_metadata":"","mentors":["scottmc2@gmail.com","valetolpegin@gmail.com","emrysnurmi@gmail.com","hannahypan@gmail.com","codedeepanshu@gmail.com"],"max_instances":20,"name":"Present a Haiku Talk to a local audience","last_modified":"2016-12-22T10:27:47Z","is_beginner":false,"id":5397510461849600,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"In this task you have to write a new recipe and patch file for the latest release for tuxpaint.\n\nhttp://www.tuxpaint.org/latest/tuxpaint-0.9.22-press-release-en.php3\n\nhttp://www.tuxpaint.org/download/source/ (get the stamps package)\n\nThere is no executable in this, it will just be the stamps.  The recipe should depend on tuxpaint though.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe","games","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","begasus@gmail.com"],"max_instances":1,"name":"Create a recipe for tuxpaint stamps","last_modified":"2016-12-27T01:13:31Z","is_beginner":false,"id":5409189574737920,"categories":[1],"external_url":"http://www.tuxpaint.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for **MuseScore**, an application to create, play and print beautiful sheet music.\n\nYou can find the sources on the project homepage: https://github.com/musescore/MuseScore\n\nYou can find a fork that has been edited to run on Haiku here: https://github.com/mmuman/MuseScore/tree/haiku\n\nThe recipe should be added to haikuports at haikuports/media-sound/musescore\nmmu_man has done some work to get this working on Haiku, you can find his WIP patch here:\nhttps://github.com/haikuports/haikuports/tree/master/media-sound/musescore/patches\n\nDependencies to be installed on the build environment: qt5, freetype, libsndfile, zlib (x86_64 is up-to-date in this respect).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for MuseScore, an application to create, play and print beautiful sheet music","last_modified":"2016-12-02T10:16:38Z","is_beginner":false,"id":5421890743042048,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haiku's E-Mail preferences can auto-fill some settings to make adding email accounts easier.\nYour task is to add the necessary \"ProviderInfo\" for email providers that are still missing. Please see this thread in the Haiku forums: [\"New or corrected email provider info anyone?\"](https://discuss.haiku-os.org/t/new-or-corrected-email-provider-info-anyone/4326).\n\nYou have to find out the working settings for your provider by testing different settings in  Haiku's E-mail preferences and submit an .rdef file with the working settings for your provider.\n\nFor more information, see these chapters of the user guide:\n* [E-mail preferences](https://www.haiku-os.org/docs/userguide/en/preferences/e-mail.html)\n* [Workshop: Managing Email](https://www.haiku-os.org/docs/userguide/en/workshop-email.html)","tags":["messaging","rdef","email","internet"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":20,"name":"Add missing email provider infos","last_modified":"2016-12-22T11:06:29Z","is_beginner":false,"id":5431058317180928,"categories":[5],"external_url":""},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **icoutils**.\n\nThe icoutils are a set of command-line programs for extracting and converting images in Microsoft Windows(R) icon and cursor files. These files usually have the extension .ico or .cur, but they can also be embedded in executables and libraries (.dll-files).\n\nYou can find the sources on the project homepage: http://nongnu.org/icoutils/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/icoutils/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","hannahypan@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for icoutils.","last_modified":"2017-01-06T20:26:23Z","is_beginner":false,"id":5437295951872000,"categories":[1],"external_url":"http://nongnu.org/icoutils/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application.\n\nYou must work from the application created in parts 1-5: https://github.com/raefaldhia/Maps\n\nFor part 7 add support for issues 12, 13 and 14, add zoom icon, zoom level bar display and search icon on the search box.","tags":["haiku api","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","valetolpegin@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Maps application (part 7)","last_modified":"2017-01-04T16:32:57Z","is_beginner":false,"id":5440862232248320,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BeShare** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","scottmc2@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeShare for Bugs and Issues.","last_modified":"2016-12-22T11:07:37Z","is_beginner":false,"id":5449090301165568,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeShare/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libp11**.\n\nlibp11 is a library implementing a thin layer on top of PKCS#11 API to make using PKCS#11 implementations easier.\n\nYou can find the sources on the project homepage: https://github.com/opensc/libp11/wiki\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libp11/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libp11, a cryptography-related library implementing a tiny layer on top of PKCS#11.","last_modified":"2017-01-11T20:15:32Z","is_beginner":false,"id":5450173069131776,"categories":[1],"external_url":"https://github.com/opensc/libp11/wiki"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **FlyingTroll**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/FlyingTroll\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for FlyingTroll","last_modified":"2017-01-12T21:45:50Z","is_beginner":false,"id":5460776754085888,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"The goal of this task is to write a recipe for calc.\n\nCalc is a C-style arbitrary precision calculator.\n\nYou can find the sources on the project homepage: http://www.isthe.com/chongo/tech/comp/calc/\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/calc/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for calc, an arbitrary precision calculator.","last_modified":"2016-11-18T23:10:10Z","is_beginner":false,"id":5481166090010624,"categories":[1],"external_url":"http://www.isthe.com/chongo/tech/comp/calc/"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"A 2048 clone was written during Google Code-In 2015 but no recipe was made for it.\n\nThe sources are here: https://github.com/TwoFX/Haiku2048\n\nThe recipe should be added to haikuports at haikuports/haiku-games/haiku2048/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","games-puzzle"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Create a recipe for Haiku2048","last_modified":"2016-11-29T15:57:57Z","is_beginner":false,"id":5523970438725632,"categories":[1],"external_url":""},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/haikuports/haikuports/issues/1008\n\nThe goal of this task is to fix the recipe for ArtPaint. ArtPaint is an advanced painting and image processing program.\n\nThere is already a recipe, but it is currently outdated and does not build any application add-ons.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","c++"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Fix the recipe for ArtPaint","last_modified":"2017-01-09T22:31:44Z","is_beginner":false,"id":5526649875464192,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/FtpPositive/issues/5\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Update FtpPositive to use layout management","last_modified":"2017-01-03T19:57:34Z","is_beginner":false,"id":5559863830642688,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/BeGet/issues/5\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["valetolpegin@gmail.com","hannahypan@gmail.com","humdingerb@googlemail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Update BeGet to use layout management","last_modified":"2017-01-03T20:03:51Z","is_beginner":false,"id":5564781433978880,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"The goal of this task is to write a recipe for **hefur**, a standalone C++ BitTorrent tracker.\n\nYou can find the sources on the project homepage: https://github.com/abique/hefur\n\nThe recipe should be added to haikuports at haikuports/net-p2p/hefur/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-p2p","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for hefur, a standalone and lightweight BitTorrent tracker.","last_modified":"2016-12-18T05:26:12Z","is_beginner":false,"id":5580742994165760,"categories":[1,5],"external_url":"http://github.com/abique/hefur"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task, you need to fork [Tipster](https://github.com/HaikuArchives/Tipster) and add 5 new tips to the application. You will then need to submit a PR (pull request) containing the new tips.\n\nYou should join Haiku's IRC channel (#haiku) to get input from Haiku developers on what tips they would like to see added into the application.\n\nIn addition, you should only try this task after having Haiku running.","tags":["tipster","info","help","writing"],"private_metadata":"","mentors":["valetolpegin@gmail.com","emrysnurmi@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Tipster - Add 5 new tips","last_modified":"2017-01-04T17:47:15Z","is_beginner":false,"id":5608024766939136,"categories":[1,3],"external_url":"https://github.com/HaikuArchives/Tipster"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Dynamate is a puzzle game for Haiku. It was designed for small screens and does not work too well on modern high resolution displays.\n\nThe goal of this task is to make Dynamate use vector graphics, so the game can be zoomed as much as needed without scaling artifacts.\n\nA set of replacement vector graphics is available, but the code must be adjusted to make use of those.","tags":["game","puzzle","c++","graphics"],"private_metadata":"","mentors":["valetolpegin@gmail.com","chirayudesai1@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Add vector graphics to Dynamate","last_modified":"2016-12-12T20:54:06Z","is_beginner":false,"id":5618267022426112,"categories":[1],"external_url":"https://github.com/HaikuArchives/Dynamate/issues/2"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Desktop Applets (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtS2oxRFpaSWxnLWs), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","desktop-applets"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Desktop Applets (session 2)","last_modified":"2016-12-06T16:53:21Z","is_beginner":false,"id":5630566628065280,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Some progress has been made over the years to get BRL-CAD building on Haiku.  This issue was opened on Haikuports in 2014.\nhttps://github.com/haikuports/haikuports/issues/163\n\nThis task is to try and build the current version of BRL-CAD on Haiku and to report the status as it stands now.  Some of the reported issues from 2014 are no longer issues, so it might get further than it did then.\n\nIf you can get it to build or partially build then submit a pull request at haikuports with an updated recipe.","tags":["blr-cad","haikuports","recipe","build","porting"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","morrison@opencax.org","revolf@gmail.com"],"max_instances":1,"name":"Investigate and report the current status of building BRL-CAD on Haiku.","last_modified":"2016-12-22T12:38:36Z","is_beginner":false,"id":5631824472571904,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **cadaver**, a command-line WebDAV client.\n\nYou can find the sources on the project homepage: http://www.webdav.org/cadaver\n\nThe recipe should be added to haikuports at haikuports/net-misc/cadaver/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","net-misc"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for cadaver, a command-line WebDAV client.","last_modified":"2016-12-19T18:35:04Z","is_beginner":false,"id":5633501198024704,"categories":[1],"external_url":"http://www.webdav.org/cadaver"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"A pending [pull request](https://github.com/haikuports/haikuports/pull/745/) for the latest version of rocksanddiamonds has a few issues. This task is to clean it up and get it accepted. This should be redone as a new pull request. You can use the previous pull request as a guide, but there may be other issues to be addressed.\n\nIn this task you have to write a new recipe and patch file for the latest release for rocksndiamonds 4.0.0.0 that can be found at their website:\nhttp://www.artsoft.org/rocksndiamonds/\n\nBe sure to compare against previous version, as an icon has also now been added. The 4.0.0.0 recipe should also include [this new icon](https://github.com/haikuports/haikuports/tree/master/games-arcade/rocksndiamonds/additional-files).\n\nYou could use this as a base for your work: https://github.com/haikuports/haikuports/tree/master/games-arcade/rocksndiamonds\n\nThe patch removing -lm is no longer needed, so that part should be removed, but we still need to patch for -lnetwork, so that is still needed.  The resulting patch from this task should be sent to the author so that it will be in the next release version of the game.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe","games","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","begasus@gmail.com"],"max_instances":1,"name":"Update recipe / patch for rocksanddiamonds to 4.0.0.0","last_modified":"2016-12-27T01:06:10Z","is_beginner":false,"id":5634245928157184,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"BeGadu (https://github.com/ytmytm/beos-begadu) is a client for the Gadu-Gadu network, a popular instant messaging system in Poland.\n\nThe goal of this task is to get the application to compile on Haiku. The sources ship with a BeIDE project, which can't be used directly, so you will have to rewrite the build system. If you have no preference for a particular build system, it is recommended to use Haiku's makefile_engine.\n\nTo complete this task, you should submit a pull request with your changes to the github repository for BeGadu. Of course the app should compile and at least somewhat run. If there are some runtime issues, they can be fixed in a follow-up task.","tags":["buildsystem","compile","c++","network","instant messaging"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","hannahypan@gmail.com","bvitruvio@gmail.com","kushalspidermansingh@gmail.com"],"max_instances":1,"name":"Get BeGadu to compile on Haiku","last_modified":"2016-12-22T13:08:31Z","is_beginner":false,"id":5634980814258176,"categories":[1,5],"external_url":"https://github.com/ytmytm/beos-begadu"},{"status":1,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for **sbsigntool**.\n\nsbsigntool is a set of utilities for signing and verifying files for UEFI Secure Boot.\n\nYou can find the sources on the project homepage: https://git.kernel.org/cgit/linux/kernel/git/jejb/sbsigntools.git\n\nThe recipe should be added to haikuports at haikuports/app-crypt/sbsigntool/.\n\n**Important:** This task depends on another one: _[Create a recipe for gnu-efi](https://codein.withgoogle.com/tasks/5709557686861824/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for sbsigntool, a tool for UEFI Secure Boot. (needs gnu-efi) [DOES THIS MAKE SENSE ON HAIKU?]","last_modified":"2016-11-28T20:23:05Z","is_beginner":false,"id":5635060506034176,"categories":[1,5],"external_url":"https://git.kernel.org/cgit/linux/kernel/git/jejb/sbsigntools.git"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for [Hedgewars](http://www.hedgewars.org/), a retro multiplayer shooter.\n\nYou can find the sources on the project homepage: http://www.hedgewars.org/download.html\n\nThe recipe should be added to haikuports at haikuports/games-action/hedgewars.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["porting","haikuports","games","recipe","hedgewars"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","kacperkasper@gmail.com","emrysnurmi@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for Hedgewars game","last_modified":"2016-12-22T12:57:34Z","is_beginner":false,"id":5637226981490688,"categories":[1],"external_url":""},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **Screenshot** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Screenshot","last_modified":"2017-01-04T18:10:46Z","is_beginner":false,"id":5638639690186752,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **miniupnpc**, a small UPnP client library/tool to access and configure Internet Gateway Devices.\n\nYou can find the sources on the project homepage: http://miniupnp.free.fr/\n\nThe recipe should be added to haikuports at haikuports/net-libs/miniupnpc/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","fbrosson2014-gci@yahoo.fr","chirayudesai1@gmail.com"],"max_instances":1,"name":"Create a recipe for miniupnpc.","last_modified":"2016-12-19T18:33:36Z","is_beginner":false,"id":5640625340809216,"categories":[1],"external_url":"http://miniupnp.free.fr/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Weather is an application to show weather forecast on Haiku. It was mostly written by Google Code-In students in past editions of the contest.\n\nThe goal of this task is to complete the icon set, by providing 3 icons for weather conditions that are still are missing. When claiming this task, tell us which icons you plan to work on so we can make sure they weren't done already by another student.\n\nYou can find the list of missing icons here: https://github.com/HaikuArchives/Weather/issues/8\n\nIcons have to be in Icon-O-Matic format (you will need to use Icon-O-Matic in Haiku for that) and with a style similar to the existing icons. You may use parts of the existing icons as starting point for your own.\nAll objects (shapes, paths, styles) should be named.\nSee the user guide on Icon-O-Matic:\nhttps://www.haiku-os.org/docs/userguide/en/applications/icon-o-matic.html","tags":["icon-o-matic","weather","design","icons"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","emrysnurmi@gmail.com"],"max_instances":8,"name":"Design missing icons for weather forecast app","last_modified":"2017-01-07T07:30:08Z","is_beginner":false,"id":5642551230988288,"categories":[2],"external_url":""},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal if this task is to implement user mood or user activity extensions.\n\nhttps://xmpp.org/extensions/xep-0107.html\nhttps://xmpp.org/extensions/xep-0108.html\n\nThese extensions allow to set a mood (happy, sad, ...) and an activity (working, playing, ...). Both are shared with contacts so they can decide if it is a good time to chat with you.\n\nTo complete this task, Jabber4Haiku should:\n- Receive and display user mood or activity for contacts (in the contact list or in the chat window)\n- Allow the local user to set his mood or activity, and share these with the XMPP network.\nYou do not need to implement both the mood and the activity, only one is enough.","tags":["xml","xmpp","jabber4haiku","c++","mood / activity"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":2,"name":"XMPP Client - User mood or user activity","last_modified":"2016-12-22T13:24:03Z","is_beginner":false,"id":5644569865617408,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/16"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **lrzsz**, a communication package providing the XMODEM, YMODEM ZMODEM file transfer protocols.\n\nYou can find the sources on the project homepage: https://ohse.de/uwe/software/lrzsz.html\n\nThe recipe should be added to haikuports at haikuports/net-dialup/lrzsz/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","net-dialup"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","joel.r.sherrill@ieee.org","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for lrzsz.","last_modified":"2017-01-11T22:15:52Z","is_beginner":false,"id":5644667710341120,"categories":[1],"external_url":"https://ohse.de/uwe/software/lrzsz.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Preferences (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtQ21lYmhpY2JFYlU), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","preferences"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Preferences (session 2)","last_modified":"2016-12-06T16:45:19Z","is_beginner":false,"id":5646086895042560,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"In this task you'll be updating the recipe currently in the source tree from Github:\n[Freeciv](https://github.com/haikuports/haikuports/blob/75a3cf5384f650242f4b8a1094ab305d33ed99e7/games-strategy/freeciv/freeciv-2.5.5.recipe).\n\nThis should be fairly simple if no big changes in the source were committed.\n\nYou can find the source at:\nhttp://www.freeciv.org/download.html\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe","games","c++"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com","begasus@gmail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for the new Freeciv release","last_modified":"2016-12-27T01:07:18Z","is_beginner":false,"id":5646277272403968,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libslz**.\n\nSLZ is a fast and memory-less stream compressor which produces an output that can be decompressed with zlib or gzip. It does not implement decompression at all, zlib is perfectly fine for this.\n\nYou can find the sources on the project homepage: http://1wt.eu/projects/libslz\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libslz/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libslz, a fast and memory-less stream compressor","last_modified":"2016-12-04T23:42:37Z","is_beginner":false,"id":5646907267350528,"categories":[1],"external_url":"http://1wt.eu/projects/libslz"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The HaikuDepot application is our central app to find and install software. There are many packages, however, that don't have their icon set, nor are there screenshots available and many aren't sorted into a software category either. These are all things that help users when evaluating software.\n\nYour job is to improve this situation.\n\nRequired for the task\n-------------\n* an installed [nightly Haiku image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid)\n* an account for HaikuDepot, see [the user guide](https://www.haiku-os.org/docs/userguide/en/applications/haikudepot.html)\n* installed application *app2png* from HaikuDepot\n* installed application *Sum-It* from HaikuDepot\n\nThe task\n-------------\nDetailed instructions are in a [separate wiki page](https://dev.haiku-os.org/wiki/GoogleCodeInTaskHDS). The page is a little long, but you only have to follow the instructions, which shouldn't be too hard.","tags":["haikudepot","screenshot","icon"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","humdingerb@googlemail.com","emrysnurmi@gmail.com"],"max_instances":35,"name":"Supply category, icon, screenshots for packages in HaikuDepot","last_modified":"2016-12-22T12:27:27Z","is_beginner":false,"id":5649037537574912,"categories":[5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **KeymapSwitcher** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","morrison@opencax.org","richienyhus@gmail.com"],"max_instances":1,"name":"Test KeymapSwitcher for Bugs and Issues.","last_modified":"2016-12-22T12:42:21Z","is_beginner":false,"id":5651048521793536,"categories":[4],"external_url":"https://github.com/HaikuArchives/KeymapSwitcher/issues"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"This is one of our most popular tasks from previous years of Google Code-In.\n\nThe goal of this task is to help you set up everything that is required to build Haiku and make changes to it. If you plan to work on making changes to Haiku itself, it is recommended that you complete this task first, so you are all set to do the work in other tasks. No real coding work on this one here, [just following instructions](https://www.haiku-os.org/guides/building) and getting things setup for future tasks you might select for Haiku.\n\nIf you are compiling Haiku on a VM, be sure to give it at least 16GB of HDD space, and 2GB or more of ram. (It might be even higher than this, we are testing...)\nIf you run into trouble getting it to compile get on IRC #haiku and ask us for help.  Mentors are standing by.\n\nOnce you have downloaded the code, edit \"src/apps/aboutsystem/Credits.h\" adding your name in Alphabetical order under the \"Contributors\" section.  Then build Haiku.\n\nOnce it's built, install it and run it.  Open the AboutSystem app from the leaf menu and scroll down to see your name in the credits.  It's only there on your newly built Haiku.  Now take a screenshot by pressing the printscreen key.  Attach this image as your completed work for this task, to show that you've figured out the steps to downloading, modifying, building and running Haiku.","tags":["compile","compiling"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","codedeepanshu@gmail.com","richienyhus@gmail.com","joel.r.sherrill@ieee.org","emrysnurmi@gmail.com","hannahypan@gmail.com","jessicalhamilton@gmail.com"],"max_instances":100,"name":"Compile Haiku","last_modified":"2016-12-22T10:22:46Z","is_beginner":true,"id":5652272755245056,"categories":[1,3,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"[Ticket](https://dev.haiku-os.org/ticket/12819)","tags":["speech recognition","app","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a speech recognition app","last_modified":"2016-12-22T11:38:08Z","is_beginner":false,"id":5653706569678848,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **prison**.\n\nprison is a barcode abstraction layer providing uniform access to barcode generators.\nSupported barcode formats include QR-code and Data Matrix.\n\nYou can find the sources on the project homepage: https://projects.kde.org/projects/kdesupport/prison\n\nThe recipe should be added to haikuports at haikuports/kde-frameworks/prison/.\n\n**Hint:** This task depends on libdmtx, which was recently added to HaikuPorts.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","begasus@gmail.com","jackjrabbit@gmail.com"],"max_instances":1,"name":"Create a recipe for prison","last_modified":"2017-01-09T08:10:51Z","is_beginner":false,"id":5654095431991296,"categories":[1,5],"external_url":"https://projects.kde.org/projects/kdesupport/prison"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"HaikuArchives is a github organization, and a place to store the code for old BeOS and Haiku applications, which are not actively maintained by the original developers anymore.\n\nThe goal of this task is to identify one such application, that has not been added to HaikuArchive. You will then have to:\n- Locate the sourcecode for the application,\n- Identify the license it was released under,\n- Import the sources into a git repository,\n- Add that repository to your github account,\n- Add it to the list at http://haikuarchives.github.io/,\n- Submit your work to HaikuArchives so it can be stored there.","tags":["app","git","abandonware","archive","preservation"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","emrysnurmi@gmail.com"],"max_instances":15,"name":"Add an application to HaikuArchives","last_modified":"2016-12-22T10:28:23Z","is_beginner":false,"id":5656473635913728,"categories":[5],"external_url":"https://github.com/HaikuArchives"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"DocumentViewer is a program to view various types of documents in Haiku\n\nPick one of the open issues for DocumentViewer solve it.\n- https://github.com/HaikuArchives/DocumentViewer/\n- https://github.com/HaikuArchives/DocumentViewer/issues\n\nTo complete this task you will need to:\n- Download and compile DocumentViewer's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the DocumentViewer repository on github so your changes are integrated.","tags":["c++","document viewer","bugs","issues"],"private_metadata":"","mentors":["humdingerb@googlemail.com","hannahypan@gmail.com","pulkomandy@gmail.com","bvitruvio@gmail.com","kacperkasper@gmail.com"],"max_instances":5,"name":"Fix an open issue in DocumentViewer","last_modified":"2016-12-22T13:11:03Z","is_beginner":false,"id":5657143080386560,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for **inadyn**, a dynamic DNS client with SSL/TLS support.\n\nYou can find the sources on the project homepage: http://troglobit.com/inadyn.html\n\nYou can also browse the sources on GitHub: https://github.com/troglobit/inadyn\n\nThe recipe should be added to haikuports at haikuports/net-dns/inadyn/.\n\nDependencies: openssl\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","net-dialup"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for inadyn.","last_modified":"2016-12-02T10:27:03Z","is_beginner":false,"id":5658162061377536,"categories":[1,5],"external_url":"http://troglobit.com/inadyn.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Einsteinium** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["waddlesplash@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test Einsteinium for Bugs and Issues.","last_modified":"2016-12-22T12:42:10Z","is_beginner":false,"id":5660528051486720,"categories":[4],"external_url":"https://github.com/Perelandra0x309/einsteinium/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Weather** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["valetolpegin@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test Weather for Bugs and Issues.","last_modified":"2016-12-22T12:41:59Z","is_beginner":false,"id":5660832725729280,"categories":[4],"external_url":"https://github.com/HaikuArchives/Weather/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application. For this first task, the goal is to get the minimal support code going. It can be a command line app and should achieve the following:\n- Accept coordinates and zoom level on the command line,\n- Download a map tile from an online service,\n- Save the tile to an image file on disk to check it is the right one.\n\nTo display a map you can use:\n - Mapbox Static API (to render map tiles) - https://www.mapbox.com/api-documentation/#static\n - BHttp* functions. Use this functions from the Haiku API to do the HTTP requests\n\nTask continues at Part II with adding an user interface with a window and showing the map.","tags":["openstreetmap","map","geo","c++","haiku"],"private_metadata":"","mentors":["waddlesplash@gmail.com","adrianarroyocalle@gmail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Code a map application (Part I)","last_modified":"2016-11-21T12:23:06Z","is_beginner":false,"id":5660847791669248,"categories":[1,2],"external_url":"https://www.mapbox.com/api-documentation/#static"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Desktop Applets (session 1)](https://drive.google.com/open?id=0BzmDvOVZZ5mtcUFVYmxORFRHNFk), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","desktop-applets"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Desktop Applets (session 1)","last_modified":"2016-12-06T16:51:54Z","is_beginner":false,"id":5661850096107520,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Your task is to write a mapping (in the form of a CSV file attached to an enhancement ticket on Haiku's bug tracker) of Icon names from the [XDG Icon Naming specs](https://specifications.freedesktop.org/icon-naming-spec/icon-naming-spec-latest.html\n) to the names of the existing Haiku icons [in our source tree](http://cgit.haiku-os.org/haiku/tree/data/artwork/icons) or [Zumi's icons](http://zumi.xoom.it/myhaiku/).\nA third column in the CSV file could provide extra notes, like missing icon, or which icon could be modified to suit.\n\nThis will help later on with porting things like [libQtXDG](https://github.com/lxde/libqtxdg).\n\nYou might want to look at the [Wasp Gnome theme](http://librsvg.sourceforge.net/theme.php) which reuses BeOS-style SVG icons for reference.","tags":["xdg","freedesktop.org","icons"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","kushalspidermansingh@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Write a mapping from XDG icon naming spec to Haiku's icons","last_modified":"2016-11-23T21:30:30Z","is_beginner":false,"id":5661888381714432,"categories":[2,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BeVexed** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeVexed/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test BeVexed for Bugs and Issues.","last_modified":"2016-12-14T08:54:02Z","is_beginner":false,"id":5663123017039872,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeVexed/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **GenesisCommander** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["kushalspidermansingh@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test GenesisCommander for Bugs and Issues.","last_modified":"2016-12-22T12:40:07Z","is_beginner":false,"id":5663456145440768,"categories":[4],"external_url":"https://github.com/HaikuArchives/GenesisCommander/issues"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for libblkmaker.\n\nlibblkmaker is an implementation of getblocktemplate.\n\nYou can find the sources on the project homepage: https://github.com/bitcoin/libblkmaker\n\nThe recipe should be added to haikuports at haikuports/net-libs/libblkmaker/.\n\nRequirements: https://github.com/bitcoin/libbase58 and dev-libs/jansson\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libblkmaker, used in some Bitcoin-related software.","last_modified":"2016-12-02T10:22:34Z","is_beginner":false,"id":5665364889305088,"categories":[1],"external_url":"https://github.com/bitcoin/libblkmaker"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to improve the management of URLs in the chat window. Currently, a click (with any mouse button) will open the URL in a browser. The required improvements are:\n- When the cursor hovers the URL, it should change to a different one (as it happens in the web browser)\n- When right clicking the URL, instead of opening it, there should be a pop-up menu allowing at least to open the URL or copy it to clipboard\n- When left clicking, it should open as it does now.","tags":["jabber4haiku","xmpp","c++","url management","chat"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP Client - Better URL management","last_modified":"2016-12-22T13:22:21Z","is_beginner":false,"id":5665792238551040,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/6"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Slayer** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will open new tickets for each bug on there (https://github.com/HaikuArchives/Slayer/issues).\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test Slayer for Bugs and Issues.","last_modified":"2016-12-22T10:25:15Z","is_beginner":false,"id":5666227909296128,"categories":[4],"external_url":"https://github.com/HaikuArchives/Slayer/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Much like the [powerful scripting system](https://en.wikipedia.org/wiki/AppleScript) on MacOS, Haiku also has its own equally powerful [scripting system](https://www.haiku-os.org/files/Programming_with_Haiku_Lesson_18.pdf), however the MacOS also has the [Apple Automator](https://en.wikipedia.org/wiki/List_of_macOS_components#Automator) application that allows people to make use of this system using the *graphical user interface* for automating tasks without knowledge of programming or scripting languages.  This can create some [very useful workflows](https://computers.tutsplus.com/tutorials/10-awesome-uses-for-automator-explained--mac-15845) that can really cut down laborious tasks like resizing and cropping a set of 500 photos.\n\nFor this first task you need to code a non-functional UI for the application, where you prove that you understand application scripting, Haiku's API, the *hey* command line application and Haiku's datastream translation (the TranslationKit).\n\nLinks:\n\n* [Automator developer guide](https://developer.apple.com/library/content/documentation/AppleApplications/Conceptual/AutomatorConcepts/Automator.html)\n* [Actiona](https://actiona.tools)\n* [Action(s)](http://app.jbbres.com/actions/)\n* [Macro Creator](http://www.macrocreator.com)\n* [Xnee](https://xnee.wordpress.com)","tags":["python","app","beapi","c++","automation"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","richienyhus@gmail.com","pulkomandy@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Code an Action Automation app (Part 1)","last_modified":"2016-12-23T23:17:10Z","is_beginner":false,"id":5666650695139328,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BeCJK** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own. You need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements. \n\nFor this task you will need to have some level of familiarity with either Chinese, Japanese or Korean writting.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["richienyhus@gmail.com","chirayudesai1@gmail.com","morrison@opencax.org"],"max_instances":3,"name":"Test BeCJK for Bugs and Issues.","last_modified":"2016-12-22T12:39:51Z","is_beginner":false,"id":5666948222287872,"categories":[4],"external_url":"https://bitbucket.org/Haiku-cn/becjk/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **Terminal** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","revolf@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Terminal","last_modified":"2016-12-22T10:19:20Z","is_beginner":false,"id":5667011908599808,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to write a recipe for libical.\n\nlibical is an implementation of the iCalendar protocols and protocol data units. It allows to download calendar information and share events with other people.\n\nYou can find the sources on the project homepage: https://libical.github.io/libical/\n\nYou can also browse the sources on GitHub: https://github.com/libical/libical\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libical/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","joel.r.sherrill@ieee.org","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libical.","last_modified":"2016-11-15T19:02:37Z","is_beginner":false,"id":5667045966348288,"categories":[1],"external_url":"https://github.com/libical/libical"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Shortcuts and key combinations](https://drive.google.com/open?id=0BzmDvOVZZ5mtYmFZRWd6SFhpSU0), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","exploratory-testing","shortcuts-and-key-combinations","haiku-nightly"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","codedeepanshu@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Haiku testing: Shortcuts and key combinations","last_modified":"2016-12-14T08:54:39Z","is_beginner":false,"id":5668070282493952,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to add support for the \"nested rosters\" extension https://xmpp.org/extensions/xep-0083.html.\nThis extension allows to define groups of contacts. Groups may be nested.\n\nTo complete this task, Jabber4Haiku should:\n- Download the nested rosters information and show the groups in the contact list,\n- Allow to move contacts from one group to another, add, delete and rename groups.","tags":["xml","xmpp","jabber4haiku","network","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP Client - Contact groups","last_modified":"2016-12-22T13:24:23Z","is_beginner":false,"id":5668903539703808,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/17"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nFor this task, you have to update a haikuporter recipe, which is a kind of script that automates this process. Depending on the targeted software you may need these skills:\n\nSome knowledge of C, C++, git and bash\nKnowledge of the GNU autotools and/or cmake\nThe package may require some patching to get it to work on Haiku\n\nInstall HaikuPorter and run haikuporter --lint\nThis will show a lot of recipes that are currently not working. For this task pick five of these \"broken\" recipes and convert them to have a properly formatted and working recipe that builds .hpkg files.\n\nBefore submitting your work, make sure to test your recipe by creating a hpkg package from it with haikuporter. Haiku's Expander app can open hpkg files to inspect their contents.\n\nTake care to include all required licenses and copyright entries.\n\nBe sure to update the SUMMARY to be 70 characters or less, and have a DESCRIPTION that is 2-4 sentences long that describes what the package is.  This is what shows up in HaikuDepot when users are looking to program to install.\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["recipes","c/c++","bash","haikuporter"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":4,"name":"Get the Lint out of 5 Haikuports recipes","last_modified":"2016-12-18T15:55:47Z","is_beginner":false,"id":5670956970278912,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Attributes](https://drive.google.com/open?id=0BzmDvOVZZ5mtWkU1U0RJQlhnX28), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","attributes","pre-beta","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Attributes","last_modified":"2016-12-06T16:39:30Z","is_beginner":false,"id":5673536299466752,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **farsi_fonts**.\n\nYou can find the recipe at haikuports/media-fonts/farsi_fonts.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nCompare this current farsi_fonts recipe to other known working font recipes to see what might be broken or missing in the recipe.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Fix recipe for farsi_fonts","last_modified":"2017-01-02T04:10:49Z","is_beginner":false,"id":5675721311649792,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Dynamate is a puzzle game for Haiku.\n\nCurrently, each level must be loaded from a file before playing. The goal of this task is to allow playing several levels in sequence, one after the other. This could be done for example by opening a directory or a query, rather than a file.","tags":["files","game","puzzle","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Dynamate: allow to play multiple levels in sequence","last_modified":"2016-12-12T20:55:09Z","is_beginner":false,"id":5676426986520576,"categories":[1],"external_url":"https://github.com/HaikuArchives/Dynamate/issues/3"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"Code a simple Photo post-production app (a red eye remover and other simple non destructive image editing)","tags":["python","photography","app","c++","graphics"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[Hold] Code a simple Photo post-production app","last_modified":"2016-12-22T11:41:41Z","is_beginner":false,"id":5679720817491968,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libcec**.\n\nWhen combined with the right hardware, libCEC allows to control a device with a TV remote control, utilising the existing HDMI cabling.\n\nYou can find the sources on the project homepage: http://libcec.pulse-eight.com/\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libcec/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libcec, a library to interact with HDMI devices. (potentially a hard task)","last_modified":"2017-01-11T20:08:29Z","is_beginner":false,"id":5681208621006848,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **SIDPlayer**.\n\nYou can find the sources on the project homepage: http://sidplayer.cebix.net\n\nYou should put the CL-Amp and SoundPlay plugins into their own standalone recipes.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for SIDPlayer, a SID Tune Replayer","last_modified":"2016-12-22T12:30:35Z","is_beginner":false,"id":5682645646180352,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/648"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **MidiKeyboard**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/MidiKeyboard\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MidiKeyboard","last_modified":"2017-01-12T09:26:12Z","is_beginner":false,"id":5683637506801664,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":7,"program_year":2016,"description":"The goal of this task is to write a recipe for efibootmgr, a tool to modify UEFI firmware boot manager variables.\n\nYou can find the sources on the project homepage: https://github.com/rhinstaller/efibootmgr\n\nThe recipe should be added to haikuports at haikuports/sys-boot/efibootmgr/.\n\n**Important:** This task depends on another one: _[Create a recipe for efivar](https://codein.withgoogle.com/tasks/5718010450935808/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-boot"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for efibootmgr. (requires efivar) [DOES THIS MAKE SENSE ON HAIKU?]","last_modified":"2016-11-28T20:30:53Z","is_beginner":false,"id":5686818787819520,"categories":[1,5],"external_url":"https://github.com/rhinstaller/efibootmgr"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libdmtx**.\n\nlibdmtx is a program and library for reading and writing Data Matrix barcodes, an alternative to QR codes.\n\nYou can find the sources on the project homepage: http://libdmtx.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libdmtx/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libdmtx, used in Data Matrix barcodes.","last_modified":"2016-12-02T01:55:11Z","is_beginner":false,"id":5688806552371200,"categories":[1],"external_url":"http://libdmtx.sourceforge.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"HaikuArchives (https://github.com/HaikuArchives) is a repository for Haiku software. A lot of projects are stored in this github organization.\n\nThe goal of this task is to pick one of these project and add a README page to it. The README should include at least a short description of the application, and a screenshot.\n\nIn most cases, you will first need to compile the application and get it running.\n\nSubmit your README as a pull request to the respective HaikuArchive project.","tags":["readme","haikuarchives","manual","screenshot"],"private_metadata":"","mentors":["waddlesplash@gmail.com","emrysnurmi@gmail.com","chirayudesai1@gmail.com","jessicalhamilton@gmail.com"],"max_instances":30,"name":"Write a README for an application at HaikuArchives","last_modified":"2016-12-22T11:07:06Z","is_beginner":false,"id":5688892183281664,"categories":[3,5],"external_url":"https://github.com/HaikuArchives"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **mpg321**, a popular command-line mp3 player.\n\nYou can find the sources on the project homepage: http://mpg321.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/media-sound/mpg321/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","media-sound","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","chirayudesai1@gmail.com","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for mpg321, a command line mp3 player.","last_modified":"2016-12-01T02:41:57Z","is_beginner":false,"id":5688983048683520,"categories":[1],"external_url":"http://mpg321.sourceforge.net/"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"Inspiration:\n\n* [​Apple Calendar](https://en.wikipedia.org/wiki/Calendar_(Apple))","tags":["python","app","personal calendar","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[Hold] Code a Personal Calendar","last_modified":"2016-12-22T11:42:36Z","is_beginner":false,"id":5689604443209728,"categories":[1,2,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Your task is to write a so-called recipe that is used to automatically build a package from the source code of a given open source program. The target for this one is up to you.  Pick a possible target app from this list and let us know which one you plan on working on: https://github.com/haikuports/haikuports/wiki/GoogleCodeInIdeas2016\n\nPlease bear in mind that the list in that wiki might not be up-to-date, so you should _always_ refer to the HaikuPorts tree and to the list of \"_Create a recipe for ..._\" tasks.\n\n**Therefore, before you claim this task for writing a new recipe, please make sure that the recipe you chose does not _already_ have its _own_ task. If that's the case then you should claim that task, instead of this one.**\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nAs programs have recipes written for them we will remove them as potential target from the list.  No duplicate recipes for the same program will be accepted.~~","tags":["haikuports","porting","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","emrysnurmi@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":10,"name":"Create a recipe to build a new package (1)","last_modified":"2016-12-22T13:04:02Z","is_beginner":false,"id":5690906724270080,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The game [Rocks 'n' Diamonds](https://www.artsoft.org/) needs an icon. You'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/).\n\nPlay the game a few times to get an idea of how the icon should look like. Submit the icon as Icon-O-Matic file and PNG. \nYou should open a pull request to haikuports at haikuports/games-arcade/rocksndiamonds with the .hvif and .rdef files.","tags":["graphic design","icon","games","artwork"],"private_metadata":"","mentors":["begasus@gmail.com","humdingerb@googlemail.com","adrianarroyocalle@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create icon for Rocks 'n' Diamonds","last_modified":"2016-12-24T21:10:14Z","is_beginner":false,"id":5691348592099328,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **pkcs11-helper**.\n\npkcs11-helper is a library that simplifies the interaction with PKCS11 providers for end-user applications using a simple API and optional OpenSSL engine.\n\nYou can find the sources on the project homepage: https://github.com/OpenSC/pkcs11-helper\n\nThe recipe should be added to haikuports at haikuports/dev-libs/pkcs11-helper/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for pkcs11-helper. (probably a hard task)","last_modified":"2016-12-19T18:46:13Z","is_beginner":false,"id":5692198905446400,"categories":[1],"external_url":"https://github.com/OpenSC/pkcs11-helper"},{"status":1,"time_to_complete_in_days":6,"program_year":2016,"description":"The goal of this task is to write a recipe for refind.\n\nr**EFI**nd is a UEFI Boot Manager by Rod Smith.\n\nYou can find the sources on the project homepage: http://www.rodsbooks.com/refind/\n\nThe recipe should be added to haikuports at haikuports/sys-boot/refind/.\n\n**Important:** This task depends on two other tasks: _[Create a recipe for gnu-efi](https://codein.withgoogle.com/tasks/5709557686861824/)_ and _[Create a recipe for efibootmgr](https://codein.withgoogle.com/tasks/5686818787819520/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-boot"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for refind. (needs gnu-efi and efibootmgr) [DOES THIS MAKE SENSE ON HAIKU?]","last_modified":"2016-11-28T20:19:27Z","is_beginner":false,"id":5693119337070592,"categories":[1,5],"external_url":"http://www.rodsbooks.com/refind/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to pick better colors for the contacts in the contact list. The current ones are a bit unusual.\n\n- Away users should become orange,\n- \"Do not disturb\" users should becomre red,\n- Offline users should become grey","tags":["jabber4haiku","xmpp","ui","c++","graphics"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP Client - Contact color changes","last_modified":"2016-12-22T13:23:35Z","is_beginner":false,"id":5693882264190976,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/7"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The game HexVexed needs an icon, see [issue #3](https://bitbucket.org/scottmc/hexvexed/issues/3/need-hexagon-tile-icon). You'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. The icon should show a hexagon tile instead of the current square. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/).\n\nAlso missing are two other graphics, see [issue #15](https://bitbucket.org/scottmc/hexvexed/issues/15/need-new-graphic-images-for-about-box-and). You can use WonderBrush under Haiku for these, you can install it using Haiku Depot.\n\nPlay the game a few times to get a feel for the tiles and what it should look like. The about box and winning screen images should be the same size as the current ones.\n\nSubmit the icon as Icon-O-Matic file and PNG, the other graphics as PNG, attached these to the two related open issues.","tags":["graphic design","icon-o-matic","icon","artwork"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create needed artwork for HexVexed game","last_modified":"2016-12-22T10:22:07Z","is_beginner":false,"id":5694087214661632,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **freedroid**.\n\nYou can find the recipe at haikuports/games-rpg/freedroid.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","games"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Fix recipe for freedroid","last_modified":"2017-01-02T04:11:35Z","is_beginner":false,"id":5695220463173632,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **cnf**.\n\nYou can find the recipes at haikuports/dev-python/cnf and haikuports/app-shells/command_not_found.\n\nThe fixed recipes should be added as pull request to haikuports at the same locations.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","python"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","jackjrabbit@gmail.com"],"max_instances":1,"name":"Fix recipes for cnf (command not found)","last_modified":"2017-01-02T04:09:26Z","is_beginner":false,"id":5695827932610560,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"Code an Advanced Download Manager\n\n​have a look at [iGetter](http://www.igetter.net/iGetter.html) and [FOLX]( http://mac.eltima.com/download-manager.html) for ideas on features and UI that you might want to use.","tags":["python","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[Hold] Code an Advanced Download Manager","last_modified":"2016-11-21T21:31:17Z","is_beginner":false,"id":5697873094115328,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **Icon-O-Matic** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Icon-O-Matic","last_modified":"2016-12-27T20:39:45Z","is_beginner":false,"id":5699156584693760,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **CriticalMass** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will open new tickets for each bug on there (https://github.com/pulkomandy/critical-mass/issues).\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","emrysnurmi@gmail.com","chirayudesai1@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test CriticalMass for Bugs and Issues.","last_modified":"2016-11-26T20:12:38Z","is_beginner":false,"id":5699474814926848,"categories":[4],"external_url":"https://github.com/pulkomandy/critical-mass/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"This task will introduce you to Haiku.\n\nHaiku is an operating system (like Windows, MacOS or Linux). Most of our tasks require running Haiku instead of one of these other operating systems. You can do this in a virtual machine, so you don't have to replace the system on your computer.\n\nThis task will guide you through the steps to get Haiku running, and how to use it.\n\n[https://dev.haiku-os.org/wiki/GoogleCodeInTaskInstallHaiku]","tags":["screenshot","install","virtualbox","vmware","haiku"],"private_metadata":"","mentors":["scottmc2@gmail.com","adrianarroyocalle@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com","joel.r.sherrill@ieee.org","hannahypan@gmail.com"],"max_instances":200,"name":"[New to Haiku? Do this one first] Install and Run Haiku","last_modified":"2016-12-22T12:32:03Z","is_beginner":true,"id":5699798581641216,"categories":[2,3,4,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Filetypes](https://drive.google.com/open?id=0BzmDvOVZZ5mteEVpZXpyTTVYUmc), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","filetypes","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Filetypes","last_modified":"2016-12-06T16:44:22Z","is_beginner":false,"id":5700052085374976,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"[​RemoteDesktop](https://www.haiku-os.org/node/6007)","tags":["remote desktop","ui","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a graphical interface for Haiku's RemoteDesktop","last_modified":"2016-12-22T11:41:14Z","is_beginner":false,"id":5702487633821696,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **gif2apng**, a tool to convert GIF images to the APNG format.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/gif2apng/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/gif2apng/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for gif2apng","last_modified":"2016-11-30T08:41:25Z","is_beginner":false,"id":5705594774224896,"categories":[1],"external_url":"https://sourceforge.net/projects/gif2apng/"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **yaddns**.\n\nYaddns is a small dynamic dns client with multiple servers support and a high flexibility.\n\nYou can find the sources on the project homepage: https://yaddns.github.io/\n\nYou can also browse the sources on GitHub: https://github.com/yaddns/yaddns/\n\nThe recipe should be added to haikuports at haikuports/net-dns/yaddns/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","bvitruvio@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for yaddns, a dyndns client written in C.","last_modified":"2017-01-06T20:33:55Z","is_beginner":false,"id":5706463699795968,"categories":[1,5],"external_url":"https://yaddns.github.io/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **TimeTracker** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["richienyhus@gmail.com","codedeepanshu@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test TimeTracker for Bugs and Issues.","last_modified":"2016-12-14T08:54:47Z","is_beginner":false,"id":5707389634347008,"categories":[4],"external_url":"https://github.com/HaikuArchives/TimeTracker/issues"},{"status":1,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libykneomgr**, Yubico's C Library for the YubiKey NEO Manager.\n\nYou can find the sources on the project homepage: https://github.com/Yubico/libykneomgr\n\nThe recipe should be added to haikuports at haikuports/sys-auth/libykneomgr/.\n\n**Important:** This task depends on two other tasks: _\"[Create a recipe for pcsc-lite](tasks/5759670291529728/)\"_ and _\"[Create a recipe for ccid](tasks/5364148632289280/)\"_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-auth"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libykneomgr. (requires pcsc-lite and ccid)","last_modified":"2016-12-04T23:52:27Z","is_beginner":false,"id":5707645621108736,"categories":[1,5],"external_url":"https://github.com/Yubico/libykneomgr"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Preferences (session 3)](https://drive.google.com/open?id=0BzmDvOVZZ5mtR0VOcnVfckFKLXM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","preferences"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Preferences (session 3)","last_modified":"2016-12-06T16:38:45Z","is_beginner":false,"id":5708408615337984,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Applications (session 1)](https://drive.google.com/open?id=0BzmDvOVZZ5mtOG5ZTy1lYmJJcWM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","applications","pre-beta","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Applications (session 1)","last_modified":"2016-12-27T01:09:29Z","is_beginner":false,"id":5708751138979840,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for gnu-efi.\n\ngnu-efi is useful for developing EFI applications for ARM-64, ARM-32, x86_64, IA-64 (IPF), and IA-32 (x86) platforms using the GNU toolchain and the EFI development environment.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/gnu-efi/\n\nThe recipe should be added to haikuports at haikuports/sys-boot/gnu-efi/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-boot"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for gnu-efi. [PROBABLY A HARD TASK]","last_modified":"2016-12-31T20:56:59Z","is_beginner":false,"id":5709557686861824,"categories":[1,5],"external_url":"https://sourceforge.net/projects/gnu-efi/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **ThemeManager** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["valetolpegin@gmail.com","richienyhus@gmail.com","humdingerb@googlemail.com","revolf@gmail.com"],"max_instances":1,"name":"Test ThemeManager for Bugs and Issues.","last_modified":"2016-12-22T11:07:50Z","is_beginner":false,"id":5712343342252032,"categories":[4],"external_url":"https://github.com/HaikuArchives/HaikuThemeManager/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Queries](https://drive.google.com/open?id=0BzmDvOVZZ5mtc011NW5IYlBZNGM), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","queries"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","humdingerb@googlemail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Queries","last_modified":"2016-11-28T01:41:25Z","is_beginner":false,"id":5712744787476480,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"[We have this as a GSoC idea! It is way too big for GCI. Split it in smaller parts with more guidance on what the result for each part should be: showing the commit log, showing the status of modified files, showing diffs, etc.]\n\nWe already have [one for svn](https://github.com/HaikuArchives/MoleSvn), but we could borrow code from it (it's uses a zlib/libpng license) in order to write a git or hg version. Your first task is to compile and test MoleSvn, and then report any bugs or issues to its github page. Also investigate it's source code and report back here whether it is suitable to fork it into a new MoleGit (or MoleHg) application or whether it is completely non-functional and a complete mess. \n\nBy doing this, we can ascertain whether we can use the code or whether we need to start from scratch (in the next tasks).\n\nInfluence:\nhttps://www.sourcetreeapp.com/\nhttps://tortoisegit.org/","tags":["python","version control system","frontend","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD - see description] Code a Graphical version control system frontend","last_modified":"2016-12-22T11:37:16Z","is_beginner":false,"id":5712917022375936,"categories":[1,2,5],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"The goal of this task is to write a recipe for libyubikey.\n\nlibyubikey is Yubico's C library for YubiKey devices. These are tokens used to replace passwords in a more secure way.\n\nYou can find the sources on the project homepage: https://github.com/Yubico/yubico-c\n\nThe recipe should be added to haikuports at haikuports/sys-auth/libyubikey/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-auth"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libyubikey.","last_modified":"2016-11-15T18:55:16Z","is_beginner":false,"id":5713880303009792,"categories":[1,5],"external_url":"https://github.com/Yubico/yubico-c"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will port **libdiscid** to Haiku, adding proper ioctl support for reading the CD TOC.\n\nYou might check also the sources of our [cddb_lookup](http://cgit.haiku-os.org/haiku/tree/src/bin/cddb_lookup/cddb_lookup.cpp) tool which reads attributes from cddafs instead.\n\nYour port should be submitted upstream as a pull-request to their github.\n\nOnce this task is finished, you might wish to claim another task: \"_[Create a recipe for libdiscid.](https://codein.withgoogle.com/tasks/5068814567866368/)_\"","tags":["porting","ioctl","media-libs","metabrainz"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","jessicalhamilton@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Port libdiscid","last_modified":"2016-11-28T19:44:28Z","is_beginner":false,"id":5714500892229632,"categories":[1],"external_url":"https://github.com/metabrainz/libdiscid"},{"status":1,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for u-boot-tools, a set of utilities for the U-Boot bootloader.\n\nYou can find the sources on the project homepage: http://www.denx.de/wiki/U-Boot/WebHome\n\nThe recipe should be added to haikuports at haikuports/dev-embedded/u-boot-tools/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-embedded"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for u-boot-tools. [DOES THIS MAKE SENSE ON x86?]","last_modified":"2016-11-19T02:02:55Z","is_beginner":false,"id":5717644841844736,"categories":[1,5],"external_url":"http://www.denx.de/wiki/U-Boot/WebHome"},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **efivar**.\n\nefivar is a set of tools and libraries to manipulate EFI variables on computers adhering to the Unified Extensible Firmware Interface (UEFI).\n\nYou can find the sources on the project homepage: https://github.com/rhinstaller/efivar\n\nThe recipe should be added to haikuports at haikuports/sys-libs/efivar/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for efivar. [PROBABLY A VERY HARD TASK]","last_modified":"2017-01-04T17:51:03Z","is_beginner":false,"id":5718010450935808,"categories":[1,5],"external_url":"https://github.com/rhinstaller/efivar"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **cutecom**.\n\nCuteCom is a graphical serial terminal.\n\nYou can find the sources on the project homepage: http://cutecom.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/net-dialup/cutecom/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","net-dialup"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for cutecom.","last_modified":"2017-01-04T21:23:23Z","is_beginner":false,"id":5720753324425216,"categories":[1,5],"external_url":"http://cutecom.sourceforge.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Boot Loader](https://drive.google.com/open?id=0BzmDvOVZZ5mtWlRpN0RZeHI5T1k), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","boot-loader"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Boot Loader","last_modified":"2016-12-06T16:40:06Z","is_beginner":false,"id":5723106396078080,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **CapitalBe** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/CapitalBe/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","morrison@opencax.org","richienyhus@gmail.com"],"max_instances":1,"name":"Test CapitalBe for Bugs and Issues.","last_modified":"2016-12-14T08:55:02Z","is_beginner":false,"id":5725788468936704,"categories":[4],"external_url":"https://github.com/HaikuArchives/CapitalBe/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **UberTuber** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/humdingerb/ubertuber) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","joel.r.sherrill@ieee.org","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test UberTuber for Bugs and Issues.","last_modified":"2016-12-12T17:55:09Z","is_beginner":false,"id":5727084743753728,"categories":[4],"external_url":"https://github.com/humdingerb/ubertuber/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nThe Makefile of many projects include a special target, often called \"check\" or \"test\", which allows to launch some tests written by the upstream author.\nThe --test option of haikuporter allows to launch such tests, provided a TEST function is defined in the recipe with the appropriate call, e.g. a \"make check\" \n\nFor this task, you have to identify 10 recipes for which the source tarball comes with a Makefile that provides a test target (or equivalent) but which is unknown to haikuporter due to the lack of a TEST function in the recipe.\nThen, for these recipes that are either missing the TEST function or have one which is incorrect, you will add it (or fix it), and test that it is working correctly.\n\nReminder: To use the \"--test\" option of haikuporter you first need to build that recipe.\n\nPlease test all your changes before you submit your work. Adding a test block to a recipe is not hard. What consumes time is to test that everything is working. Also, please do not assume that every test target is called \"check\".\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","bash","c++"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Add a TEST function to 10 Haikuports recipes","last_modified":"2016-12-22T12:35:46Z","is_beginner":false,"id":5728926143873024,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **MeV** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/MeV/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["chirayudesai1@gmail.com","bvitruvio@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test MeV for Bugs and Issues.","last_modified":"2016-12-22T12:46:07Z","is_beginner":false,"id":5728956275752960,"categories":[4],"external_url":"https://github.com/HaikuArchives/MeV/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **PecoRename** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":[],"private_metadata":"","mentors":["morrison@opencax.org","hannahypan@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test PecoRename for Bugs and Issues.","last_modified":"2016-12-14T08:55:11Z","is_beginner":false,"id":5730310532628480,"categories":[4],"external_url":"https://github.com/HaikuArchives/PecoRename/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Tipster (https://github.com/HaikuArchives/Tipster) is an application that displays tips about Haiku usage, to let users discover some useful shortcuts and new ways to do things.\n\nThe goal of this task is to fix a bug in Tipster (from the list here: https://github.com/HaikuArchives/Tipster/issues).\n\nTo complete this task you will need to:\n- Download and compile Tipster's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Tipster repository on github so your changes are integrated.","tags":["tipster","c++","bugs","issues"],"private_metadata":"","mentors":["valetolpegin@gmail.com","emrysnurmi@gmail.com","humdingerb@googlemail.com","revolf@gmail.com"],"max_instances":4,"name":"Tipster - Fix an issue","last_modified":"2016-12-22T13:13:41Z","is_beginner":false,"id":5730834283757568,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Tipster/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to compile BeBattle and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["abandonware","c++","build system"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeBattle to run on Haiku","last_modified":"2017-01-02T22:15:20Z","is_beginner":false,"id":5732096892993536,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeBattle"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"PVS is a static analysis tool to detect bugs and dubious programming practises in C++ software. The tool is not publicly available, but they have made a run on the Haiku code base and reported us all the issues they found.\n\nThe goal if this task is to examine one of the issues reported during this scan (http://pulkomandy.github.io/) and make a patch to resolve it. You will have to submit your patch to the Haiku bugtracker and mention the PVS issue number (in the \"DefaultOrder\" column of the list).\n\nNote: ./src/bin/coreutils issues are to be ignored. Same for ./src/add-ons/kernel/bus_managers/acpi/acpica or ./src/add-ons/kernel/drivers/network/*/dev/","tags":["c++","security","bugs","analysis"],"private_metadata":"","mentors":["pulkomandy@gmail.com","revolf@gmail.com","emrysnurmi@gmail.com","bvitruvio@gmail.com","jessicalhamilton@gmail.com","jeromeduval@gmail.com"],"max_instances":100,"name":"Haiku - Fix an issue detected by PVS Studio","last_modified":"2016-11-25T12:22:13Z","is_beginner":false,"id":5734676400439296,"categories":[1,4,5],"external_url":"http://pulkomandy.github.io"},{"status":1,"time_to_complete_in_days":5,"program_year":2016,"description":"The design for Haiku's web page at www.haiku-os.org was done a long time ago. It is not responsive and does not reflect todays web standards for a nice web page.\n\nThe goal of this task is to make a proposal for a new design for the Haiku website (www.haiku-os.org). It should keep the website organization and contents, but package it in a different look.","tags":["web","design","css"],"private_metadata":"","mentors":["waddlesplash@gmail.com","valetolpegin@gmail.com","richienyhus@gmail.com"],"max_instances":5,"name":"[HOLD - Not convinced we want to open this to students unless all assigned mentors and Haiku web team are in agreement] Web Site redesign","last_modified":"2016-11-18T23:13:02Z","is_beginner":false,"id":5735427214409728,"categories":[2,5],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **Mail** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Mail","last_modified":"2017-01-04T17:44:55Z","is_beginner":false,"id":5736271477473280,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Eventual is a personal time management system for Haiku.\n\nThe goal of this task is to compile Eventual and make sure it runs correctly on a recent version of Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instruction\n* Adding to its bugtracker any obvious bugs you come across while completing this task\n* A screenshot of the application running on Haiku","tags":["abandonware","c++","build system"],"private_metadata":"","mentors":["waddlesplash@gmail.com","valetolpegin@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get Eventual to run on Haiku [Potentially a Hard task]","last_modified":"2017-01-04T17:57:13Z","is_beginner":false,"id":5738941594468352,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/Eventual"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Finish the network VirtIO driver for Haiku\n[Ticket on subject](https://dev.haiku-os.org/ticket/9800)","tags":["virtio","driver","network","advanced"],"private_metadata":"","mentors":["jeromeduval@gmail.com","pulkomandy@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Finish the network VirtIO driver for Haiku","last_modified":"2016-12-22T11:16:43Z","is_beginner":false,"id":5739723121229824,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libykclient**.\n\nlibykclient is Yubico's client C library for YubiKey devices.\n\nYou can find the sources on the project homepage: https://github.com/Yubico/yubico-c-client\n\nThe recipe should be added to haikuports at haikuports/sys-auth/libykclient/.\n\nHint: This recipe requires libyubikey, which has been recently added.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-auth"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for libykclient.","last_modified":"2016-12-18T05:22:25Z","is_beginner":false,"id":5742269768400896,"categories":[1,5],"external_url":"https://github.com/Yubico/yubico-c-client"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **DeskNotes** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/DeskNotes/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","jessicalhamilton@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test DeskNotes for Bugs and Issues.","last_modified":"2016-12-10T11:12:29Z","is_beginner":false,"id":5742575247949824,"categories":[4],"external_url":"https://github.com/HaikuArchives/DeskNotes/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"FTPPositive is an FTP client for Haiku. It allows uploading and downloading files from servers.\n\nPick one of the open issues for FtpPositive and solve it.\n\nhttps://github.com/HaikuArchives/FtpPositive\nhttps://github.com/HaikuArchives/FtpPositive/issues","tags":["ftp","ui","bugs","c++","networking"],"private_metadata":"","mentors":["kacperkasper@gmail.com","adrianarroyocalle@gmail.com","hannahypan@gmail.com"],"max_instances":2,"name":"Fix a bug in FtpPositive","last_modified":"2016-12-22T13:16:28Z","is_beginner":false,"id":5743427396304896,"categories":[1,2,4],"external_url":"https://github.com/HaikuArchives/FtpPositive/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BeMines** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeMines/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","bugs"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeMines for Bugs and Issues.","last_modified":"2016-12-10T11:12:43Z","is_beginner":false,"id":5745105352785920,"categories":[4],"external_url":"https://github.com/HaikuArchives/BeMines/issues"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **stockfish**.\n\nStockfish is one of the strongest chess engines in the world. It is also much stronger than the best human chess grandmasters.\n\nYou can find the sources on the project homepage: https://stockfishchess.org/\n\nYou can also browse the sources on GitHub: https://github.com/official-stockfish/Stockfish\n\nThe recipe should be added to haikuports at haikuports/games-board/stockfish/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","games-board","patching"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","joel.r.sherrill@ieee.org","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for stockfish, a chess engine claimed to be the strongest in the world.","last_modified":"2017-01-06T20:35:02Z","is_beginner":false,"id":5746200200347648,"categories":[1],"external_url":"https://stockfishchess.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **odt2txt**, a simple converter from OpenDocument Text to plain text.\n\nYou can find the sources on the project homepage: https://github.com/dstosberg/odt2txt/\n\nThe recipe should be added to haikuports at haikuports/app-text/odt2txt/.\n\nDependencies: libzip,  zlib and libiconv (optionally).\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","app-text","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","emrysnurmi@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for odt2txt, a simple converter from OpenDocument Text to plain text","last_modified":"2016-12-05T18:28:14Z","is_beginner":false,"id":5747245326532608,"categories":[1],"external_url":"https://github.com/dstosberg/odt2txt/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Applications (session 2)](https://drive.google.com/open?id=0BzmDvOVZZ5mtS0lRd3c3bWlaNzA), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","applications","pre-beta","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com"],"max_instances":1,"name":"Haiku testing: Applications (session 2)","last_modified":"2016-12-06T16:41:46Z","is_beginner":false,"id":5752808242413568,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"Reuse Google's Breakpad (MIT)\n\nInspiration:\n* Apple Crash Reporter,","tags":["breakpad","crash reporter","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a Graphical Crash Reporter","last_modified":"2016-12-22T11:40:48Z","is_beginner":false,"id":5755231543492608,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you need to complete the [VMware Fusion article](https://github.com/haiku/website/blob/master/content/guides/virtualizing/vmware-fusion.md).\n\nYou will be installing a recent [Haiku nightly image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid/) and fill out the missing to-do sections.\n\nThe updated article should be sent as pull request to our [website rewrite project](https://github.com/haiku/website).","tags":["vmware fusion","writing","vmware","docs","article"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Complete the VMware Fusion article","last_modified":"2016-12-31T23:55:41Z","is_beginner":false,"id":5755461540249600,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Haiku has a \"MIDI kit\" which allows to connect MIDI devices and applications for music making.\n\nThe goal of this task is to develop an application that connects to the MIDI kit that will log all MIDI events received. It will allow to debug problems with MIDI devices or apps not communicating with each other.","tags":["event logger","music","c++","midi"],"private_metadata":"","mentors":["waddlesplash@gmail.com","pulkomandy@gmail.com","bvitruvio@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"MIDI event logger","last_modified":"2016-12-22T12:54:41Z","is_beginner":false,"id":5755639598940160,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **SoundRecorder** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for SoundRecorder","last_modified":"2017-01-04T18:10:12Z","is_beginner":false,"id":5757730543370240,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"​[Scripting](https://www.haiku-os.org/documents/dev/using_scripting_in_haiku) is used in Haiku to interact programmatically with applications, like with the hey CLI tool. All apps already support basic scripting through the App Kit, but some would benefit from more specific scripting interfaces.\n\nMake Magnify controllable by scripting, like zoom factor, and other actions.","tags":["​scripting","ui","c++","magnify"],"private_metadata":"","mentors":["waddlesplash@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Add a scripting interface to Magnify to make it more useful","last_modified":"2016-12-22T12:50:54Z","is_beginner":false,"id":5758099709231104,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **pcsc-lite**, a PC/SC Architecture smartcard middleware library which allows to read and use smartcards for cryptography.\n\nYou can find the sources on the project homepage: https://pcsclite.alioth.debian.org/pcsclite.html\n\nThe recipe should be added to haikuports at haikuports/sys-apps/pcsc-lite/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","sys-apps"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","fbrosson2014-gci@yahoo.fr","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for pcsc-lite.","last_modified":"2017-01-11T20:14:20Z","is_beginner":false,"id":5759670291529728,"categories":[1,5],"external_url":"https://pcsclite.alioth.debian.org/pcsclite.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Twitcher](https://drive.google.com/open?id=0BzmDvOVZZ5mtMWFoLTBUUWJkcGs), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","twitcher","exploratory-testing","haiku-nightly"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Twitcher","last_modified":"2016-12-06T16:37:35Z","is_beginner":false,"id":5759733877178368,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this GCI task you'll be tasked to perform general regression testing of the Haiku operating system targeting a specified area using the exploratory testing approach.\n\n1. Read over the [GCI task instructions](https://drive.google.com/open?id=0BzmDvOVZZ5mtdjIyNXhORzJMbzQ) PDF file, which can be found via the external link provided.\n2. Download the Session File for [Deskbar](https://drive.google.com/open?id=0BzmDvOVZZ5mtQkZZLWcyUXYxMEU), which can be found via the external link provided.\n3. Upload your testing results to the [Session Reports](https://drive.google.com/open?id=0BzmDvOVZZ5mtanVyMm8yTG1aMjg) folder when you've completed your task, which can be found via the external link provided.","tags":["qa","pre-beta","haiku-nightly","exploratory-testing","deskbar"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Haiku testing: Deskbar","last_modified":"2016-11-28T01:31:06Z","is_beginner":false,"id":5761820828631040,"categories":[4],"external_url":"https://drive.google.com/open?id=0BzmDvOVZZ5mtTlBQTE4zaENheDg"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Vision is an IRC client for Haiku\n\nPick one of the open issues for Vision solve it.\n- https://github.com/HaikuArchives/Vision/\n- https://github.com/HaikuArchives/Vision/issues\n\nTo complete this task you will need to:\n- Download and compile Vision's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Vision repository on github so your changes are integrated.","tags":["vision","bugs","issues","irc client"],"private_metadata":"","mentors":["humdingerb@googlemail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix open issue in Vision","last_modified":"2016-12-22T13:12:38Z","is_beginner":false,"id":5763028519747584,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **CharacterMap** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for CharacterMap","last_modified":"2016-12-22T10:52:25Z","is_beginner":false,"id":5765814477127680,"categories":[3,4],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"All modern operating systems now come bundled with a basic level of accessibility features, namely a screenreader. While these features are out of scope for Haiku R1, these features should be within the scope of Haiku R2.\n\nScreen readers are made up of three parts:\n\n* A backend Speech synthesis system\n* An API for 1stparty & 3rdparty access to the Speech synthesis library\n* An OS bundled screen reading utility for accessibility\n\nFor instance, ​Orca is the Gnome screen reader that communicates with the Accessibility Toolkit via the AT-SPI API. In Android you have Google Text-to-Speech, which is used by Google Talkback to provide speech feedback on what is being enacted, displayed or selected. In Windows, Microsoft Narrator uses the Microsoft Speech API.\n\n[Ticket](https://dev.haiku-os.org/ticket/12804)","tags":["screen reader","accessibility","c++"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD] Code a ScreenReader for Haiku","last_modified":"2016-12-22T11:40:04Z","is_beginner":false,"id":5767924681801728,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to be running a recent nightly build of x86_64 Haiku, either on real hardware or in a VM.  You will also need to have Haikuporter installed and able to build recipes.  For this task you will find 5 different recipes which have the ARCHITECHTURES=\"\"  contain an unknown state for x86_64, this would be indicated by a ? before the name, as in \"?x86_64\".  Remove the ? and see if the recipe will build or not.  For ones that work, leave the ? out.  For ones that fail, take notes and/or screenshots of where they are failing.  Change the recipes for those that fail to mark them as failing by changing them to have a ! in front, as in \"!x86_64\"\nThen submit a pull request with your 5 updated recipes.  For ones that fail open a new issue on Haikuports for each, stating that it fails to build on x86_64 and attach any screenshots or notes regarding your findings.","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":10,"name":"Check if 5 different recipes will build or not on Haiku x86_64 (2)","last_modified":"2017-01-07T08:49:30Z","is_beginner":false,"id":5784807642497024,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"A [2048](https://github.com/TwoFX/Haiku2048) clone was written during Google Code-In 2015.\n\nThe goal of this task is to add animations (see [issue #4](https://github.com/TwoFX/Haiku2048/issues/4) to the game (tiles, scores), so the gaming experience can be similar to the original [2048](https://github.com/gabrielecirulli/2048).\n\nYou must submit your work as a pull request to https://github.com/TwoFX/Haiku2048.","tags":["c++","animation","games","2048","games-puzzle"],"private_metadata":"","mentors":["waddlesplash@gmail.com","emrysnurmi@gmail.com","pulkomandy@gmail.com","humdingerb@googlemail.com","revolf@gmail.com"],"max_instances":1,"name":"Add animations to Haiku2048 game","last_modified":"2016-12-09T16:42:58Z","is_beginner":false,"id":5788284879896576,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application. \n\nYou must work from the application created in part 1: https://github.com/raefaldhia/Maps\n\nFor this second part, the goal is to get the downloaded map tile to display on screen (instead of saving it to disk). You will need to:\n- Open a window\n- Decode the downloaded tile using the translation kit to create a BBitmap\n- Display the BBitmap onto a view inside the window.\n\nThe task will continue with part 3: management of zooming and panning accross the map.","tags":["openstreetmap","map","geo","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","adrianarroyocalle@gmail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Code a map application (Part 2)","last_modified":"2016-12-09T11:04:48Z","is_beginner":false,"id":5797651968688128,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **FairTrade**.\n\n**FairTrade** is a simple to use point of sale system and product management.\n\nYou can find the sources on the project homepage: https://github.com/czeidler/fairtrade\n\nThe recipe should be added to haikuports at haikuports/haiku-apps/fairtrade/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sales","product management"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for FairTrade, a simple to use point of sale system for Haiku.","last_modified":"2016-12-29T23:27:17Z","is_beginner":false,"id":5806976359464960,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/734"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **HexVexed**.\n\n**HexVexed** is puzzle game for Haiku.\n\nYou can find the sources on the project homepage: https://bitbucket.org/scottmc/hexvexed\n\nThe recipe should be added to haikuports at haikuports/haiku-games/hexvexed/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com"],"max_instances":1,"name":"Create a recipe for HexVexed","last_modified":"2016-12-21T07:59:14Z","is_beginner":false,"id":5827236928159744,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **wavpack**.\n\nWavPack is a completely open audio compression format providing lossless, high-quality lossy, and a unique hybrid compression mode.\n\nYou can find the sources on the project homepage: http://wavpack.com/\n\nThe recipe should be added to haikuports at haikuports/media-sound/wavpack/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","media-sound","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","dcatthaiku@gmail.com","chirayudesai1@gmail.com"],"max_instances":1,"name":"Create a recipe for WavPack","last_modified":"2016-12-01T02:32:14Z","is_beginner":false,"id":5831644212625408,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **stegsnow**.\n\nstegsnow is a whitespace steganography hiding tool which conceals messages in ASCII text by appending whitespaces to the end of lines. Because spaces and tabs are generally not visible in text viewers, the message is effectively hidden from casual observers. And if the built-in encryption is used, the message cannot be read even if it is detected. \n\nYou can find the sources on the project homepage: http://www.darkside.com.au/snow/\n\nThe recipe should be added to haikuports at haikuports/app-crypt/stegsnow/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","emrysnurmi@gmail.com","chirayudesai1@gmail.com"],"max_instances":1,"name":"Create a recipe for stegsnow, a whitespace steganography hiding tool using text files.","last_modified":"2016-12-19T18:52:20Z","is_beginner":false,"id":5868251896610816,"categories":[1],"external_url":"http://www.darkside.com.au/snow/"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **beecrypt**, a general-purpose cryptography library.\n\nYou can find the sources on the project homepage: http://beecrypt.sourceforge.net/\n\nThe recipe should be added to haikuports at haikuports/dev-libs/beecrypt/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","dcatthaiku@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Create a recipe for beecrypt.","last_modified":"2017-01-06T20:32:25Z","is_beginner":false,"id":5869877004861440,"categories":[1],"external_url":"http://beecrypt.sourceforge.net/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeBuilder**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeBuilder\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","beos"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","valetolpegin@gmail.com","richienyhus@gmail.com","revolf@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Create a recipe for BeBuilder","last_modified":"2017-01-09T22:33:55Z","is_beginner":false,"id":5870577971625984,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The old BeOS composing app A'dam Music Composer won't build on Haiku. Fix it!\n\nIt's at https://github.com/HaikuArchives/AMC/","tags":["c++"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","pulkomandy@gmail.com","humdingerb@googlemail.com"],"max_instances":1,"name":"Fix the build of AMC","last_modified":"2017-01-11T18:51:58Z","is_beginner":false,"id":5883936729202688,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"A [2048](https://github.com/TwoFX/Haiku2048) clone was written during Google Code-In 2015.\n\n[2048's issue tracker](https://github.com/TwoFX/Haiku2048/issues) lists several bugs and enhancements that should be fixed/implemented. Take your pick! \n\nYou must submit your work as a pull request to https://github.com/TwoFX/Haiku2048.","tags":["games-puzzle","game","c++","2048"],"private_metadata":"","mentors":["waddlesplash@gmail.com","chirayudesai1@gmail.com","humdingerb@googlemail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Fix an issue of the game 2048 [1]","last_modified":"2016-12-22T10:49:07Z","is_beginner":false,"id":5884374723592192,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **gifsicle**.\n\nGifsicle is a command-line tool for creating, editing, and getting information about GIF images and animations.\n\nYou can find the sources on the project homepage: http://www.lcdf.org/~eddietwo/gifsicle/\n\nYou can also browse the sources on GitHub: http://github.com/kohler/gifsicle\n\nThe recipe should be added to haikuports at haikuports/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","kushalspidermansingh@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for gifsicle.","last_modified":"2016-11-30T09:00:59Z","is_beginner":false,"id":5902137678626816,"categories":[1],"external_url":"http://www.lcdf.org/~eddietwo/gifsicle/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to fix the recipe for BeBRexx. BeBRexx is a REXX language interpreter for BeOS and Haiku with native API integration.\n\nThere is already a recipe, but it currently does not build. The goal if this task is to investigate and fix the problems to get the REXX interpreter packaged and running.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","legacy","recipe","scripting","rexx"],"private_metadata":"","mentors":["waddlesplash@gmail.com","chirayudesai1@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Fix the recipe for BeBRexx","last_modified":"2016-12-18T08:37:08Z","is_beginner":false,"id":5905960004485120,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **Clockwerk** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs **or** find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["waddlesplash@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Test Clockwerk for Bugs and Issues","last_modified":"2016-12-22T12:39:05Z","is_beginner":false,"id":5912517272403968,"categories":[4],"external_url":"https://github.com/stippi/Clockwerk/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **NFTP**.\n\n**NFTP** is a text-mode ftp client\n\nYou can find the sources on the project homepage: http://www.ayukov.com/nftp/source-release.html\n\nHave look at this ticket on haikuports for more information: https://github.com/haikuports/haikuports/issues/738\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for NFTP, a text-mode ftp client for Haiku","last_modified":"2016-12-22T18:08:32Z","is_beginner":false,"id":5914487980818432,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/738"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task, you will need to run Haiku on a PC the has the hardware that is discussed in one of the open issues, you will NOT be able to do this task in a VM.  You will also need to know how to get Haiku up and running on real hardware.  Pick from one of the following, verify it and report your findings, whether you are able to confirm the discussed issue, or if it appears to have been fixed since it was first reported.\n\n[https://dev.haiku-os.org/ticket/9404]\n[https://dev.haiku-os.org/ticket/9833]\n[https://dev.haiku-os.org/ticket/5779]","tags":["qa","hardware","testing","bugs"],"private_metadata":"","mentors":["scottmc2@gmail.com","dcatthaiku@gmail.com","valetolpegin@gmail.com","humdingerb@googlemail.com"],"max_instances":3,"name":"Test Haiku on Hardware and verify if open issues still exist or not","last_modified":"2016-12-22T12:58:37Z","is_beginner":false,"id":5933567074893824,"categories":[4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to compile BeSol and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["besol","games","c++","build system"],"private_metadata":"","mentors":["begasus@gmail.com","waddlesplash@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeSol to run on Haiku","last_modified":"2017-01-03T19:20:33Z","is_beginner":false,"id":5934290732843008,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeSol"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **Magnify** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Magnify","last_modified":"2017-01-04T18:11:31Z","is_beginner":false,"id":5948486885310464,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **Debugger** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Debugger","last_modified":"2016-12-22T10:16:50Z","is_beginner":false,"id":5952531670761472,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **primesieve**.\n\nprimesieve is a program and C/C++ library to generate prime numbers.\n\nYou can find the sources on the project homepage: http://primesieve.org/\n\nYou can also browse the sources on GitHub: https://github.com/kimwalisch/primesieve\n\nThe recipe should be added to haikuports at haikuports/sci-libs/primesieve/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","sci-libs","patching","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","joel.r.sherrill@ieee.org","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for primesieve.","last_modified":"2016-12-19T18:44:02Z","is_beginner":false,"id":5958897718263808,"categories":[1],"external_url":"http://primesieve.org/"},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"The goal of this task is to write a recipe for mlucas.\n\nmlucas is a program for performing Lucas-Lehmer tests and sieve-based trial-factoring (TF) of prime-exponent Mersenne numbers. It works on both Intel/AMD processors as well as on non-x86-based processors.\n\nYou can find the sources on the project homepage: http://hogranch.com/mayer/README.html\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/mlucas.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for mlucas, a program to search Mersenne prime numbers.","last_modified":"2017-01-04T18:07:42Z","is_beginner":false,"id":5962042708066304,"categories":[1],"external_url":"http://hogranch.com/mayer/README.html"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"http://api.haiku-os.org","tags":["haiku-api","network kit","api","network"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","pulkomandy@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[Hold - needs a description of what to do] Write API documentation for Network Kit classes","last_modified":"2016-12-22T11:28:47Z","is_beginner":false,"id":5964246865149952,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Scooby is an email client that is meant to provide advanced features. It was originally developed for BeOS and currently does not run on Haiku.\n\nThe goal of this task is to research and fix the problems, and update the code as need to get it to compile and run on Haiku.\n\nThe current version of the sourcecode is available here: https://github.com/HaikuArchives/Scooby","tags":["debug","email client","build","c++","scooby"],"private_metadata":"","mentors":["waddlesplash@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Get Scooby running on Haiku","last_modified":"2016-12-22T12:58:12Z","is_beginner":false,"id":5967063424172032,"categories":[1,5],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"==== This needs a better description before posting ====\nImplement a console/serial VirtIO driver for Haiku","tags":["driver","serial","virtio","console","advanced"],"private_metadata":"","mentors":["jeromeduval@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"[HOLD] Implement a console/serial VirtIO driver for Haiku","last_modified":"2016-12-22T11:45:07Z","is_beginner":false,"id":5970937048465408,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **jigit**, a set of tools to work with jigdo files.\n\nJigdo files are files generated by the jigdo utility (see task _\"[Create a recipe for jigdo](tasks/4784071288815616/)\"_), which is used to distribute CD and DVD images.\n\nYou can find the sources on the project homepage: http://www.einval.com/~steve/software/JTE/\n\nYou can also browse the sources on https://git.einval.com/cgi-bin/gitweb.cgi?p=jigit.git\n\nThe recipe should be added to haikuports at haikuports/app-misc/jigit/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-misc"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","joel.r.sherrill@ieee.org","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for jigit","last_modified":"2017-01-11T20:09:23Z","is_beginner":false,"id":5976226703343616,"categories":[1],"external_url":"http://www.einval.com/~steve/software/JTE/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Stack & Tile is a new feature of Haiku's window managment.  Here's some links to videos of Stack & Tile:\n\nhttp://www.youtube.com/watch?v=ccniJHjo_Uw\n\nhttp://www.youtube.com/watch?v=4Y-6YmGd30A\n\n\nCreate a screencapture video showing the power of Stack & Tile. You should use a recent Haiku nightly image for this task.\n\nYou'll need a relatively fast computer and should limit screen resolution to 1024x768x32. Capturing Haiku running in a VM may work. If there are better alternatives (Haiku runs so much better on real hardware) that would be appreciated of course.\n\nBefore you start the actual screencapture, you should present a \"script\" for the demonstration. Explanations should be voiced over or, only if it isn't too much text, subtitled.","tags":[],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Make a video showing off Stack and Tile","last_modified":"2016-12-06T21:22:32Z","is_beginner":false,"id":5986096376709120,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for **libsodium**.\n\nSodium is a new, easy-to-use software library for encryption, decryption, signatures, password hashing and more.\n\nYou can find the sources on the project homepage: https://github.com/jedisct1/libsodium\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libsodium/.\n\nOnce this task is finished, you might wish to claim another task: \"_[Create a recipe for tox](https://codein.withgoogle.com/tasks/4557396907130880/)_\" which is waiting to be published if there is demand for it!\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":[],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","humdingerb@googlemail.com","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for libsodium, a modern and easy-to-use crypto library.","last_modified":"2016-11-29T17:15:56Z","is_beginner":false,"id":5991654527860736,"categories":[1],"external_url":"https://github.com/jedisct1/libsodium"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"[WaveView](https://github.com/aldeck/waveview) needs an icon. You'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/). \n\nBuild the application and run it, then see if you can come up with an icon to represent it.\nIcon should be submitted as an HVIF rdef file, png and as a .IOM file.\n\nhttps://github.com/aldeck/waveview/issues/1","tags":["icon-o-matic","hvif","design","icons"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create an icon for WaveView","last_modified":"2017-01-12T09:33:33Z","is_beginner":false,"id":5994067945062400,"categories":[2],"external_url":null},{"status":1,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **bzrtp**, an opensource implementation of [ZRTP](https://en.wikipedia.org/wiki/ZRTP) keys exchange protocol.\n\nYou can find the sources on the project homepage: http://www.linphone.org/\n\nYou can also browse the sources on GitHub: https://github.com/BelledonneCommunications/bzrtp\n\nThe recipe should be added to haikuports at haikuports/net-libs/bzrtp/.\n\n**Important:** This task depends on two other tasks: _\"[Create a recipe for mbedtls, a cryptographic library for embedded systems](tasks/6308451925884928/)\"_ and _\"[Create a recipe for bctoolbox, a library that allows to create and run audio and video streams.](tasks/5088733558734848/)\"_\nIt may also be made to depend on _\"[Create a recipe for bcunit, a lightweight system for writing, administering, and running unit tests in C.](tasks/4644535021862912/)\"_\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"[HOLD?] Create a recipe for bzrtp, an opensource implementation of ZRTP keys exchange protocol. (requires mbedtls and bctoolbox)","last_modified":"2016-12-06T15:24:03Z","is_beginner":false,"id":5999870605262848,"categories":[1],"external_url":"https://github.com/BelledonneCommunications/bzrtp"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **Vision** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","dcatthaiku@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Vision","last_modified":"2016-12-22T12:01:23Z","is_beginner":false,"id":6009021228122112,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you need to convert our **[​VMware Fusion](https://gist.github.com/richienyhus/03ed54d28d94d5da6e60513834910be3)** article to markdown and upload your work to our [website rewrite project](https://github.com/haiku/website).\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com).","tags":["article","markdown","html","vmware","writing"],"private_metadata":"","mentors":["waddlesplash@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Convert ​VMware Fusion article to markdown and update","last_modified":"2016-12-23T08:34:38Z","is_beginner":false,"id":6009094108348416,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **stegdetect**.\n\nstegdetect is an automated tool for detecting steganographic content in images.\n\nYou can find the sources on the project homepage: https://github.com/abeluck/stegdetect\n\nThe recipe should be added to haikuports at haikuports/app-crypt/stegdetect/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","joel.r.sherrill@ieee.org","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for stegdetect, a tool for detecting steganographic content in images.","last_modified":"2017-01-08T11:21:57Z","is_beginner":false,"id":6015302450020352,"categories":[1],"external_url":"https://github.com/abeluck/stegdetect"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **png2ico**, a utility to convert PNG files to Windows icon resource files.\n\nYou can find the sources on the project homepage: http://winterdrache.de/freeware/png2ico/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/png2ico/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for png2ico.","last_modified":"2016-12-04T20:59:15Z","is_beginner":false,"id":6028391362854912,"categories":[1],"external_url":"http://winterdrache.de/freeware/png2ico/"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"Haiku includes a audio player application called MediaPlayer, however Haiku currently has no open source music manager or jukebox application. A music manager that takes advantage of Haiku's unique attribute system to sort and filter songs would be very powerful.\n\nThe application should be able to filter music by song, artist, album, year of release, genre, mood and user rating.\n\nThere are a few prototypes that already exist on Haiku, so your first task is to test these applications to see if any of the code is usable or if we need to start from scratch. Report back here the status of each application and what you think we should do.\n\nFor Part 2 of this program, you will need to add support for actually playing a selected music track or playlist.\nhttps://github.com/raefaldhia/MusicManager/issues/7\nAdd code to be able to read the audio tags and display them and any cover art.\nhttps://github.com/raefaldhia/MusicManager/issues/8\nAlso write code to implement support for showing more attributes in the list, see https://github.com/raefaldhia/MusicManager/issues/9\n\nResults from Part 1 of the task can be found here:\nhttps://github.com/raefaldhia/MusicManager","tags":["audio","mp3","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com","waddlesplash@gmail.com","bvitruvio@gmail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Code a Music Manager (Part 2)","last_modified":"2017-01-02T22:12:58Z","is_beginner":false,"id":6036246436511744,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"There are currently 100+ open issues on HaikuPorts.  This task is to pick one of those and to fix it.\n\nhttps://github.com/haikuports/haikuports/issues\n\nWhen claiming this task, post a comment to let us know which one you plan to work on.","tags":["haikuports","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":20,"name":"Fix an open issue on HaikuPorts","last_modified":"2017-01-03T18:06:29Z","is_beginner":false,"id":6037861612650496,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to write a recipe for gimps, the Great Internet Mersenne Prime Search.\n\nYou can find the sources on the project homepage: http://www.mersenne.org/download/#source\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/gimps/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for gimps (Great Internet Mersenne Prime Search)","last_modified":"2017-01-04T17:53:38Z","is_beginner":false,"id":6058000867393536,"categories":[1,5],"external_url":"http://www.mersenne.org/"},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"The goal of this task is to write a recipe for ifuse.\n\nifuse is a fuse filesystem to access the contents of iOS devices.\n\nYou can find the sources on the project homepage: http://www.libimobiledevice.org/\n\nYou can also browse the sources on GitHub: https://github.com/libimobiledevice/ifuse\n\nThe recipe should be added to haikuports at haikuports/app-pda/ifuse/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-pda"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for ifuse (probably a hard task)","last_modified":"2016-12-19T18:23:49Z","is_beginner":false,"id":6080687555739648,"categories":[1],"external_url":"https://github.com/libimobiledevice/ifuse"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"https://veertu.com/","tags":["article","writing","veertu","mac os"],"private_metadata":"","mentors":["humdingerb@googlemail.com","jessicalhamilton@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"[HOLD - needs better description of what is expected] Write an article on how to run Haiku on Mac OS with veertu","last_modified":"2016-12-22T11:28:03Z","is_beginner":false,"id":6083701381267456,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing BeCasso for bugs and other issues for this task.\nYou can use haikuporter to build it.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find and report new bugs and create new enhancements.  This application will likely have several issues as it is an old BeOS program and very out of date.\n\nPlease report the issue here:\nhttps://github.com/orangejua/Becasso","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeCasso for Bugs and Issues.","last_modified":"2017-01-07T08:47:00Z","is_beginner":false,"id":6101617852022784,"categories":[2,3,4],"external_url":"https://github.com/orangejua/Becasso"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **DeeperPeople**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/DeeperPeople\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for DeeperPeople","last_modified":"2017-01-12T09:26:33Z","is_beginner":false,"id":6148336996319232,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **fdk-aac**.\n\nAdvanced Audio Coding (AAC) is the successor format to MP3.\n\nfdk-aac is the Fraunhofer AAC codec library.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/opencore-amr/\n\nThe recipe should be added to haikuports at haikuports/media-libs/fdk-aac/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","pulkomandy@gmail.com","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for fdk-aac, the Fraunhofer AAC codec library. (potentially a hard task)","last_modified":"2016-12-19T18:28:07Z","is_beginner":false,"id":6161188933074944,"categories":[1],"external_url":"https://github.com/haikuports/haikuports/wiki"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://dev.haiku-os.org/ticket/12249","tags":["development","article","unit testing","writing"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","pulkomandy@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write an article on how to use unit tests when developing Haiku","last_modified":"2016-12-22T12:23:12Z","is_beginner":false,"id":6167952734814208,"categories":[1,3],"external_url":"https://dev.haiku-os.org/ticket/12249"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"This is a research task in order to make a video (which will be a follow-up task), showing in detail how to use Icon-O-Matic to create Haiku vector icons.\n\nYou need a current [nightly Haiku image](http://download.haiku-os.org/nightly-images/x86_gcc2_hybrid) installed to work on it.\n\nYou should read the topic on [I-O-M in the user guide](https://www.haiku-os.org/docs/userguide/en/applications/icon-o-matic.html) while you make yourself familiar with the application. Nevertheless, you'll have questions while trying to figure everything out. Please join the [#haiku IRC channel](https://www.haiku-os.org/community/irc) to ask questions, and/or post in the [Haiku forums](https://discuss.haiku-os.org/) by creating *one* thread there, explaining your mission.\nYou can also comment here, of course, if you don't get the answers from those other channels.\n\nWhen you think you know enough to explain I-O-M to others, write a plain text document on how and what will be shown in the video demonstration. Present your document in another thread in the forums and ask for feedback. What feature is missing? Are there more questions that should be answered? etc.\n\nLink to your forum posts and attach your first draft document in a comment to this task as soon as you've created them.\n\nAlso create at least one semi-complex Haiku style icon using I-O-M and submit a png export of it as well. Here are the Haiku [Icon Guidelines](https://www.haiku-os.org/development/icon-guidelines)","tags":["icon-o-matic","video","tutorial","icons"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":3,"name":"Research Icon-O-Matic to prepare a tutorial video","last_modified":"2016-12-22T10:11:23Z","is_beginner":false,"id":6171884330680320,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **xwax**, a Digital Vinyl System (DVS).\n\nYou can find the sources on the project homepage: http://xwax.org/\n\nYou can also browse the sources on GitHub: https://github.com/xwax/xwax\n\nThe recipe should be added to haikuports at haikuports/media-sound/xwax/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","media-sound","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for xwax, a Digital Vinyl System (DVS).","last_modified":"2016-12-10T09:14:35Z","is_beginner":false,"id":6182896341614592,"categories":[1,2],"external_url":"http://wiki.xwax.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to port one of the games listed on the osgameclones page and write a recipe for it. http://osgameclones.com/ \n\nWarning: some games may already be ported, and some may not be easily portable because of missing dependencies. Choose wisely and tell the mentors which game you plan to work on when claiming the task.\n\nFor more information, see our wiki page [\"Haikuporter recipe task\"](https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe).\n\nFor some game porting tips also see: [\"Common Issues when Porting Games\"](https://github.com/haikuports/haikuports/wiki/Common-Issues-when-Porting-Games).\n\nIf a game requires several dependencies (libraries for example) that have not yet been ported, let us know, we can create tasks for those as well.","tags":["haikuports","porting","osgameclones","recipe","games"],"private_metadata":"","mentors":["scottmc2@gmail.com","adrianarroyocalle@gmail.com","waddlesplash@gmail.com","emrysnurmi@gmail.com","begasus@gmail.com","kacperkasper@gmail.com"],"max_instances":10,"name":"Create a recipe for a game listed on osgameclones (1)","last_modified":"2017-01-03T18:38:08Z","is_beginner":false,"id":6184910574321664,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BeTeX** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/BeTeX) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\n*** Check how the program looks when you set the system font to size 8, repeat this with the system font size set to 18.  Note any issues seen. ***\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","codedeepanshu@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BeTex and create new issues for bugs and enhancements","last_modified":"2017-01-04T21:35:22Z","is_beginner":false,"id":6189957947326464,"categories":[2,4,5],"external_url":"https://github.com/HaikuArchives/BeTeX"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to implement \"user tune\" as specified in https://xmpp.org/extensions/xep-0118.html. This extension allows to display the currently playing song from a media player application.\n\nTo complete this task, Jabber4Haiku should:\n- Download and display the currently playing song from remote users (in the buddy list and/or in the chat window)\n- Query MediaPlayer about the currently played song and send that on the XMPP network.","tags":["jabber4haiku","xmpp","network","c++","ipc"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP Client - \"now playing\" / \"user tune\" support","last_modified":"2016-12-22T13:25:10Z","is_beginner":false,"id":6192752110862336,"categories":[1],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/15"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://dev.haiku-os.org/ticket/3353\nSeems only part of POSIX spec for get_rlimit / set_rlimit is implemented, this task is to implement the missing part(s).","tags":[".h","posix","programming","header files"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Fix resource.h","last_modified":"2016-12-22T12:54:00Z","is_beginner":false,"id":6195054420951040,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://dev.haiku-os.org/ticket/13182\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as patch or diff on [Haiku's bug tracker](https://dev.haiku-os.org/ticket/13182). Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs: [1](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1), [2](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf), [3](https://api.haiku-os.org/layout_intro.html), [4](http://cgit.haiku-os.org/haiku/tree/src), [5](http://xref.plausible.coop/source/).","tags":["layout api","layout management","haiku api","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert SoundRecorder to use the Haiku layout API","last_modified":"2017-01-09T22:29:24Z","is_beginner":false,"id":6195327293980672,"categories":[1,2],"external_url":"https://dev.haiku-os.org/ticket/13182"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"We need a system wide password manager application that acts as a frontend for the keystore server. It should be able to be used by other applications on the system to store user details, such as for: WebPositive, HaikuTwitter, BlogPositive, FtpPositive, HaikuTodo etc.\n\nYou need to use BKeystore as a back end, but you can add support for [Password Safe](https://www.pwsafe.org) as well in a later task.\n\n----\n\nFor this first task you need to code a prototype user interface for the application. Don't worry, it doesn't need to be functional just yet, that's for later tasks. Just design the UI and create a rough road map of how you plan to code the application in later tasks.\n\nFor inspiration, look at the UI of the following apps: KWallet, enpass, 1Password, Gnome Seahorse, Apple Keychain Access, mSecure.","tags":["app","ui","security","c++","password manager"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Password Manager using Haiku's BKeystore (part 1)","last_modified":"2016-12-22T13:14:08Z","is_beginner":false,"id":6196816223666176,"categories":[1,2],"external_url":"https://dev.haiku-os.org/ticket/12812"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **MoleSvn**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/MoleSvn\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MoleSvn","last_modified":"2017-01-12T21:46:15Z","is_beginner":false,"id":6197838373453824,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to port and create a recipe at Haikuports for GNU Octave, an open-source high-level programming software similar to MATLAB.\n\nGNU Octave features a GUI in addition to a command line interface. Only the command line interface is required for this task.\n\nThe software may require some libraries first, if they aren't available at Haiku, please tell us and we will create a task for each library.\n\nHaikuports wiki page: [Build Recipes](https://github.com/haikuports/haikuports/wiki/HaikuPorter-BuildRecipes)\n\nGNU Octave source: https://ftp.gnu.org/gnu/octave/octave-4.2.0.tar.gz\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/octave/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipe","matlab","octave","math"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","adrianarroyocalle@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for GNU Octave","last_modified":"2016-11-29T16:03:14Z","is_beginner":false,"id":6201784024432640,"categories":[1],"external_url":"https://gnu.org/software/octave/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application.\n\nYou must work from the application created in parts 1-5: https://github.com/raefaldhia/Maps\n\nFor part 6 add support for issues 5 and 6, ability to resize the window and export the current window view to a file.","tags":["haiku api","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","valetolpegin@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Code a Maps application (part 6)","last_modified":"2017-01-04T16:26:47Z","is_beginner":false,"id":6207299683090432,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you need to convert our **[KVM](https://gist.github.com/richienyhus/7732629c46f364d8d13351640b89d02e)** article to markdown and upload your work to our [website rewrite project](https://github.com/haiku/website).\n\nIf you don't know markdown, it is very easy to learn. Just follow this [tutorial](http://www.markdowntutorial.com).","tags":["markdown","html","writing"],"private_metadata":"","mentors":["emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert ​KVM article to markdown and update","last_modified":"2016-11-30T00:39:27Z","is_beginner":false,"id":6211063066394624,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **johntheripper**.\n\n**John the Ripper** is a fast password cracker.\n\nYou can find the sources on the project homepage: http://www.openwall.com/john/\n\nThe recipe should be added to haikuports at haikuports/app-crypt/johntheripper/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","kushalspidermansingh@gmail.com"],"max_instances":1,"name":"Create a recipe for johntheripper.","last_modified":"2016-12-19T18:50:14Z","is_beginner":false,"id":6211225704726528,"categories":[1,5],"external_url":"http://www.openwall.com/john/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"FtpPositive is an FTP client for Haiku\n\nPick one of the open issues for FtpPositive solve it.\n\n- https://github.com/HaikuArchives/FtpPositive/\n- https://github.com/HaikuArchives/FtpPositive/issues\n\nTo complete this task you will need to:\n- Download and compile FtpPositive's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the FtpPositive repository on github so your changes are integrated.","tags":["layout api","ftp","rdef","bugs","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","jessicalhamilton@gmail.com","revolf@gmail.com"],"max_instances":3,"name":"Fix an open issue in FtpPositive","last_modified":"2016-12-22T13:13:00Z","is_beginner":false,"id":6212072081719296,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **FontBoy** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's [bug tracker](https://github.com/HaikuArchives/FontBoy/issues) to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","joel.r.sherrill@ieee.org","richienyhus@gmail.com"],"max_instances":1,"name":"Test FontBoy for Bugs and Issues.","last_modified":"2016-12-22T13:04:35Z","is_beginner":false,"id":6213998475214848,"categories":[4],"external_url":"https://github.com/HaikuArchives/FontBoy/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/ArtPaint/issues/45\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs:\n\n* [Introductory article, although a bit old...](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1)\n* [Article on creating UIs using the Layout API](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf)\n* [Layouting intro in the Haiku API docs](https://api.haiku-os.org/layout_intro.html)\n* [Apps and prefs in the Haiku tree](http://cgit.haiku-os.org/haiku/tree/src)\n* [Search the Haiku source tree](http://xref.plausible.coop/source/)","tags":["layout api","layout management","haiku api","c++"],"private_metadata":"","mentors":["valetolpegin@gmail.com","richienyhus@gmail.com","revolf@gmail.com","waddlesplash@gmail.com"],"max_instances":1,"name":"Convert ArtPaint to use the Haiku layout API. [BONUS]","last_modified":"2017-01-10T22:24:40Z","is_beginner":false,"id":6214856107622400,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for the game **No Gravity**.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/nogravity/\n\nYou can find an old BeOS port in its source code.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for No Gravity","last_modified":"2016-12-22T12:30:50Z","is_beginner":false,"id":6218346582245376,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/634"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **pngquant**.\n\nThis is an optimizer for PNG images, making them use less space and download faster.\n\nYou can find the sources on the project homepage: https://pngquant.org/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/pngquant/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","joel.r.sherrill@ieee.org","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for pngquant","last_modified":"2016-12-02T02:03:35Z","is_beginner":false,"id":6219004024717312,"categories":[1],"external_url":"https://pngquant.org/"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **BePDF** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for BePDF","last_modified":"2016-12-22T11:10:07Z","is_beginner":false,"id":6220600645255168,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libksba**.\n\nLibksba is a library to make the tasks of working with X.509 certificates, CMS data and related objects more easy.\n\nYou can find the sources on the project homepage: https://www.gnupg.org/related_software/libksba/\n\nThe recipe should be added to haikuports at haikuports/dev-libs/libksba/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","bvitruvio@gmail.com","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for libksba, a library for working with X.509 certificates.","last_modified":"2017-01-11T20:12:29Z","is_beginner":false,"id":6221343037063168,"categories":[1],"external_url":"https://www.gnupg.org/related_software/libksba/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"You will be ad hoc testing **BePodder** for bugs and other issues for this task. You will need to have the Haiku operating system installed and running in a VM or on your computer. Also you will need to have a nightly version of Haiku that includes a package management system and the HaikuDepot app store in order to download and install the application.\n\nYou will need to test the application to see if you can find any bugs in the software. Try to act like a normal user and do the things that they would do with the software. You will need to search the software's bug tracker to see if the bugs are known about and open new tickets for each bug on there if they are not know about.\n\nYou will also need to keep a record of what features/functions you tested and as well as the tickets that you opened. Plus it might be a good idea to take a screenshot of the bugs and issues that you find and just reference the relevant image in the report if the bug is difficult to describe.\n\nThen upload the report here, plus include the links to the bugs you have submitted and any images that you have created.\n\nYour job is to find new bugs, issues or even open enhancements tickets for new features. Therefore you can't use ones that others have already found, they have to be your own.\n\nYou need to find 8 new bugs or find 4 new bugs **as well as** create 4 new enhancements.\n\n[Check here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestAdHoc) for tips and tricks.","tags":["qa","testing","bugs","issues","enhancements"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","chirayudesai1@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Test BePodder for Bugs and Issues.","last_modified":"2016-12-22T12:55:29Z","is_beginner":false,"id":6225320814313472,"categories":[4],"external_url":"https://github.com/HaikuArchives/BePodder/issues"},{"status":1,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to compile MoleSvn and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"Get MoleSvn to run on Haiku","last_modified":"2016-12-27T03:59:28Z","is_beginner":false,"id":6227671962877952,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/MoleSvn"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **hidapi**.\n\nHIDAPI is a multi-platform library which allows an application to interface with USB and Bluetooth HID-Class devices.\n\nYou can find the sources on the project homepage: http://www.signal11.us/oss/hidapi/\n\nYou can also browse the sources on GitHub: http://github.com/signal11/hidapi\n\nThe recipe should be added to haikuports at haikuports/dev-libs/hidapi/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","dev-libs"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for hidapi.","last_modified":"2016-12-19T18:32:03Z","is_beginner":false,"id":6228314842726400,"categories":[1,5],"external_url":"http://github.com/signal11/hidapi"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"https://dev.haiku-os.org/ticket/5694\n\nhttp://pubs.opengroup.org/onlinepubs/9699919799/basedefs/pthread.h.html\n\nShould be easier when cross compiled from Linux, testing in Qemu.","tags":["barriers","posix","qemu","libroot","pthread"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Implement pthread barrriers","last_modified":"2016-12-23T07:47:26Z","is_beginner":false,"id":6229517322420224,"categories":[1],"external_url":"https://dev.haiku-os.org/ticket/5694"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BeAccessible**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BeAccessible\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["waddlesplash@gmail.com","emrysnurmi@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BeAccessible, a Microsoft Access like application for Haiku","last_modified":"2017-01-12T09:25:58Z","is_beginner":false,"id":6232186971750400,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **numptyphysics**.\n\nThis recipe was written during GCI2015 but didn't work due to a broken box2d.  The box2d recipe appears to have been fixed since then, so we should be able to get the numptyphysics recipe working again.  If you feel adventurous see if you can also write a recipe for the add-on levels pack.\nhttp://numptyphysics.garage.maemo.org/\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","recipe","games","physics"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Fix NumptyPhysics recipe","last_modified":"2016-12-22T12:29:23Z","is_beginner":false,"id":6232522256023552,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"FontBoy is a small application to show your installed fonts in Haiku\n\nPick one of the open issues for FontBoy and solve it.\nhttps://github.com/HaikuArchives/FontBoy/\nhttps://github.com/HaikuArchives/FontBoy/issues\n\nTo complete this task you will need to:\n- Download and compile FontBoy's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the FontBoy repository on github so your changes are integrated.","tags":["c++","fonts","bugs","issues"],"private_metadata":"","mentors":["valetolpegin@gmail.com","hannahypan@gmail.com","waddlesplash@gmail.com","revolf@gmail.com"],"max_instances":5,"name":"Fix a open issue in FontBoy","last_modified":"2017-01-02T03:50:32Z","is_beginner":false,"id":6233264303898624,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **msieve**.\n\nmsive is a C library implementing a suite of algorithms to factor large integers.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/msieve/\n\nThe recipe should be added to haikuports at haikuports/sci-mathematics/msieve/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","sci-mathematics","patching"],"private_metadata":"","mentors":["scottmc2@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for msieve.","last_modified":"2016-12-19T18:41:45Z","is_beginner":false,"id":6234574354907136,"categories":[1],"external_url":"https://sourceforge.net/projects/msieve/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Gadgeteer**.\n\n**Gadgeteer** is a command-line app that displays selected GUI controls in a panel and returns their values.\n\nYou can find the sources on the project homepage: http://www.goodeveca.net/beos/Gadgeteer_0.8.1_SRC.zip\n\nThe recipe should be added to haikuports at haikuports/haiku-misc/gadgeteer/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Gadgeteer","last_modified":"2016-12-31T20:53:43Z","is_beginner":false,"id":6237607363084288,"categories":[1,5],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **calcurse**, calendar and scheduling application for the command line.\n\nYou can find the sources on the project homepage: http://calcurse.org/\n\nThe recipe should be added to haikuports at haikuports/app-office/calcurse/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","app-office","patching","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","emrysnurmi@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for calcurse, a calendar and scheduling application for the command line.","last_modified":"2016-12-19T18:18:35Z","is_beginner":false,"id":6239250271961088,"categories":[1],"external_url":"http://calcurse.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/Globe\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs: [1](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1), [2](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf), [3](https://api.haiku-os.org/layout_intro.html), [4](http://cgit.haiku-os.org/haiku/tree/src), [5](http://xref.plausible.coop/source/).","tags":["layout management","c++","haikuapi"],"private_metadata":"","mentors":["waddlesplash@gmail.com","kushalspidermansingh@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Update Globe to make use of Layout Managament","last_modified":"2016-12-29T23:24:27Z","is_beginner":false,"id":6245476212932608,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Globe"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **figlet**.\n\nYou can find the recipe at haikuports/app-misc/figlet.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Fix recipe for figlet","last_modified":"2017-01-02T04:14:25Z","is_beginner":false,"id":6249048644255744,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **HaikuDepot** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","adrianarroyocalle@gmail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for HaikuDepot","last_modified":"2016-12-22T18:09:00Z","is_beginner":false,"id":6252133556944896,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BrainWash**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BrainWash\n\nHaiku screensavers go in haikuports/haiku-misc\nThere's a few screensaver recipes in there that you can use as a base for this one.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe\n\nhttps://github.com/HaikuArchives/BrainWash","tags":["recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for Haiku screensaver BrainWash","last_modified":"2017-01-10T08:27:43Z","is_beginner":false,"id":6252759059791872,"categories":[1],"external_url":"https://github.com/HaikuArchives/BrainWash"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **ZooKeeper**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/ZooKeeper\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for ZooKeeper","last_modified":"2017-01-12T19:16:32Z","is_beginner":false,"id":6256279993450496,"categories":[1],"external_url":"https://github.com/HaikuArchives/ZooKeeper"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **tinyptc**.\n\nTinyPTC is a minimal library for 2D display rendering.\n\nYou can find the sources in the sourceforge project page: https://sourceforge.net/projects/tinyptc/\n\nThe sources were already ported to BeOS and it should be possible to reuse that port for Haiku as well.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","haikuports","compiling","recipe","rendering"],"private_metadata":"","mentors":["waddlesplash@gmail.com","chirayudesai1@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Create a recipe for tinyptc","last_modified":"2016-12-22T11:14:33Z","is_beginner":false,"id":6263018016997376,"categories":[1],"external_url":"https://sourceforge.net/projects/tinyptc/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **JoystickUtilizer**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/JoystickUtilizer\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for JoystickUtilizer","last_modified":"2017-01-12T21:27:19Z","is_beginner":false,"id":6266082853650432,"categories":[1],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2016,"description":"Binder is a library to support cross-platform inter-process communication:\n https://github.com/HaikuArchives/OpenBinder\n\nThe goal of this task is just to fix up the build system so Binder can attempt to compile on Haiku. Although it will run into some big problems when compiling, these will be solved later in other tasks. Your only job is to fix up the makefiles and the C++ sourcecode so it will get to this stage and to change the build target from BeOS over to Haiku.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going.\n* Addind a COMPILING file with compiling instructions.","tags":["c++","build system"],"private_metadata":"","mentors":["richienyhus@gmail.com"],"max_instances":1,"name":"Get Binder to run on Haiku","last_modified":"2016-12-27T03:09:25Z","is_beginner":false,"id":6268797080043520,"categories":[1,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Install and Run HaikuPorter\nThis task will introduce you to HaikuPorter, the tool that builds software packages from so-called recipes. For this task you already need to run Haiku successfully.\n\nFor more information see our wiki \"[Install and run HaikuPorter](https://dev.haiku-os.org/wiki/GoogleCodeInTaskInstallHaikuporter)\".","tags":["haikuporter","install"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","pulkomandy@gmail.com","emrysnurmi@gmail.com","hannahypan@gmail.com","valetolpegin@gmail.com","jeromeduval@gmail.com","kacperkasper@gmail.com"],"max_instances":50,"name":"Install and run HaikuPorter","last_modified":"2016-12-22T10:23:57Z","is_beginner":false,"id":6271276763054080,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libopenmpt**.\n\n**libopenmpt** is a library to decode [tracked music files (modules) [wikipedia]](https://en.wikipedia.org/wiki/Module_file) into a raw PCM audio stream.\n\nYou can find the sources on the project homepage: https://lib.openmpt.org/libopenmpt/\n\nThe recipe should be added to haikuports at haikuports/media-sound/libopenmpt/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","joel.r.sherrill@ieee.org","bvitruvio@gmail.com"],"max_instances":1,"name":"Create a recipe for libopenmpt","last_modified":"2017-01-08T11:23:00Z","is_beginner":false,"id":6281396075102208,"categories":[1],"external_url":"https://lib.openmpt.org/libopenmpt/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"For this task you will need to create a test plan for the **DeskCalc** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for DeskCalc","last_modified":"2016-12-08T17:49:45Z","is_beginner":false,"id":6290496204832768,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The goal of this task is to compile Archiver and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\n* Any changes you needed to get things going (or none if it built without any changes)\n* Adding a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Get Archiver to run on Haiku","last_modified":"2017-01-03T18:09:45Z","is_beginner":false,"id":6296781476331520,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/Archiver"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"BSAP is currently an English-Polish dictionary application.\nThe goal of this task is to make sure the application can be compiled on Haiku. \n\n- Get the sources from the repository: https://github.com/ytmytm/beos-bsap\n- Try to follow the compiling instructions\n- Fix any problems you encounter\n- Make sure the binary runs\n- Submit a pull request with your changes","tags":["building","debug","abandonware","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","jessicalhamilton@gmail.com","chirayudesai1@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Get BSAP running on Haiku (dictionary/translation app)","last_modified":"2016-12-12T17:54:07Z","is_beginner":false,"id":6299548485943296,"categories":[1,5],"external_url":"https://github.com/ytmytm/beos-bsap"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"This series of task revolves around improving Jabber4Haiku, an XMPP client for BeOS.\n\nhttps://github.com/HaikuArchives/Jabber4Haiku\n\nThe client has basic functionality (contact list, sending and receiving messages, group chats) but could be improved with many advanced features.\n\nThe goal of this task is to add support for user avatars. The protocol to do so is specified in https://xmpp.org/extensions/xep-0084.html . Jabber4Haiku should get the capacity to:\n- Select an avatar for the local user, and share it on the XMPP network,\n- Download and display the avatar of remote contacts, in the contact list and/or the chat window.","tags":["xml","xmpp","jabber4haiku","network","c++"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com"],"max_instances":1,"name":"XMPP client - User avatars","last_modified":"2016-12-22T13:18:44Z","is_beginner":false,"id":6303120690774016,"categories":[1,2],"external_url":"https://github.com/HaikuArchives/Jabber4Haiku/issues/12"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **mbedtls**.\n\nmbed TLS (formerly known as PolarSSL) makes it trivially easy for developers to include cryptographic and SSL/TLS capabilities in their (embedded) products, facilitating this functionality with a minimal coding footprint.\n\nYou can find the sources on the project homepage: https://tls.mbed.org/\n\nThe recipe should be added to haikuports at haikuports/net-libs/mbedtls/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","net-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for mbedtls, a cryptographic library for embedded systems.","last_modified":"2016-12-06T17:01:28Z","is_beginner":false,"id":6308451925884928,"categories":[1],"external_url":"https://tls.mbed.org/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The CatKeys editor (https://github.com/puckipedia/BeLocalized) is an application used to translate other Haiku applications to different languages.\n\nThe goal of this task is to fix a bug in CatKey editor (from the list here: https://github.com/puckipedia/BeLocalized/issues).\n\nTo complete this task you will need to:\n- Download and compile the application sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the repository on github so your changes are integrated.\n- Comment on the issue you fixed with a link to your pull-request.","tags":["catkeys","bugs","c++","localization"],"private_metadata":"","mentors":["humdingerb@googlemail.com","jessicalhamilton@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"CatKeysEditor - fix an issue","last_modified":"2016-12-22T12:37:40Z","is_beginner":false,"id":6308593284415488,"categories":[1,2],"external_url":"https://github.com/puckipedia/BeLocalized/issues"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"The game [2048](https://github.com/TwoFX/Haiku2048) needs an icon, see [issue #2](https://github.com/TwoFX/Haiku2048/issues/2).\nYou'll have to create that using the application Icon-O-Matic that comes with Haiku. See the Haiku user guide for a short introduction. Follow the [Haiku icon guidelines](https://www.haiku-os.org/development/icon-guidelines/).\n\nPlay the game a few times to get an idea of how the icon should look like. Submit the icon as Icon-O-Matic file and PNG.","tags":["graphic design","icon","games","artwork"],"private_metadata":"","mentors":["humdingerb@googlemail.com","emrysnurmi@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create icon for 2048 game","last_modified":"2016-12-09T16:41:21Z","is_beginner":false,"id":6313795267854336,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **enchant**.\n\nYou can find the recipe at haikuports/app-text/enchant.\n\nThe fixed recipe should be added as pull request to haikuports at the same location.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Fix recipe for enchant","last_modified":"2017-01-02T04:10:30Z","is_beginner":false,"id":6330236411052032,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **2dPhysicsDemo**.\nAlso do a pull request on the 2dPhysicsDemo repo to add a .pld and makefile.  This can be done by loading the .prj file using Paladin and then saving it as a .pld and exporting a makefile.  Verify that you are able to build and run 2dPhysicsDemo using Paladin, and from the command line using the makefile.  Then commit those changes.  Once those changes are accepted, finish up the recipe to build using the new makefile you just created.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/2dPhysicsDemo\n\n\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for 2dPhysicsDemo","last_modified":"2017-01-12T09:25:49Z","is_beginner":false,"id":6331709953933312,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for dvdstyler.\n\nDVDStyler is a cross-platform free DVD authoring application that makes possible for video enthusiasts to create professional-looking DVDs.\n\nYou can find the sources on the project homepage: http://www.dvdstyler.org/\n\n**WARNING: dvdstyler may depend on other packages that are not yet available on HaikuPorts, so it is not yet known whether or not this task may be completed without additional work on other recipes.**\n\nThe recipe should be added to haikuports at haikuports/media-video/dvdstyler/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-video"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","dcatthaiku@gmail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Create a recipe for dvdstyler, a DVD authoring application.","last_modified":"2016-12-07T08:42:48Z","is_beginner":false,"id":6335419515928576,"categories":[1,2,5],"external_url":"http://www.dvdstyler.org/"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"BeVexed is puzzle game for Haiku.\n\nPick one of the open issues for BeVexed and solve it.\nhttps://github.com/HaikuArchives/BeVexed\nhttps://github.com/HaikuArchives/BeVexed/issues\n\nTo complete this task you will need to:\n- Download and compile BeVexed's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the BeVexed repository on github so your changes are integrated.","tags":["games","c++","games-puzzle","bugs"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","hannahypan@gmail.com","valetolpegin@gmail.com","humdingerb@googlemail.com"],"max_instances":5,"name":"Fix an open issue in BeVexed","last_modified":"2016-12-22T12:31:22Z","is_beginner":false,"id":6360044801097728,"categories":[1,2,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Create and submit a patch that add a commandline option to play urls and files.\n\nTicket:\n\nhttps://dev.haiku-os.org/ticket/9793","tags":["mediaplayer","streaming","programming","c++"],"private_metadata":"","mentors":["kacperkasper@gmail.com","bvitruvio@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Improve Haiku Media Player: Add commandline options","last_modified":"2016-12-08T07:44:32Z","is_beginner":false,"id":6361900646400000,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"BeServed is a cross-platform network file sharing, designed around BeOS. \n\nThe goal of this task is to compile BeServed and make sure it runs on Haiku. The makefiles and the C++ sourcecode may need some fixes.\n\nTo complete this task, you should submit a pull request to the github repository with:\n\nAny changes you needed to get things going (or none if it built without any changes)\nAddind a COMPILING file with compiling instructions","tags":["c++","build system"],"private_metadata":"","mentors":["waddlesplash@gmail.com","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Get BeServed to run on Haiku","last_modified":"2017-01-04T17:49:38Z","is_beginner":false,"id":6368741640110080,"categories":[1,5],"external_url":"https://github.com/HaikuArchives/BeServed"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **iec16022**.\n\niec16022 is a program and a library to produce 2D barcodes known as DataMatrix. It is **not** the QR-code, although it servers a similar purpose.\n\nUnlike the libdmtx library, which can both generate and decode 2D barcodes, iec16022 can only generate these barcodes.\n\nYou can find the sources on the project homepage: https://datenfreihafen.org/projects/iec16022.html\n\nYou can also browse the sources on GitHub: https://github.com/rdoeffinger/iec16022\n\nThe recipe should be added to haikuports at haikuports/media-gfx/iec16022/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","kushalspidermansingh@gmail.com","codedeepanshu@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for iec16022.","last_modified":"2017-01-06T20:28:41Z","is_beginner":false,"id":6391724926566400,"categories":[1],"external_url":"https://datenfreihafen.org/projects/iec16022.html"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/WheresMyMouse/issues/2\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs:\n\n* [Introductory article, although a bit old...](https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1)\n* [Article on creating UIs using the Layout API](https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf)\n* [Layouting intro in the Haiku API docs](https://api.haiku-os.org/layout_intro.html)\n* [Apps and prefs in the Haiku tree](http://cgit.haiku-os.org/haiku/tree/src)\n* [Search the Haiku source tree](http://xref.plausible.coop/source/)","tags":["layout api","layout management","haiku api","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","hannahypan@gmail.com","pulkomandy@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Convert WheresMyMouse to use the Haiku layout API","last_modified":"2017-01-09T22:37:10Z","is_beginner":false,"id":6428275985350656,"categories":[1,2],"external_url":null},{"status":1,"time_to_complete_in_days":6,"program_year":2016,"description":"The goal of this task is to write a recipe for **libgpod**.\n\nlibgpod is a shared library to access the contents of an iPod.\n\nYou can find the sources on the project homepage: http://gtkpod.org/libgpod/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libgpod/.\n\n**Important:** This task depends on two other tasks: \n_[Create a recipe for libusbmuxd](tasks/5371602145378304/)_ and _[Create a recipe for libimobiledevice](tasks/4914925520551936/)_.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for libgpod (needs libusbmuxd and libimobiledevice) (probably a hard task)","last_modified":"2016-11-28T21:10:40Z","is_beginner":false,"id":6442663909785600,"categories":[1],"external_url":"http://gtkpod.org/libgpod/"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **AliveJournal**.\n\nYou can find the sources on the project homepage: https://github.com/grahams/alivejournal\n\nThe recipe should be added to haikuports at haikuports/haiku-apps/alivejournal/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for AliveJournal, a LiveJournal client for Haiku.","last_modified":"2016-12-31T20:57:46Z","is_beginner":false,"id":6446703014051840,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/720"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **neofetch**, a CLI system information tool written in BASH.\n\nYou can find the sources on GitHub: https://github.com/dylanaraps/neofetch\n\nThe recipe should be added to haikuports at haikuports/app-misc/neofetch/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","app-misc"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for neofetch.","last_modified":"2016-12-06T10:57:41Z","is_beginner":false,"id":6456194969370624,"categories":[1,5],"external_url":"https://github.com/dylanaraps/neofetch"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **zstd**, pronounced Zstandard.\n\nZstandard is a real-time compression algorithm, providing high compression ratios\n\nYou can find the sources on the project homepage: https://facebook.github.io/zstd/\n\nYou can also browse the sources on GitHub: https://github.com/facebook/zstd\n\nThe recipe should be added to haikuports at haikuports/app-arch/zstd/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-arch"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for zstd, pronounced Zstandard, a real-time compression algorithm.","last_modified":"2017-01-04T17:55:44Z","is_beginner":false,"id":6473618835898368,"categories":[1],"external_url":"https://github.com/facebook/zstd"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **VcardPeople**.\n\nThe VCard format is an open standard used for storing and interchanging personal (\"Business Card\") data by applications on many platforms. The two small programs in this packaga will convert between this format and Haiku 'Person' files, making it possible to share contact data between Haiku and other platforms.\n\nYou can find the sources on the project homepage: http://www.goodeveca.net/beos/vcardpeople.zip\n\nThe recipe should be added to haikuports at haikuports/haiku-misc/vcardpeople/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for VcardPeople, two small contact converters","last_modified":"2016-12-31T20:53:19Z","is_beginner":false,"id":6477437934239744,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/735"},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"For this task you will need to create a test plan for the **Pe** application.\n\nYou can find help on understanding what test plans are and tips and tricks on writing them by [clicking here](https://dev.haiku-os.org/wiki/GoogleCodeInTaskTestManual). It is highly recommended that you read the information on that page.\n\nYou will need to first investigate the application and look at its features, functions and capabilities. To do this you will need to have a running instance of the Haiku operating system.\n\nFor each function that you find, you will need to write a test that includes the *User Action*;  any *Preconditions* that you find; the step by step instructions on how to run the test and the *expected results* of what the feature is meant to do. Each feature test should be independent of the other tests, that is it should not rely on other things done in previous tests as it should be self contained.\n\nYou can view an example of a test plan for the Haiku application MidiPlayer on [Google Docs](https://docs.google.com/spreadsheets/d/15gO6HZu29Y5H9CwBrxvSs0HLezMeexfWibgfov1jf9c/edit?usp=drive_web) (this this version has been tweaked to improve its viewability). You can download a [raw version of it here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/TestSuite_haiku-apps.csv) and a [simplified template here](https://dev.haiku-os.org/raw-attachment/wiki/GoogleCodeInTaskTestManual/LT_Import_Sample.csv).\n\nYou will need to submit your work as a .csv file, which can be created by spreadsheet application or a text editor and have it include the columns \"User Action\", \"Precondition\", \"Steps\" and \"Expected Results\". \n\nYour mentor will need to upload the .csv file to Haiku's new qa website, although if you are planning to do a number of test plan writing tasks, we can give you an account for the website.","tags":["qa","testing","bugs"],"private_metadata":"","mentors":["dcatthaiku@gmail.com","emrysnurmi@gmail.com","revolf@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write a QA test plan for Pe","last_modified":"2016-12-22T10:16:58Z","is_beginner":false,"id":6495643505786880,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **BePhoneBook**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/BePhoneBook\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for BePhoneBook, a phone book manager.","last_modified":"2017-01-09T22:32:20Z","is_beginner":false,"id":6496331084333056,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **sqlitebrowser**, the database browser for SQLite.\n\nYou can find the sources on the project homepage: http://sqlitebrowser.org/\n\nYou can also browse the sources on GitHub: https://github.com/sqlitebrowser/sqlitebrowser\n\nThe recipe should be added to haikuports at haikuports/dev-db/sqlitebrowser/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","dev-db","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","waddlesplash@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":1,"name":"Create a recipe for sqlitebrowser, the DB Browser for SQLite.","last_modified":"2016-12-23T19:08:48Z","is_beginner":false,"id":6501240240340992,"categories":[1],"external_url":"https://github.com/sqlitebrowser/sqlitebrowser"},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"A Haiku developer 'DarkWyrm' wrote a book a while back that has easy to follow lessons introducing the reader to programming with Haiku's API.\nA working knowledge of C++ is required.\n\nYour task is to follow the lessons and complete some of its assignments.\n\n[All details at our wiki.](https://dev.haiku-os.org/wiki/GoogleCodeInTaskBook2)\n\n/ Since this task requires running in Haiku please be sure you have Haiku up and running. If you haven't yet, then consider doing our \"Install and run Haiku\" task first./","tags":["haiku api","programming","book","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","codedeepanshu@gmail.com","waddlesplash@gmail.com","emrysnurmi@gmail.com","hannahypan@gmail.com","jessicalhamilton@gmail.com"],"max_instances":20,"name":"Programming with Haiku (book 2)","last_modified":"2016-12-22T10:25:54Z","is_beginner":false,"id":6502900020805632,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Haikuporter is our tool to fetch, patch and build source code and create Haiku packages that can then be put into a repository to be installed by the user via HaikuDepot.\n\nFor this task, you have to update a haikuporter recipe, which is a kind of script that automates this process. Depending on the targeted software you may need these skills:\n\nSome knowledge of C, C++, git and bash\nKnowledge of the GNU autotools and/or cmake\nThe package may require some patching to get it to work on Haiku\n\nInstall HaikuPorter and run haikuporter --lint\nThis will show a lot of recipes that are currently not working. For this task pick five of these \"broken\" recipes and convert them to have a properly formatted and working recipe that builds .hpkg files.\n\nBefore submitting your work, make sure to test your recipe by creating a hpkg package from it with haikuporter. Haiku's Expander app can open hpkg files to inspect their contents.\n\nTake care to include all required licenses and copyright entries.\n\nBe sure to update the SUMMARY to be 70 characters or less, and have a DESCRIPTION that is 2-4 sentences long that describes what the package is.  This is what shows up in HaikuDepot when users are looking to program to install.\n\nWhen done, submit your work as a github pull request to Haikuports and share the link to the pull request here so we can review it.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","humdingerb@googlemail.com","jessicalhamilton@gmail.com","fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com"],"max_instances":10,"name":"Get the Lint out of 2 Haikuports recipes failing for [NO SUMMARY] (1)","last_modified":"2017-01-07T08:52:20Z","is_beginner":false,"id":6503824762077184,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **p11-kit**.\n\nThis software provides a way to load and enumerate PKCS#11 modules. \n\nYou can find the sources on the project homepage: https://p11-glue.freedesktop.org/p11-kit.html\n\nThe recipe should be added to haikuports at haikuports/app-crypt/p11-kit/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","app-crypt"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for p11-kit, a cryptography-related software to discover PKCS#11 modules. (probably a hard task)","last_modified":"2016-12-19T18:22:07Z","is_beginner":false,"id":6508104581644288,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"Code a map application similar to GNOME Maps using OpenStreetMap as a data source.\n\nThis is a multi-part task, there will be more tasks adding more functionalities to the application.\n\nYou must work from the application created in parts 1 and 2: https://github.com/raefaldhia/Maps\n\nFor this third part, the goal is to implement zooming and panning. You will need to:\n\n- Listen to mouse events (mouse wheel for zooming, drags for panning)\n- Request a new tile from the server and render it accordingly\n\nTask continues in part 4 with searching features (or something else if you have suggestions).","tags":["openstreetmap","map","geo","c++"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","chirayudesai1@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Code a map application (Part 3)","last_modified":"2016-12-10T11:04:22Z","is_beginner":false,"id":6516109534560256,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **libpgf**.\n\nlibpgf is an implementation of the Progressive Graphics File (PGF) format and allows to load, handle and manipulate images in that format.\n\nYou can find the sources on the project homepage: http://www.libpgf.org/\n\nThe recipe should be added to haikuports at haikuports/media-libs/libpgf/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","media-libs","recipe","patching"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","jessicalhamilton@gmail.com"],"max_instances":1,"name":"Create a recipe for libpgf","last_modified":"2017-01-06T20:29:59Z","is_beginner":false,"id":6521847671685120,"categories":[1],"external_url":"http://www.libpgf.org/"},{"status":2,"time_to_complete_in_days":4,"program_year":2016,"description":"Before claiming this task, you must first complete the research task to learn Icon-O-Matic.\n\nYour task is to create a tutorial video for Icon-O-Matic. Basis is the result of the research task [Research Icon-O-Matic to prepare a tutorial video](https://codein.withgoogle.com/tasks/6171884330680320/).\n\nThe video should have a 720p resolution, all material seen or heard have to be under a suitable creative commons license.\n\nIf the video gets over 10 minutes, we can do this in parts and create follow-up tasks. If so, the parts should be divided into roughly equal sizes and more or less self contained.","tags":["icon-o-matic","video","tutorial","icons"],"private_metadata":"","mentors":["scottmc2@gmail.com","humdingerb@googlemail.com","emrysnurmi@gmail.com"],"max_instances":3,"name":"Create a tutorial video for Icon-O-Matic.","last_modified":"2016-12-22T10:11:20Z","is_beginner":false,"id":6531814501908480,"categories":[3],"external_url":"https://discuss.haiku-os.org/t/contents-of-icon-o-matic-tutorial-video/4462"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Scooby**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/Scooby\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","recipes"],"private_metadata":"","mentors":["giankonstantinidis@gmail.com","fbrosson2014-gci@yahoo.fr","emrysnurmi@gmail.com","kushalspidermansingh@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for Scooby","last_modified":"2017-01-10T17:35:14Z","is_beginner":false,"id":6563818308108288,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"https://github.com/HaikuArchives/Hare/issues/1\n\nhttps://www.haiku-os.org/documents/dev/laying_it_all_out_part_1\n\nThere are still many apps doing 'manual layouting'. Your task is to rewrite those parts of the code to use the layout management that Haiku introduced a few years back.\n\nDepending on the complexity of the application, this can turn out to be a fairly demanding task that requires basic C++ knowledge.\n\nSubmit your work as pull-request of your fork on github. Additionally, upload screenshots of the app running with a font size of 8 and 24 (set in Appearance preferences).\n\nSome info and docs\n\n[https://www.haiku-os.org/documents/dev/laying_it_all_out_part_1](Introductory article, although a bit old...)\n[https://www.haiku-os.org/files/CreatingUIsusingtheLayoutAPI.pdf](Article on creating UIs using the Layout API)\n[https://api.haiku-os.org/layout_intro.html](Layouting intro in the Haiku API docs)\n[http://cgit.haiku-os.org/haiku/tree/src](Apps and prefs in the Haiku tree)\n[http://xref.plausible.coop/source/](Search the Haiku source tree)","tags":["layout management","haiku api","c++"],"private_metadata":"","mentors":["scottmc2@gmail.com","waddlesplash@gmail.com","valetolpegin@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Update Hare to use layout management [BONUS]","last_modified":"2017-01-07T08:51:16Z","is_beginner":false,"id":6565023348424704,"categories":[1,2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](https://codein.withgoogle.com/tasks/5699798581641216/)\n* [Install and run HaikuPorter](https://codein.withgoogle.com/dashboard/tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **ZDoom**.\n\nZDoom is an engine for playing the game Doom, and other first person shooter games. You can find more information on the home page: http://zdoom.org/About\n\nA follow-up task will be about packaging the Freedoom level set to play with this engine.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["porting","game","recipe","c","fps"],"private_metadata":"","mentors":["adrianarroyocalle@gmail.com","chirayudesai1@gmail.com","morrison@opencax.org"],"max_instances":1,"name":"Port zdoom and create a recipe for it.","last_modified":"2016-12-22T13:21:00Z","is_beginner":false,"id":6581675934875648,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **CommandTimer**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/CommandTimer\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","beos"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for CommandTimer","last_modified":"2017-01-09T22:34:53Z","is_beginner":false,"id":6582230430253056,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2016,"description":"The goal of this task is to create a recipe for [0 A.D.](https://play0ad.com/) a free, open-source game of ancient warfare.\n\nYou can find the sources on the project homepage: https://play0ad.com/download/\n\nThe recipe should be added to haikuports at haikuports/games-strategy/zero_ad\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe.","tags":["haikuports","porting","recipe","games","games-strategy"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","kacperkasper@gmail.com","emrysnurmi@gmail.com"],"max_instances":1,"name":"Create a recipe for 0 A.D. game","last_modified":"2016-12-22T12:51:46Z","is_beginner":false,"id":6582530633367552,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":7,"program_year":2016,"description":"There are several open issues with our hardware compatibility web app. This app was written during Google Code In 2015.  Select from the list of open issues and discuss with your mentor before starting to work on this one.  Agree which issue or issues you plan to work first and let us know. Then fix it.\n\nIssues List on github:\nhttps://github.com/DarkmatterVale/Haiku-Configuration-Repo/issues","tags":["python","hardware","haiku configuration","web app"],"private_metadata":"","mentors":["valetolpegin@gmail.com","kacperkasper@gmail.com","humdingerb@googlemail.com"],"max_instances":5,"name":"Fix a bug in our web app that records hardware compatibility","last_modified":"2016-12-22T13:07:20Z","is_beginner":false,"id":6582801042243584,"categories":[1,2,3,4,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **Csound**.\n\nYou can find the sources on the project homepage: https://github.com/csound/csound\n\nYou can find an old BeOS port at HaikuPorts:  https://github.com/haikuports/haikuports/files/322194/csound-4.23-beos-src.zip\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for Csound","last_modified":"2016-12-22T12:30:18Z","is_beginner":false,"id":6583846688522240,"categories":[1,5],"external_url":"https://github.com/haikuports/haikuports/issues/651"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **MAR**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/MAR\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for MAR","last_modified":"2017-01-12T21:45:29Z","is_beginner":false,"id":6586676660928512,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **A'dam Music Composer**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/AMC\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["fbrosson2014-gci@yahoo.fr","waddlesplash@gmail.com","humdingerb@googlemail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for A'dam Music Composer","last_modified":"2017-01-09T22:36:33Z","is_beginner":false,"id":6591598156578816,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **pegtl**.\n\nThe Parsing Expression Grammar Template Library (PEGTL) is a zero-dependency C++11 header-only library for creating parsers according to a [Parsing Expression Grammar](https://en.wikipedia.org/wiki/Parsing_expression_grammar) (PEG).\n\nYou can find the sources on the project homepage: https://github.com/ColinH/PEGTL\n\nThe recipe should be added to haikuports at haikuports/dev-libs/pegtl/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","dev-libs"],"private_metadata":"","mentors":["jeromeduval@gmail.com","fbrosson2014-gci@yahoo.fr","revolf@gmail.com"],"max_instances":1,"name":"Create a recipe for pegtl, the Parsing Expression Grammar Template Library.","last_modified":"2016-12-31T20:52:48Z","is_beginner":false,"id":6600229186961408,"categories":[1],"external_url":"https://github.com/ColinH/PEGTL"},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"BeCasso was posted to github by orangejua, but no new commits have been made there since 2013.  There's a pending patch that may or may not be helpful, it needs to be reviewed updated and submitted as a pull request.  Also any commits on the orangejua repo that are newer than the ones on HaikuArchives should also be carried over to HaikuArchives.\nhttps://github.com/orangejua/Becasso/issues\nhttps://github.com/HaikuArchives/BeCasso\n\nThe haikuports recipe should then be updated to use the HaikuArchives repo instead of the orangejua one.","tags":["github","c++"],"private_metadata":"","mentors":["waddlesplash@gmail.com","humdingerb@googlemail.com","valetolpegin@gmail.com"],"max_instances":1,"name":"Fix BeCasso [BONUS]","last_modified":"2017-01-05T20:50:24Z","is_beginner":false,"id":6610992249176064,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":6,"program_year":2016,"description":"Slayer is a \"Process controller (with extra features!) in a window.\"\n\nPick one of the open issues for Slayer and solve it.\nhttps://github.com/HaikuArchives/Slayer/\nhttps://github.com/HaikuArchives/Slayer/issues\n\nTo complete this task you will need to:\n- Download and compile Slayer's sources,\n- Run the app and reproduce the bug,\n- Change the code to fix the problem,\n- Test the app again to make sure the problem is gone\n- Make a pull request or submit a patch to the Slayer repository on github so your changes are integrated.","tags":["slayer","c++","process controller","bugs","issues"],"private_metadata":"","mentors":["waddlesplash@gmail.com","pulkomandy@gmail.com","humdingerb@googlemail.com"],"max_instances":4,"name":"Fix a open issue in Slayer","last_modified":"2016-12-29T23:20:41Z","is_beginner":false,"id":6627393856864256,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"*Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nIf you are new to Haiku then you should probably start with these tasks:\n* [[New to Haiku? Do this one first] Install and Run Haiku](tasks/5699798581641216/)\n* [Install and run HaikuPorter](tasks/6271276763054080/)\n\nThe goal of this task is to write a recipe for **UltraEncode**.\n\nYou can find the sources on the project homepage: \nhttps://github.com/HaikuArchives/UltraEncode\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe"],"private_metadata":"","mentors":["jeromeduval@gmail.com","kacperkasper@gmail.com","pulkomandy@gmail.com","fbrosson2014-gci@yahoo.fr","richienyhus@gmail.com"],"max_instances":1,"name":"Create a recipe for UltraEncode","last_modified":"2017-01-12T21:44:12Z","is_beginner":false,"id":6692270579384320,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"http://api.haiku-os.org","tags":["keystore","docs","haiku api","c++"],"private_metadata":"","mentors":["joel.r.sherrill@ieee.org","chirayudesai1@gmail.com","richienyhus@gmail.com"],"max_instances":1,"name":"Write API documentation for Keystore","last_modified":"2016-12-22T12:49:12Z","is_beginner":false,"id":6699734781657088,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2016,"description":"**Haiku** is a UNIX-like open source operating system that provides a tool called **_haikuporter_** to build 3rd party open source software.\n\nA **_recipe_** in Haiku is a text file that the **_[haikuporter](https://github.com/haikuports/haikuporter) _** tool reads in order to build open source software and create packages for it.\nThe collection of recipes that may be built by haikuporter is called **_[HaikuPorts](https://github.com/haikuports/haikuports)_**.\n\nThe goal of this task is to write a recipe for **apngopt**, an optimizer for animations in the APNG format.\n\nYou can find the sources on the project homepage: https://sourceforge.net/projects/apng/\n\nThe recipe should be added to haikuports at haikuports/media-gfx/apngopt/.\n\nImportant: please read the generic instructions for \"recipe\" tasks, as we have a lot of these: https://dev.haiku-os.org/wiki/GoogleCodeInTaskRecipe","tags":["haikuports","porting","recipe","patching","media-gfx"],"private_metadata":"","mentors":["jeromeduval@gmail.com","dcatthaiku@gmail.com","fbrosson2014-gci@yahoo.fr"],"max_instances":1,"name":"Create a recipe for apngopt","last_modified":"2017-01-11T20:11:49Z","is_beginner":false,"id":6744512869171200,"categories":[1],"external_url":"https://sourceforge.net/projects/apng/"}]}